//using System;
//using System.Collections.Generic;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Metadata;
//using System.Configuration;

//namespace AccumapDataProcessor.Models
//{
//    public partial class AZUPSQLP01Context : DbContext
//    {
//        public AZUPSQLP01Context()
//        {
//        }

//        public AZUPSQLP01Context(DbContextOptions<AZUPSQLP01Context> options)
//            : base(options)
//        {
//        }

//        public virtual DbSet<AdfcopyGeneratedExternalTable41cb5967A8fe487dB0887e2a15ecbbd6> AdfcopyGeneratedExternalTable41cb5967A8fe487dB0887e2a15ecbbd6s { get; set; } = null!;
//        public virtual DbSet<BaTable> BaTables { get; set; } = null!;
//        public virtual DbSet<BatteryFacility> BatteryFacilities { get; set; } = null!;
//        public virtual DbSet<BatteryMaster> BatteryMasters { get; set; } = null!;
//        public virtual DbSet<CBase> CBases { get; set; } = null!;
//        public virtual DbSet<COperCapl81> COperCapl81s { get; set; } = null!;
//        public virtual DbSet<COperCapl90> COperCapl90s { get; set; } = null!;
//        public virtual DbSet<CServiceFee> CServiceFees { get; set; } = null!;
//        public virtual DbSet<CServiceLoc> CServiceLocs { get; set; } = null!;
//        public virtual DbSet<CSub> CSubs { get; set; } = null!;
//        public virtual DbSet<ChargeType> ChargeTypes { get; set; } = null!;
//        public virtual DbSet<CheckOnstreamDateBudget> CheckOnstreamDateBudgets { get; set; } = null!;
//        public virtual DbSet<ControlGroup> ControlGroups { get; set; } = null!;
//        public virtual DbSet<ControlGroupAmendmentHist> ControlGroupAmendmentHists { get; set; } = null!;
//        public virtual DbSet<ControlGroupHierarchy> ControlGroupHierarchies { get; set; } = null!;
//        public virtual DbSet<ControlGroupMaster> ControlGroupMasters { get; set; } = null!;
//        public virtual DbSet<CteTStgMarketingFlownetHierarchy> CteTStgMarketingFlownetHierarchies { get; set; } = null!;
//        public virtual DbSet<CteVDimScenarioLeaseopsBcd> CteVDimScenarioLeaseopsBcds { get; set; } = null!;
//        public virtual DbSet<CteVDimScenarioLeaseopsBcdCurPriorCte> CteVDimScenarioLeaseopsBcdCurPriorCtes { get; set; } = null!;
//        public virtual DbSet<CteVDimSourceScenarioFinanceScenarioLevel> CteVDimSourceScenarioFinanceScenarioLevels { get; set; } = null!;
//        public virtual DbSet<CteVDimSourceScenarioFinanceScenarioLevels20220307> CteVDimSourceScenarioFinanceScenarioLevels20220307s { get; set; } = null!;
//        public virtual DbSet<CteVDimSourceScenarioFinanceScenarioLevelsOi> CteVDimSourceScenarioFinanceScenarioLevelsOis { get; set; } = null!;
//        public virtual DbSet<CteVDimValnavCurrentPriorBudgetScenarioSource> CteVDimValnavCurrentPriorBudgetScenarioSources { get; set; } = null!;
//        public virtual DbSet<CteVDimValnavCurrentPriorBudgetScenarioSource20210104> CteVDimValnavCurrentPriorBudgetScenarioSource20210104s { get; set; } = null!;
//        public virtual DbSet<CteVDimValnavScenarioBcdCurPrior> CteVDimValnavScenarioBcdCurPriors { get; set; } = null!;
//        public virtual DbSet<CteVDimValnavScenarioBcdVar> CteVDimValnavScenarioBcdVars { get; set; } = null!;
//        public virtual DbSet<CteVDimValnavScenarioBcdWbud> CteVDimValnavScenarioBcdWbuds { get; set; } = null!;
//        public virtual DbSet<CteVQbyteAccountHierarchySource> CteVQbyteAccountHierarchySources { get; set; } = null!;
//        public virtual DbSet<CteVQbyteAccountHierarchySourceFinance> CteVQbyteAccountHierarchySourceFinances { get; set; } = null!;
//        public virtual DbSet<CteVValnavNetbackAccount> CteVValnavNetbackAccounts { get; set; } = null!;
//        public virtual DbSet<Cteak> Cteaks { get; set; } = null!;
//        public virtual DbSet<CustomGroupingsLeaf> CustomGroupingsLeaves { get; set; } = null!;
//        public virtual DbSet<DDetail> DDetails { get; set; } = null!;
//        public virtual DbSet<DXref> DXrefs { get; set; } = null!;
//        public virtual DbSet<DataSourceTable> DataSourceTables { get; set; } = null!;
//        public virtual DbSet<DeliverySystem> DeliverySystems { get; set; } = null!;
//        public virtual DbSet<DeliverySystemMaster> DeliverySystemMasters { get; set; } = null!;
//        public virtual DbSet<DetailLineItemsArar> DetailLineItemsArars { get; set; } = null!;
//        public virtual DbSet<DetailLineItemsArarBackup> DetailLineItemsArarBackups { get; set; } = null!;
//        public virtual DbSet<DimDate> DimDates { get; set; } = null!;
//        public virtual DbSet<DimDate1> DimDates1 { get; set; } = null!;
//        public virtual DbSet<DivisionOfInterest> DivisionOfInterests { get; set; } = null!;
//        public virtual DbSet<DoiMaster> DoiMasters { get; set; } = null!;
//        public virtual DbSet<DoiOwner> DoiOwners { get; set; } = null!;
//        public virtual DbSet<EntityType> EntityTypes { get; set; } = null!;
//        public virtual DbSet<ExistingObj> ExistingObjs { get; set; } = null!;
//        public virtual DbSet<Facility> Facilities { get; set; } = null!;
//        public virtual DbSet<FacilityChargeFormula> FacilityChargeFormulas { get; set; } = null!;
//        public virtual DbSet<FcCalcFormulaDetail> FcCalcFormulaDetails { get; set; } = null!;
//        public virtual DbSet<FcExpenseIncomeReport> FcExpenseIncomeReports { get; set; } = null!;
//        public virtual DbSet<FcFormulaMaster> FcFormulaMasters { get; set; } = null!;
//        public virtual DbSet<FcFormulaRetrieval> FcFormulaRetrievals { get; set; } = null!;
//        public virtual DbSet<FiSubmission> FiSubmissions { get; set; } = null!;
//        public virtual DbSet<GgsFacility> GgsFacilities { get; set; } = null!;
//        public virtual DbSet<GgsMaster> GgsMasters { get; set; } = null!;
//        public virtual DbSet<GroupDataFromProd> GroupDataFromProds { get; set; } = null!;
//        public virtual DbSet<IndianReserf> IndianReserves { get; set; } = null!;
//        public virtual DbSet<IndianReserveMaster> IndianReserveMasters { get; set; } = null!;
//        public virtual DbSet<IndianReserveWellDetail> IndianReserveWellDetails { get; set; } = null!;
//        public virtual DbSet<IndianRoyaltyEntity> IndianRoyaltyEntities { get; set; } = null!;
//        public virtual DbSet<InjectionFacility> InjectionFacilities { get; set; } = null!;
//        public virtual DbSet<InjectionMaster> InjectionMasters { get; set; } = null!;
//        public virtual DbSet<IvCcNumWorkingInterest> IvCcNumWorkingInterests { get; set; } = null!;
//        public virtual DbSet<IvQbyteCostCentreLegal> IvQbyteCostCentreLegals { get; set; } = null!;
//        public virtual DbSet<IvVendorInvoice> IvVendorInvoices { get; set; } = null!;
//        public virtual DbSet<MarketMasterDisposition> MarketMasterDispositions { get; set; } = null!;
//        public virtual DbSet<MarketMasterPurchPrice> MarketMasterPurchPrices { get; set; } = null!;
//        public virtual DbSet<MarketMasterPurchaser> MarketMasterPurchasers { get; set; } = null!;
//        public virtual DbSet<ObjectRow> ObjectRows { get; set; } = null!;
//        public virtual DbSet<OwnerGovernment> OwnerGovernments { get; set; } = null!;
//        public virtual DbSet<OwnerMaster> OwnerMasters { get; set; } = null!;
//        public virtual DbSet<PaSplitsCurrent> PaSplitsCurrents { get; set; } = null!;
//        public virtual DbSet<PaSplitsHistory> PaSplitsHistories { get; set; } = null!;
//        public virtual DbSet<Package> Packages { get; set; } = null!;
//        public virtual DbSet<ParseHierarchyPath> ParseHierarchyPaths { get; set; } = null!;
//        public virtual DbSet<ParseHierarchyPath20200612> ParseHierarchyPath20200612s { get; set; } = null!;
//        public virtual DbSet<ParseHierarchyPath20220307> ParseHierarchyPath20220307s { get; set; } = null!;
//        public virtual DbSet<ParseHierarchyPath220220307> ParseHierarchyPath220220307s { get; set; } = null!;
//        public virtual DbSet<ParseHierarchyPathOi> ParseHierarchyPathOis { get; set; } = null!;
//        public virtual DbSet<ParseScenarioSortKey> ParseScenarioSortKeys { get; set; } = null!;
//        public virtual DbSet<ParseScenarioSortKey20220307> ParseScenarioSortKey20220307s { get; set; } = null!;
//        public virtual DbSet<ParseScenarioSortKey20220307b> ParseScenarioSortKey20220307bs { get; set; } = null!;
//        public virtual DbSet<ParseScenarioSortKeyOi> ParseScenarioSortKeyOis { get; set; } = null!;
//        public virtual DbSet<ParseSortKey> ParseSortKeys { get; set; } = null!;
//        public virtual DbSet<ParticipantAvailable> ParticipantAvailables { get; set; } = null!;
//        public virtual DbSet<ParticipantType> ParticipantTypes { get; set; } = null!;
//        public virtual DbSet<PartnerOpBatteryPrice> PartnerOpBatteryPrices { get; set; } = null!;
//        public virtual DbSet<PartnerOpBatteryTxn> PartnerOpBatteryTxns { get; set; } = null!;
//        public virtual DbSet<PlantFacility> PlantFacilities { get; set; } = null!;
//        public virtual DbSet<PlantMaster> PlantMasters { get; set; } = null!;
//        public virtual DbSet<ProdTBudgetResultId> ProdTBudgetResultIds { get; set; } = null!;
//        public virtual DbSet<ProdTBudgetResultsCostDetail> ProdTBudgetResultsCostDetails { get; set; } = null!;
//        public virtual DbSet<ProdTDimEntity> ProdTDimEntities { get; set; } = null!;
//        public virtual DbSet<ProdTProdviewInjectionVolume> ProdTProdviewInjectionVolumes { get; set; } = null!;
//        public virtual DbSet<ProdTReservesEntity> ProdTReservesEntities { get; set; } = null!;
//        public virtual DbSet<ProdTReservesResultsBtax> ProdTReservesResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<ProdTReservesResultsBtaxProduct> ProdTReservesResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<ProdTReservesResultsLookup> ProdTReservesResultsLookups { get; set; } = null!;
//        public virtual DbSet<ProdTWellviewWvtWvjob> ProdTWellviewWvtWvjobs { get; set; } = null!;
//        public virtual DbSet<ProdTWellviewWvtWvjobreportcostgen> ProdTWellviewWvtWvjobreportcostgens { get; set; } = null!;
//        public virtual DbSet<Product> Products { get; set; } = null!;
//        public virtual DbSet<PvtPvfacility> PvtPvfacilities { get; set; } = null!;
//        public virtual DbSet<PvtPvfacilitymonthdaycalc> PvtPvfacilitymonthdaycalcs { get; set; } = null!;
//        public virtual DbSet<PvtPvflownetheader> PvtPvflownetheaders { get; set; } = null!;
//        public virtual DbSet<PvtPvrouteset> PvtPvroutesets { get; set; } = null!;
//        public virtual DbSet<PvtPvroutesetroute> PvtPvroutesetroutes { get; set; } = null!;
//        public virtual DbSet<PvtPvunit> PvtPvunits { get; set; } = null!;
//        public virtual DbSet<PvtPvunitagreemt> PvtPvunitagreemts { get; set; } = null!;
//        public virtual DbSet<PvtPvunitallocmonthday> PvtPvunitallocmonthdays { get; set; } = null!;
//        public virtual DbSet<PvtPvunitallocmonthdayIncr> PvtPvunitallocmonthdayIncrs { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcomp> PvtPvunitcomps { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompdowntm> PvtPvunitcompdowntms { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompfluidlevel> PvtPvunitcompfluidlevels { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompgathmonthcalc> PvtPvunitcompgathmonthcalcs { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompgathmonthdaycalcIncr> PvtPvunitcompgathmonthdaycalcIncrs { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompmeasmeth> PvtPvunitcompmeasmeths { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompparam> PvtPvunitcompparams { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompparamIncr> PvtPvunitcompparamIncrs { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompstatus> PvtPvunitcompstatuses { get; set; } = null!;
//        public virtual DbSet<PvtPvunitcompwhcut> PvtPvunitcompwhcuts { get; set; } = null!;
//        public virtual DbSet<PvtPvunitdispmonthday> PvtPvunitdispmonthdays { get; set; } = null!;
//        public virtual DbSet<PvtPvunitdispmonthdayIncr> PvtPvunitdispmonthdayIncrs { get; set; } = null!;
//        public virtual DbSet<PvtPvunitnode> PvtPvunitnodes { get; set; } = null!;
//        public virtual DbSet<PvtPvunitnodeflowto> PvtPvunitnodeflowtos { get; set; } = null!;
//        public virtual DbSet<PvtPvunitnodemeterevent> PvtPvunitnodemeterevents { get; set; } = null!;
//        public virtual DbSet<PvtPvunitothertag> PvtPvunitothertags { get; set; } = null!;
//        public virtual DbSet<RevisedAccountDescription> RevisedAccountDescriptions { get; set; } = null!;
//        public virtual DbSet<RevisedChildAlias> RevisedChildAliases { get; set; } = null!;
//        public virtual DbSet<RevisedChildId> RevisedChildIds { get; set; } = null!;
//        public virtual DbSet<RevisedClassCodeDescription> RevisedClassCodeDescriptions { get; set; } = null!;
//        public virtual DbSet<RevisedGlAccountDescription> RevisedGlAccountDescriptions { get; set; } = null!;
//        public virtual DbSet<RevisedHierarchyPath> RevisedHierarchyPaths { get; set; } = null!;
//        public virtual DbSet<RevisedHierarchyPath20200612> RevisedHierarchyPath20200612s { get; set; } = null!;
//        public virtual DbSet<RevisedMajorAccountDescription> RevisedMajorAccountDescriptions { get; set; } = null!;
//        public virtual DbSet<RevisedParentId> RevisedParentIds { get; set; } = null!;
//        public virtual DbSet<RevisedScenarioSortKey> RevisedScenarioSortKeys { get; set; } = null!;
//        public virtual DbSet<RevisedSortKey> RevisedSortKeys { get; set; } = null!;
//        public virtual DbSet<RoyaltyCalcFormulaDetail> RoyaltyCalcFormulaDetails { get; set; } = null!;
//        public virtual DbSet<RoyaltyFormulaMaster> RoyaltyFormulaMasters { get; set; } = null!;
//        public virtual DbSet<RoyaltyGlobalFactorMaster> RoyaltyGlobalFactorMasters { get; set; } = null!;
//        public virtual DbSet<RoyaltyObligFactorValue> RoyaltyObligFactorValues { get; set; } = null!;
//        public virtual DbSet<RoyaltyObligation> RoyaltyObligations { get; set; } = null!;
//        public virtual DbSet<RoyaltyObligationMaster> RoyaltyObligationMasters { get; set; } = null!;
//        public virtual DbSet<RoyaltySplit> RoyaltySplits { get; set; } = null!;
//        public virtual DbSet<SmallTReservesResultsBtax> SmallTReservesResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<SmallTReservesResultsBtaxProduct> SmallTReservesResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<StageDetailLineItemsArar> StageDetailLineItemsArars { get; set; } = null!;
//        public virtual DbSet<StageDetailLineItemsArarConvertedPy> StageDetailLineItemsArarConvertedPies { get; set; } = null!;
//        public virtual DbSet<StagePaSplit> StagePaSplits { get; set; } = null!;
//        public virtual DbSet<StrMonthList> StrMonthLists { get; set; } = null!;
//        public virtual DbSet<TActionKey> TActionKeys { get; set; } = null!;
//        public virtual DbSet<TAdmin> TAdmins { get; set; } = null!;
//        public virtual DbSet<TAfeCostEstimatesAfenav> TAfeCostEstimatesAfenavs { get; set; } = null!;
//        public virtual DbSet<TAfeCostEstimatesQbyte> TAfeCostEstimatesQbytes { get; set; } = null!;
//        public virtual DbSet<TAfeCostEstimatesSiteview> TAfeCostEstimatesSiteviews { get; set; } = null!;
//        public virtual DbSet<TAfeCostEstimatesWellview> TAfeCostEstimatesWellviews { get; set; } = null!;
//        public virtual DbSet<TAfenavAfe> TAfenavAves { get; set; } = null!;
//        public virtual DbSet<TAfenavAfeCustom> TAfenavAfeCustoms { get; set; } = null!;
//        public virtual DbSet<TAfenavAfenumber> TAfenavAfenumbers { get; set; } = null!;
//        public virtual DbSet<TAfenavFieldcostAmount> TAfenavFieldcostAmounts { get; set; } = null!;
//        public virtual DbSet<TAfenavLutAfeType> TAfenavLutAfeTypes { get; set; } = null!;
//        public virtual DbSet<TAfenavPartner> TAfenavPartners { get; set; } = null!;
//        public virtual DbSet<TApUser> TApUsers { get; set; } = null!;
//        public virtual DbSet<TArea> TAreas { get; set; } = null!;
//        public virtual DbSet<TAvocetOntreamDate> TAvocetOntreamDates { get; set; } = null!;
//        public virtual DbSet<TBasedeclineCodeLookup> TBasedeclineCodeLookups { get; set; } = null!;
//        public virtual DbSet<TBasedeclineCustomFieldDef> TBasedeclineCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TBasedeclineEntCustomField> TBasedeclineEntCustomFields { get; set; } = null!;
//        public virtual DbSet<TBasedeclineEntDetail> TBasedeclineEntDetails { get; set; } = null!;
//        public virtual DbSet<TBasedeclineEntReservesCache> TBasedeclineEntReservesCaches { get; set; } = null!;
//        public virtual DbSet<TBasedeclineEntity> TBasedeclineEntities { get; set; } = null!;
//        public virtual DbSet<TBasedeclineFiscReservesProduct> TBasedeclineFiscReservesProducts { get; set; } = null!;
//        public virtual DbSet<TBasedeclineFiscScenario> TBasedeclineFiscScenarios { get; set; } = null!;
//        public virtual DbSet<TBasedeclineFiscScenarioParam> TBasedeclineFiscScenarioParams { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultId> TBasedeclineResultIds { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultsBtax> TBasedeclineResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultsBtaxInterm> TBasedeclineResultsBtaxInterms { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultsBtaxProduct> TBasedeclineResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultsBtaxProductInterm> TBasedeclineResultsBtaxProductInterms { get; set; } = null!;
//        public virtual DbSet<TBasedeclineResultsLookup> TBasedeclineResultsLookups { get; set; } = null!;
//        public virtual DbSet<TBudgetCodeLookup> TBudgetCodeLookups { get; set; } = null!;
//        public virtual DbSet<TBudgetCompany> TBudgetCompanies { get; set; } = null!;
//        public virtual DbSet<TBudgetCustomFieldDef> TBudgetCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TBudgetEntCapitalActual> TBudgetEntCapitalActuals { get; set; } = null!;
//        public virtual DbSet<TBudgetEntCapitalEstimate> TBudgetEntCapitalEstimates { get; set; } = null!;
//        public virtual DbSet<TBudgetEntCompanyInterest> TBudgetEntCompanyInterests { get; set; } = null!;
//        public virtual DbSet<TBudgetEntCustomField> TBudgetEntCustomFields { get; set; } = null!;
//        public virtual DbSet<TBudgetEntDecline> TBudgetEntDeclines { get; set; } = null!;
//        public virtual DbSet<TBudgetEntDetail> TBudgetEntDetails { get; set; } = null!;
//        public virtual DbSet<TBudgetEntForecastInput> TBudgetEntForecastInputs { get; set; } = null!;
//        public virtual DbSet<TBudgetEntForecastInput1> TBudgetEntForecastInputs1 { get; set; } = null!;
//        public virtual DbSet<TBudgetEntImportId> TBudgetEntImportIds { get; set; } = null!;
//        public virtual DbSet<TBudgetEntLeaseInterest> TBudgetEntLeaseInterests { get; set; } = null!;
//        public virtual DbSet<TBudgetEntManualForecast> TBudgetEntManualForecasts { get; set; } = null!;
//        public virtual DbSet<TBudgetEntManualForecastValue> TBudgetEntManualForecastValues { get; set; } = null!;
//        public virtual DbSet<TBudgetEntOtherForecast> TBudgetEntOtherForecasts { get; set; } = null!;
//        public virtual DbSet<TBudgetEntPlan> TBudgetEntPlans { get; set; } = null!;
//        public virtual DbSet<TBudgetEntProductInterest> TBudgetEntProductInterests { get; set; } = null!;
//        public virtual DbSet<TBudgetEntReservesCategory> TBudgetEntReservesCategories { get; set; } = null!;
//        public virtual DbSet<TBudgetEntReversionInterest> TBudgetEntReversionInterests { get; set; } = null!;
//        public virtual DbSet<TBudgetEntSegment> TBudgetEntSegments { get; set; } = null!;
//        public virtual DbSet<TBudgetEntSharedPlanDatum> TBudgetEntSharedPlanData { get; set; } = null!;
//        public virtual DbSet<TBudgetEntity> TBudgetEntities { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscCapCost> TBudgetFiscCapCosts { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscOpCost> TBudgetFiscOpCosts { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscProductListValue> TBudgetFiscProductListValues { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscReservesProduct> TBudgetFiscReservesProducts { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscScenario> TBudgetFiscScenarios { get; set; } = null!;
//        public virtual DbSet<TBudgetFiscScenarioParam> TBudgetFiscScenarioParams { get; set; } = null!;
//        public virtual DbSet<TBudgetResultId> TBudgetResultIds { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsBtax> TBudgetResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsBtaxProduct> TBudgetResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsCost> TBudgetResultsCosts { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsCostDetail> TBudgetResultsCostDetails { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsLookup> TBudgetResultsLookups { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsRegime> TBudgetResultsRegimes { get; set; } = null!;
//        public virtual DbSet<TBudgetResultsSummary> TBudgetResultsSummaries { get; set; } = null!;
//        public virtual DbSet<TBuildDimAccountFinance> TBuildDimAccountFinances { get; set; } = null!;
//        public virtual DbSet<TBuildDimAccountHierarchy> TBuildDimAccountHierarchies { get; set; } = null!;
//        public virtual DbSet<TCcNumWorkingInterest> TCcNumWorkingInterests { get; set; } = null!;
//        public virtual DbSet<TCcUwiMasterSource> TCcUwiMasterSources { get; set; } = null!;
//        public virtual DbSet<TCostCentreHierarchy> TCostCentreHierarchies { get; set; } = null!;
//        public virtual DbSet<TCtrlAccountsXref> TCtrlAccountsXrefs { get; set; } = null!;
//        public virtual DbSet<TCtrlDimDescTextExcption> TCtrlDimDescTextExcptions { get; set; } = null!;
//        public virtual DbSet<TCtrlEtlVariable> TCtrlEtlVariables { get; set; } = null!;
//        public virtual DbSet<TCtrlEtlVariable1> TCtrlEtlVariables1 { get; set; } = null!;
//        public virtual DbSet<TCtrlEtlVariable2> TCtrlEtlVariables2 { get; set; } = null!;
//        public virtual DbSet<TCtrlEtlVariables2> TCtrlEtlVariables2s { get; set; } = null!;
//        public virtual DbSet<TCtrlEtlVariables20220513> TCtrlEtlVariables20220513s { get; set; } = null!;
//        public virtual DbSet<TCtrlEwfPrimaryProductXref> TCtrlEwfPrimaryProductXrefs { get; set; } = null!;
//        public virtual DbSet<TCtrlFixedVarOpex> TCtrlFixedVarOpices { get; set; } = null!;
//        public virtual DbSet<TCtrlMarketingEtlVariable> TCtrlMarketingEtlVariables { get; set; } = null!;
//        public virtual DbSet<TCtrlMetrixEtlVariable> TCtrlMetrixEtlVariables { get; set; } = null!;
//        public virtual DbSet<TCtrlMetrixProduct> TCtrlMetrixProducts { get; set; } = null!;
//        public virtual DbSet<TCtrlProdviewDuplicate> TCtrlProdviewDuplicates { get; set; } = null!;
//        public virtual DbSet<TCtrlProdviewDuplicates20220118> TCtrlProdviewDuplicates20220118s { get; set; } = null!;
//        public virtual DbSet<TCtrlQbyteConversionFactor> TCtrlQbyteConversionFactors { get; set; } = null!;
//        public virtual DbSet<TCtrlRevisedAccountDescription> TCtrlRevisedAccountDescriptions { get; set; } = null!;
//        public virtual DbSet<TCtrlSpecialAccount> TCtrlSpecialAccounts { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavAccountXref> TCtrlValnavAccountXrefs { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavCustomDatum> TCtrlValnavCustomData { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavEtlVariable> TCtrlValnavEtlVariables { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavEtlVariables20220513> TCtrlValnavEtlVariables20220513s { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavEtlVariables20220513b> TCtrlValnavEtlVariables20220513bs { get; set; } = null!;
//        public virtual DbSet<TCtrlValnavProduct> TCtrlValnavProducts { get; set; } = null!;
//        public virtual DbSet<TCtrlVolumesValnavTimePeriod> TCtrlVolumesValnavTimePeriods { get; set; } = null!;
//        public virtual DbSet<TCtrlVolumesValnavTimePeriod20220112> TCtrlVolumesValnavTimePeriod20220112s { get; set; } = null!;
//        public virtual DbSet<TDimAccountCapital> TDimAccountCapitals { get; set; } = null!;
//        public virtual DbSet<TDimAccountCapitalClean> TDimAccountCapitalCleans { get; set; } = null!;
//        public virtual DbSet<TDimAccountFinance> TDimAccountFinances { get; set; } = null!;
//        public virtual DbSet<TDimAccountFinance20200622> TDimAccountFinance20200622s { get; set; } = null!;
//        public virtual DbSet<TDimAccountFinance20220307> TDimAccountFinance20220307s { get; set; } = null!;
//        public virtual DbSet<TDimAccountFinance22020307> TDimAccountFinance22020307s { get; set; } = null!;
//        public virtual DbSet<TDimAccountHierarchy> TDimAccountHierarchies { get; set; } = null!;
//        public virtual DbSet<TDimArContract> TDimArContracts { get; set; } = null!;
//        public virtual DbSet<TDimAuthorizationForExpenditure> TDimAuthorizationForExpenditures { get; set; } = null!;
//        public virtual DbSet<TDimChargeFormula> TDimChargeFormulas { get; set; } = null!;
//        public virtual DbSet<TDimChargeType> TDimChargeTypes { get; set; } = null!;
//        public virtual DbSet<TDimControlGroup> TDimControlGroups { get; set; } = null!;
//        public virtual DbSet<TDimDate> TDimDates { get; set; } = null!;
//        public virtual DbSet<TDimDeliverySequence> TDimDeliverySequences { get; set; } = null!;
//        public virtual DbSet<TDimEntity> TDimEntities { get; set; } = null!;
//        public virtual DbSet<TDimEntity1> TDimEntities1 { get; set; } = null!;
//        public virtual DbSet<TDimEntity20210721> TDimEntity20210721s { get; set; } = null!;
//        public virtual DbSet<TDimEntity20220105> TDimEntity20220105s { get; set; } = null!;
//        public virtual DbSet<TDimEntity20220510> TDimEntity20220510s { get; set; } = null!;
//        public virtual DbSet<TDimFacility> TDimFacilities { get; set; } = null!;
//        public virtual DbSet<TDimGrossNet> TDimGrossNets { get; set; } = null!;
//        public virtual DbSet<TDimNormalizedTime> TDimNormalizedTimes { get; set; } = null!;
//        public virtual DbSet<TDimNormalizedTime1> TDimNormalizedTimes1 { get; set; } = null!;
//        public virtual DbSet<TDimOrganization> TDimOrganizations { get; set; } = null!;
//        public virtual DbSet<TDimOwner> TDimOwners { get; set; } = null!;
//        public virtual DbSet<TDimProduct> TDimProducts { get; set; } = null!;
//        public virtual DbSet<TDimProduct20210225> TDimProduct20210225s { get; set; } = null!;
//        public virtual DbSet<TDimPurchaser> TDimPurchasers { get; set; } = null!;
//        public virtual DbSet<TDimPurchaser20210105> TDimPurchaser20210105s { get; set; } = null!;
//        public virtual DbSet<TDimPurchaserSequence> TDimPurchaserSequences { get; set; } = null!;
//        public virtual DbSet<TDimRoyaltyObligationSequence> TDimRoyaltyObligationSequences { get; set; } = null!;
//        public virtual DbSet<TDimSalesType> TDimSalesTypes { get; set; } = null!;
//        public virtual DbSet<TDimScenario> TDimScenarios { get; set; } = null!;
//        public virtual DbSet<TDimScenario20220513> TDimScenario20220513s { get; set; } = null!;
//        public virtual DbSet<TDimScenarioFdcDowntime> TDimScenarioFdcDowntimes { get; set; } = null!;
//        public virtual DbSet<TDimScenarioTypecurf> TDimScenarioTypecurves { get; set; } = null!;
//        public virtual DbSet<TDimSourceEntityValnavEntity> TDimSourceEntityValnavEntities { get; set; } = null!;
//        public virtual DbSet<TDimTargetFacility> TDimTargetFacilities { get; set; } = null!;
//        public virtual DbSet<TDimValnavGrossNet> TDimValnavGrossNets { get; set; } = null!;
//        public virtual DbSet<TDimValnavNormalizedTime> TDimValnavNormalizedTimes { get; set; } = null!;
//        public virtual DbSet<TDimValnavReserveCategory> TDimValnavReserveCategories { get; set; } = null!;
//        public virtual DbSet<TDimVendor> TDimVendors { get; set; } = null!;
//        public virtual DbSet<TDimWell> TDimWells { get; set; } = null!;
//        public virtual DbSet<TFactAccumap> TFactAccumaps { get; set; } = null!;
//        public virtual DbSet<TFactAfe> TFactAves { get; set; } = null!;
//        public virtual DbSet<TFactApAr> TFactApArs { get; set; } = null!;
//        public virtual DbSet<TFactApArOpen> TFactApArOpens { get; set; } = null!;
//        public virtual DbSet<TFactFdc> TFactFdcs { get; set; } = null!;
//        public virtual DbSet<TFactFinanceBudget> TFactFinanceBudgets { get; set; } = null!;
//        public virtual DbSet<TFactGl> TFactGls { get; set; } = null!;
//        public virtual DbSet<TFactLeaseopsOpexAccrual> TFactLeaseopsOpexAccruals { get; set; } = null!;
//        public virtual DbSet<TFactMarketing> TFactMarketings { get; set; } = null!;
//        public virtual DbSet<TFactMetrix> TFactMetrixes { get; set; } = null!;
//        public virtual DbSet<TFactMetrix20210225> TFactMetrix20210225s { get; set; } = null!;
//        public virtual DbSet<TFactMetrix20210304> TFactMetrix20210304s { get; set; } = null!;
//        public virtual DbSet<TFactMetrixFee> TFactMetrixFees { get; set; } = null!;
//        public virtual DbSet<TFactMetrixFeesOp> TFactMetrixFeesOps { get; set; } = null!;
//        public virtual DbSet<TFactMetrixOp> TFactMetrixOps { get; set; } = null!;
//        public virtual DbSet<TFactMetrixRoyalty> TFactMetrixRoyalties { get; set; } = null!;
//        public virtual DbSet<TFactMetrixRoyaltyOp> TFactMetrixRoyaltyOps { get; set; } = null!;
//        public virtual DbSet<TFactOpexBudget> TFactOpexBudgets { get; set; } = null!;
//        public virtual DbSet<TFactOpexBudget1> TFactOpexBudgets1 { get; set; } = null!;
//        public virtual DbSet<TFactOpexBudgets20220513> TFactOpexBudgets20220513s { get; set; } = null!;
//        public virtual DbSet<TFactOpexBudgets20220526> TFactOpexBudgets20220526s { get; set; } = null!;
//        public virtual DbSet<TFactOpexBudgets20220607> TFactOpexBudgets20220607s { get; set; } = null!;
//        public virtual DbSet<TFactSourceAccumapVolume> TFactSourceAccumapVolumes { get; set; } = null!;
//        public virtual DbSet<TFactSourceFdcProdview> TFactSourceFdcProdviews { get; set; } = null!;
//        public virtual DbSet<TFactSourceFdcProdviewIncr> TFactSourceFdcProdviewIncrs { get; set; } = null!;
//        public virtual DbSet<TFactSourceFdcValnavGljVolume> TFactSourceFdcValnavGljVolumes { get; set; } = null!;
//        public virtual DbSet<TFactSourceFdcValnavVolume> TFactSourceFdcValnavVolumes { get; set; } = null!;
//        public virtual DbSet<TFactSourceFdcValnavVolumesDaily> TFactSourceFdcValnavVolumesDailies { get; set; } = null!;
//        public virtual DbSet<TFactSourceLeaseopsValnavVolume> TFactSourceLeaseopsValnavVolumes { get; set; } = null!;
//        public virtual DbSet<TFactSourceQbyteWorkingInterest> TFactSourceQbyteWorkingInterests { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancial> TFactValnavFinancials { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancial20220513> TFactValnavFinancial20220513s { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancial20220517> TFactValnavFinancial20220517s { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialBudget2021Z> TFactValnavFinancialBudget2021Zs { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialGlj> TFactValnavFinancialGljs { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialGlj20220330> TFactValnavFinancialGlj20220330s { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialTypecurf> TFactValnavFinancialTypecurves { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialXl> TFactValnavFinancialXls { get; set; } = null!;
//        public virtual DbSet<TFactValnavFinancialXls20220513> TFactValnavFinancialXls20220513s { get; set; } = null!;
//        public virtual DbSet<TFactValnavProduction> TFactValnavProductions { get; set; } = null!;
//        public virtual DbSet<TFactValnavProduction2> TFactValnavProduction2s { get; set; } = null!;
//        public virtual DbSet<TFactValnavProduction20220513> TFactValnavProduction20220513s { get; set; } = null!;
//        public virtual DbSet<TFactValnavProduction20220517> TFactValnavProduction20220517s { get; set; } = null!;
//        public virtual DbSet<TFactValnavProductionBudget2021Z> TFactValnavProductionBudget2021Zs { get; set; } = null!;
//        public virtual DbSet<TFactValnavProductionGlj> TFactValnavProductionGljs { get; set; } = null!;
//        public virtual DbSet<TFactValnavProductionGlj20220330> TFactValnavProductionGlj20220330s { get; set; } = null!;
//        public virtual DbSet<TFactValnavProductionTypecurf> TFactValnavProductionTypecurves { get; set; } = null!;
//        public virtual DbSet<TFactValnavProductionTypecurvesDaily> TFactValnavProductionTypecurvesDailies { get; set; } = null!;
//        public virtual DbSet<TFactValnavReserf> TFactValnavReserves { get; set; } = null!;
//        public virtual DbSet<TFactValnavReserves20220513> TFactValnavReserves20220513s { get; set; } = null!;
//        public virtual DbSet<TFactValnavReserves20220517> TFactValnavReserves20220517s { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesBudget2021Z> TFactValnavReservesBudget2021Zs { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesGlj> TFactValnavReservesGljs { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesGlj20220330> TFactValnavReservesGlj20220330s { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesTypecurf> TFactValnavReservesTypecurves { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesXl> TFactValnavReservesXls { get; set; } = null!;
//        public virtual DbSet<TFactValnavReservesXls20220513> TFactValnavReservesXls20220513s { get; set; } = null!;
//        public virtual DbSet<TFdcHistoryDataTest> TFdcHistoryDataTests { get; set; } = null!;
//        public virtual DbSet<TFdcHistoryDatum> TFdcHistoryData { get; set; } = null!;
//        public virtual DbSet<TFieldticketsFact> TFieldticketsFacts { get; set; } = null!;
//        public virtual DbSet<TFieldticketsFacts20220414> TFieldticketsFacts20220414s { get; set; } = null!;
//        public virtual DbSet<TIhsAttribute> TIhsAttributes { get; set; } = null!;
//        public virtual DbSet<TIhsBusinessAssociate> TIhsBusinessAssociates { get; set; } = null!;
//        public virtual DbSet<TIhsField> TIhsFields { get; set; } = null!;
//        public virtual DbSet<TIhsPden> TIhsPdens { get; set; } = null!;
//        public virtual DbSet<TIhsPden1> TIhsPdens1 { get; set; } = null!;
//        public virtual DbSet<TIhsPdenProdZone> TIhsPdenProdZones { get; set; } = null!;
//        public virtual DbSet<TIhsPdenProductionMonth> TIhsPdenProductionMonths { get; set; } = null!;
//        public virtual DbSet<TIhsPdenProductionMonthIncr> TIhsPdenProductionMonthIncrs { get; set; } = null!;
//        public virtual DbSet<TIhsPdenVolByMonth> TIhsPdenVolByMonths { get; set; } = null!;
//        public virtual DbSet<TIhsPdenVolByMonth1> TIhsPdenVolByMonths1 { get; set; } = null!;
//        public virtual DbSet<TIhsPdenVolByMonthIncr> TIhsPdenVolByMonthIncrs { get; set; } = null!;
//        public virtual DbSet<TIhsPdenVolByMonthIncr1> TIhsPdenVolByMonthIncrs1 { get; set; } = null!;
//        public virtual DbSet<TIhsRWellProfileType> TIhsRWellProfileTypes { get; set; } = null!;
//        public virtual DbSet<TIhsRWellProfileType1> TIhsRWellProfileTypes1 { get; set; } = null!;
//        public virtual DbSet<TIhsRWellStatus> TIhsRWellStatuses { get; set; } = null!;
//        public virtual DbSet<TIhsWell> TIhsWells { get; set; } = null!;
//        public virtual DbSet<TIhsWell1> TIhsWells1 { get; set; } = null!;
//        public virtual DbSet<TIhsWellCompletion> TIhsWellCompletions { get; set; } = null!;
//        public virtual DbSet<TIhsWellDescription> TIhsWellDescriptions { get; set; } = null!;
//        public virtual DbSet<TIhsWellDescription1> TIhsWellDescriptions1 { get; set; } = null!;
//        public virtual DbSet<TIhsWellFracCalculation> TIhsWellFracCalculations { get; set; } = null!;
//        public virtual DbSet<TIhsWellLicense> TIhsWellLicenses { get; set; } = null!;
//        public virtual DbSet<TIhsWellLicenseIncr> TIhsWellLicenseIncrs { get; set; } = null!;
//        public virtual DbSet<TIhsWellLicenseStatus> TIhsWellLicenseStatuses { get; set; } = null!;
//        public virtual DbSet<TIhsWellNode> TIhsWellNodes { get; set; } = null!;
//        public virtual DbSet<TIhsWellNodeIncr> TIhsWellNodeIncrs { get; set; } = null!;
//        public virtual DbSet<TIhsWellStimulation> TIhsWellStimulations { get; set; } = null!;
//        public virtual DbSet<TIhsWellTreatment> TIhsWellTreatments { get; set; } = null!;
//        public virtual DbSet<TIhsWellTreatmentFinance> TIhsWellTreatmentFinances { get; set; } = null!;
//        public virtual DbSet<TIhsWellTreatmentMaterial> TIhsWellTreatmentMaterials { get; set; } = null!;
//        public virtual DbSet<TIhsXrefStatus> TIhsXrefStatuses { get; set; } = null!;
//        public virtual DbSet<TInvoice> TInvoices { get; set; } = null!;
//        public virtual DbSet<TInvoiceAction> TInvoiceActions { get; set; } = null!;
//        public virtual DbSet<TInvoiceActions20220413> TInvoiceActions20220413s { get; set; } = null!;
//        public virtual DbSet<TInvoiceActions20220505> TInvoiceActions20220505s { get; set; } = null!;
//        public virtual DbSet<TInvoiceActionsAzud> TInvoiceActionsAzuds { get; set; } = null!;
//        public virtual DbSet<TInvoiceActionsAzud2> TInvoiceActionsAzud2s { get; set; } = null!;
//        public virtual DbSet<TInvoiceActionsIncr> TInvoiceActionsIncrs { get; set; } = null!;
//        public virtual DbSet<TInvoiceAttachment> TInvoiceAttachments { get; set; } = null!;
//        public virtual DbSet<TInvoiceAttachmentsIncr> TInvoiceAttachmentsIncrs { get; set; } = null!;
//        public virtual DbSet<TInvoiceEnergylink> TInvoiceEnergylinks { get; set; } = null!;
//        public virtual DbSet<TInvoiceKey> TInvoiceKeys { get; set; } = null!;
//        public virtual DbSet<TInvoiceKeysException> TInvoiceKeysExceptions { get; set; } = null!;
//        public virtual DbSet<TInvoiceLineItem> TInvoiceLineItems { get; set; } = null!;
//        public virtual DbSet<TInvoiceLineItemsIncr> TInvoiceLineItemsIncrs { get; set; } = null!;
//        public virtual DbSet<TInvoiceLineItemsIncr20220527> TInvoiceLineItemsIncr20220527s { get; set; } = null!;
//        public virtual DbSet<TInvoices20220324> TInvoices20220324s { get; set; } = null!;
//        public virtual DbSet<TInvoices20220328> TInvoices20220328s { get; set; } = null!;
//        public virtual DbSet<TInvoices20220329> TInvoices20220329s { get; set; } = null!;
//        public virtual DbSet<TInvoices20220411> TInvoices20220411s { get; set; } = null!;
//        public virtual DbSet<TInvoices20220419> TInvoices20220419s { get; set; } = null!;
//        public virtual DbSet<TInvoicesIncr> TInvoicesIncrs { get; set; } = null!;
//        public virtual DbSet<TInvoicesIncr20220324> TInvoicesIncr20220324s { get; set; } = null!;
//        public virtual DbSet<TInvoicesIncr20220324New> TInvoicesIncr20220324News { get; set; } = null!;
//        public virtual DbSet<TLeaseopsCurrentPriorScenario> TLeaseopsCurrentPriorScenarios { get; set; } = null!;
//        public virtual DbSet<TLeaseopsCurrentPriorScenario20220117> TLeaseopsCurrentPriorScenario20220117s { get; set; } = null!;
//        public virtual DbSet<TMdsBcdCostCentreCustomGrouping> TMdsBcdCostCentreCustomGroupings { get; set; } = null!;
//        public virtual DbSet<TOpeninvoiceDetail> TOpeninvoiceDetails { get; set; } = null!;
//        public virtual DbSet<TOpeninvoiceDetails20220309> TOpeninvoiceDetails20220309s { get; set; } = null!;
//        public virtual DbSet<TOwner> TOwners { get; set; } = null!;
//        public virtual DbSet<TProdviewAllocatedVolume> TProdviewAllocatedVolumes { get; set; } = null!;
//        public virtual DbSet<TProdviewAllocatedVolumesIncr> TProdviewAllocatedVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<TProdviewAttribute> TProdviewAttributes { get; set; } = null!;
//        public virtual DbSet<TProdviewBsw> TProdviewBsws { get; set; } = null!;
//        public virtual DbSet<TProdviewDowntimeHoursVolume> TProdviewDowntimeHoursVolumes { get; set; } = null!;
//        public virtual DbSet<TProdviewDowntimeHoursVolumesIncr> TProdviewDowntimeHoursVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<TProdviewInjectionVolume> TProdviewInjectionVolumes { get; set; } = null!;
//        public virtual DbSet<TProdviewInjectionVolumesIncr> TProdviewInjectionVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<TProdviewJointsToFluid> TProdviewJointsToFluids { get; set; } = null!;
//        public virtual DbSet<TProdviewOnstreamDate> TProdviewOnstreamDates { get; set; } = null!;
//        public virtual DbSet<TProdviewProrationData20200727> TProdviewProrationData20200727s { get; set; } = null!;
//        public virtual DbSet<TProdviewProrationDataIncr> TProdviewProrationDataIncrs { get; set; } = null!;
//        public virtual DbSet<TProdviewProrationDatum> TProdviewProrationData { get; set; } = null!;
//        public virtual DbSet<TProdviewSalesDispositionPoint> TProdviewSalesDispositionPoints { get; set; } = null!;
//        public virtual DbSet<TProdviewShrinkYieldRate> TProdviewShrinkYieldRates { get; set; } = null!;
//        public virtual DbSet<TProdviewTypfluidprod> TProdviewTypfluidprods { get; set; } = null!;
//        public virtual DbSet<TPvrTwell> TPvrTwells { get; set; } = null!;
//        public virtual DbSet<TPvrUwiOnstreamDate> TPvrUwiOnstreamDates { get; set; } = null!;
//        public virtual DbSet<TPvtPvfacility> TPvtPvfacilities { get; set; } = null!;
//        public virtual DbSet<TPvtPvfacilitymonthdaycalc> TPvtPvfacilitymonthdaycalcs { get; set; } = null!;
//        public virtual DbSet<TPvtPvflownetheader> TPvtPvflownetheaders { get; set; } = null!;
//        public virtual DbSet<TPvtPvrouteset> TPvtPvroutesets { get; set; } = null!;
//        public virtual DbSet<TPvtPvroutesetroute> TPvtPvroutesetroutes { get; set; } = null!;
//        public virtual DbSet<TPvtPvunit> TPvtPvunits { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitagreemt> TPvtPvunitagreemts { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitallocmonthday> TPvtPvunitallocmonthdays { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitallocmonthdayIncr> TPvtPvunitallocmonthdayIncrs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcomp> TPvtPvunitcomps { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompdowntm> TPvtPvunitcompdowntms { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompfluidlevel> TPvtPvunitcompfluidlevels { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompgathmonthcalc> TPvtPvunitcompgathmonthcalcs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompgathmonthdaycalc> TPvtPvunitcompgathmonthdaycalcs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompgathmonthdaycalcIncr> TPvtPvunitcompgathmonthdaycalcIncrs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompmeasmeth> TPvtPvunitcompmeasmeths { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompparam> TPvtPvunitcompparams { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompparamIncr> TPvtPvunitcompparamIncrs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompstatus> TPvtPvunitcompstatuses { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitcompwhcut> TPvtPvunitcompwhcuts { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitdispmonthday> TPvtPvunitdispmonthdays { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitdispmonthdayIncr> TPvtPvunitdispmonthdayIncrs { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitnode> TPvtPvunitnodes { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitnodeflowto> TPvtPvunitnodeflowtos { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitnodemeterevent> TPvtPvunitnodemeterevents { get; set; } = null!;
//        public virtual DbSet<TPvtPvunitothertag> TPvtPvunitothertags { get; set; } = null!;
//        public virtual DbSet<TPwvApDetailTbl> TPwvApDetailTbls { get; set; } = null!;
//        public virtual DbSet<TPwvApHeaderTbl> TPwvApHeaderTbls { get; set; } = null!;
//        public virtual DbSet<TQbyteAccount> TQbyteAccounts { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountGroup> TQbyteAccountGroups { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountGroupAccount> TQbyteAccountGroupAccounts { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountGroupRollup> TQbyteAccountGroupRollups { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountHierarchySourceFinance> TQbyteAccountHierarchySourceFinances { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountHierarchySourceFinanceRevisedDesc> TQbyteAccountHierarchySourceFinanceRevisedDescs { get; set; } = null!;
//        public virtual DbSet<TQbyteAccountsT> TQbyteAccountsTs { get; set; } = null!;
//        public virtual DbSet<TQbyteAfeProjectJustification> TQbyteAfeProjectJustifications { get; set; } = null!;
//        public virtual DbSet<TQbyteAfesCostCentre> TQbyteAfesCostCentres { get; set; } = null!;
//        public virtual DbSet<TQbyteAuthorizationsForExpenditure> TQbyteAuthorizationsForExpenditures { get; set; } = null!;
//        public virtual DbSet<TQbyteBaAddress> TQbyteBaAddresses { get; set; } = null!;
//        public virtual DbSet<TQbyteBusinessAssociate> TQbyteBusinessAssociates { get; set; } = null!;
//        public virtual DbSet<TQbyteCcBnpDivestHierarchy> TQbyteCcBnpDivestHierarchies { get; set; } = null!;
//        public virtual DbSet<TQbyteClient> TQbyteClients { get; set; } = null!;
//        public virtual DbSet<TQbyteCode> TQbyteCodes { get; set; } = null!;
//        public virtual DbSet<TQbyteCostCentre> TQbyteCostCentres { get; set; } = null!;
//        public virtual DbSet<TQbyteCostCentreLegal> TQbyteCostCentreLegals { get; set; } = null!;
//        public virtual DbSet<TQbyteCostCentreNameRevisedDesc> TQbyteCostCentreNameRevisedDescs { get; set; } = null!;
//        public virtual DbSet<TQbyteCostEstimateItem> TQbyteCostEstimateItems { get; set; } = null!;
//        public virtual DbSet<TQbyteCountry> TQbyteCountries { get; set; } = null!;
//        public virtual DbSet<TQbyteDeletedLineitemsLog> TQbyteDeletedLineitemsLogs { get; set; } = null!;
//        public virtual DbSet<TQbyteDoiDeck> TQbyteDoiDecks { get; set; } = null!;
//        public virtual DbSet<TQbyteDoiDeckPartner> TQbyteDoiDeckPartners { get; set; } = null!;
//        public virtual DbSet<TQbyteFaBaProperty> TQbyteFaBaProperties { get; set; } = null!;
//        public virtual DbSet<TQbyteInvoice> TQbyteInvoices { get; set; } = null!;
//        public virtual DbSet<TQbyteInvoiceType> TQbyteInvoiceTypes { get; set; } = null!;
//        public virtual DbSet<TQbyteLineItem> TQbyteLineItems { get; set; } = null!;
//        public virtual DbSet<TQbyteLineItemsIncr> TQbyteLineItemsIncrs { get; set; } = null!;
//        public virtual DbSet<TQbyteMajorAccount> TQbyteMajorAccounts { get; set; } = null!;
//        public virtual DbSet<TQbyteOperatorAfe> TQbyteOperatorAfes { get; set; } = null!;
//        public virtual DbSet<TQbyteOrganization> TQbyteOrganizations { get; set; } = null!;
//        public virtual DbSet<TQbyteOwnershipAgreementLink> TQbyteOwnershipAgreementLinks { get; set; } = null!;
//        public virtual DbSet<TQbyteProduct> TQbyteProducts { get; set; } = null!;
//        public virtual DbSet<TQbyteProvince> TQbyteProvinces { get; set; } = null!;
//        public virtual DbSet<TQbyteReportingEntity> TQbyteReportingEntities { get; set; } = null!;
//        public virtual DbSet<TQbyteSpecialExchangeRate> TQbyteSpecialExchangeRates { get; set; } = null!;
//        public virtual DbSet<TQbyteUdfCode> TQbyteUdfCodes { get; set; } = null!;
//        public virtual DbSet<TQbyteVoucher> TQbyteVouchers { get; set; } = null!;
//        public virtual DbSet<TQbyteVoucherType> TQbyteVoucherTypes { get; set; } = null!;
//        public virtual DbSet<TQbyteVouchers1> TQbyteVouchers1s { get; set; } = null!;
//        public virtual DbSet<TQbyteVouchersIncr> TQbyteVouchersIncrs { get; set; } = null!;
//        public virtual DbSet<TReservesCodeLookup> TReservesCodeLookups { get; set; } = null!;
//        public virtual DbSet<TReservesCustomFieldDef> TReservesCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TReservesEntCustomField> TReservesEntCustomFields { get; set; } = null!;
//        public virtual DbSet<TReservesEntReservesCache> TReservesEntReservesCaches { get; set; } = null!;
//        public virtual DbSet<TReservesEntity> TReservesEntities { get; set; } = null!;
//        public virtual DbSet<TReservesFiscReservesProduct> TReservesFiscReservesProducts { get; set; } = null!;
//        public virtual DbSet<TReservesFiscScenario> TReservesFiscScenarios { get; set; } = null!;
//        public virtual DbSet<TReservesFiscScenarioParam> TReservesFiscScenarioParams { get; set; } = null!;
//        public virtual DbSet<TReservesResultId> TReservesResultIds { get; set; } = null!;
//        public virtual DbSet<TReservesResultsBtax> TReservesResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<TReservesResultsBtaxProduct> TReservesResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<TReservesResultsCost> TReservesResultsCosts { get; set; } = null!;
//        public virtual DbSet<TReservesResultsCostDetail> TReservesResultsCostDetails { get; set; } = null!;
//        public virtual DbSet<TReservesResultsLookup> TReservesResultsLookups { get; set; } = null!;
//        public virtual DbSet<TReservesResultsRegime> TReservesResultsRegimes { get; set; } = null!;
//        public virtual DbSet<TReservesResultsSummary> TReservesResultsSummaries { get; set; } = null!;
//        public virtual DbSet<TRptCsxLatestWorkingInterest> TRptCsxLatestWorkingInterests { get; set; } = null!;
//        public virtual DbSet<TRptCsxWellInsuranceElection> TRptCsxWellInsuranceElections { get; set; } = null!;
//        public virtual DbSet<TRptRoyaltyControlGroup> TRptRoyaltyControlGroups { get; set; } = null!;
//        public virtual DbSet<TRptValnavCapitalActual> TRptValnavCapitalActuals { get; set; } = null!;
//        public virtual DbSet<TRunJobLog> TRunJobLogs { get; set; } = null!;
//        public virtual DbSet<TRunJobLog20210330> TRunJobLog20210330s { get; set; } = null!;
//        public virtual DbSet<TRunStatusCode> TRunStatusCodes { get; set; } = null!;
//        public virtual DbSet<TRunTaskLog> TRunTaskLogs { get; set; } = null!;
//        public virtual DbSet<TRunTaskLog20210330> TRunTaskLog20210330s { get; set; } = null!;
//        public virtual DbSet<TSiteviewSvtSvjob> TSiteviewSvtSvjobs { get; set; } = null!;
//        public virtual DbSet<TSiteviewSvtSvjobafe> TSiteviewSvtSvjobaves { get; set; } = null!;
//        public virtual DbSet<TSiteviewSvtSvjobreport> TSiteviewSvtSvjobreports { get; set; } = null!;
//        public virtual DbSet<TSiteviewSvtSvjobreportcost> TSiteviewSvtSvjobreportcosts { get; set; } = null!;
//        public virtual DbSet<TSiteviewSvtSvsiteheader> TSiteviewSvtSvsiteheaders { get; set; } = null!;
//        public virtual DbSet<TSourceCostEstimatesAfenav> TSourceCostEstimatesAfenavs { get; set; } = null!;
//        public virtual DbSet<TSourceCostEstimatesQbyte> TSourceCostEstimatesQbytes { get; set; } = null!;
//        public virtual DbSet<TSourceCostEstimatesSiteview> TSourceCostEstimatesSiteviews { get; set; } = null!;
//        public virtual DbSet<TSourceCostEstimatesWellview> TSourceCostEstimatesWellviews { get; set; } = null!;
//        public virtual DbSet<TStgAccumapVolumesByMonth> TStgAccumapVolumesByMonths { get; set; } = null!;
//        public virtual DbSet<TStgAvocetMvFvSite> TStgAvocetMvFvSites { get; set; } = null!;
//        public virtual DbSet<TStgCorporateModelBudget1> TStgCorporateModelBudget1s { get; set; } = null!;
//        public virtual DbSet<TStgCorporateModelBudgetConversionFactor> TStgCorporateModelBudgetConversionFactors { get; set; } = null!;
//        public virtual DbSet<TStgFieldticket> TStgFieldtickets { get; set; } = null!;
//        public virtual DbSet<TStgFieldticketsJson> TStgFieldticketsJsons { get; set; } = null!;
//        public virtual DbSet<TStgFieldticketsJson20220413> TStgFieldticketsJson20220413s { get; set; } = null!;
//        public virtual DbSet<TStgFieldticketsJson20220418All> TStgFieldticketsJson20220418Alls { get; set; } = null!;
//        public virtual DbSet<TStgFinanceBudgetFact> TStgFinanceBudgetFacts { get; set; } = null!;
//        public virtual DbSet<TStgFocusArea> TStgFocusAreas { get; set; } = null!;
//        public virtual DbSet<TStgIhsVolume> TStgIhsVolumes { get; set; } = null!;
//        public virtual DbSet<TStgIhsVolumesIncr> TStgIhsVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<TStgInvoiceEnergylinkVoucher> TStgInvoiceEnergylinkVouchers { get; set; } = null!;
//        public virtual DbSet<TStgMarketingAllFlownetHierarchy> TStgMarketingAllFlownetHierarchies { get; set; } = null!;
//        public virtual DbSet<TStgMarketingFlownetHierarchy> TStgMarketingFlownetHierarchies { get; set; } = null!;
//        public virtual DbSet<TStgMetirxParnterOpBatteryTxn> TStgMetirxParnterOpBatteryTxns { get; set; } = null!;
//        public virtual DbSet<TStgMetirxParnterOpBatteryTxnsIncr> TStgMetirxParnterOpBatteryTxnsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixFacilityCharge> TStgMetrixFacilityCharges { get; set; } = null!;
//        public virtual DbSet<TStgMetrixFacilityChargesIncr> TStgMetrixFacilityChargesIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixFcDistribution> TStgMetrixFcDistributions { get; set; } = null!;
//        public virtual DbSet<TStgMetrixFcDistributionsIncr> TStgMetrixFcDistributionsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixGovernmentRegistry> TStgMetrixGovernmentRegistries { get; set; } = null!;
//        public virtual DbSet<TStgMetrixParticipantAvailable> TStgMetrixParticipantAvailables { get; set; } = null!;
//        public virtual DbSet<TStgMetrixParticipantAvailablesIncr> TStgMetrixParticipantAvailablesIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixRoyaltySplit> TStgMetrixRoyaltySplits { get; set; } = null!;
//        public virtual DbSet<TStgMetrixRoyaltySplitsIncr> TStgMetrixRoyaltySplitsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixSalesDetail> TStgMetrixSalesDetails { get; set; } = null!;
//        public virtual DbSet<TStgMetrixSalesDetails20201125> TStgMetrixSalesDetails20201125s { get; set; } = null!;
//        public virtual DbSet<TStgMetrixSalesDetailsIncr> TStgMetrixSalesDetailsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgMetrixSalesDetailsWPricingUserdefined1> TStgMetrixSalesDetailsWPricingUserdefined1s { get; set; } = null!;
//        public virtual DbSet<TStgOpexAccrualsXl> TStgOpexAccrualsXls { get; set; } = null!;
//        public virtual DbSet<TStgOpexBudgetFact> TStgOpexBudgetFacts { get; set; } = null!;
//        public virtual DbSet<TStgOpexBudgetFacts20220404> TStgOpexBudgetFacts20220404s { get; set; } = null!;
//        public virtual DbSet<TStgOpexBudgetFactsOutput> TStgOpexBudgetFactsOutputs { get; set; } = null!;
//        public virtual DbSet<TStgOpexVolumesBudgetDlyFact> TStgOpexVolumesBudgetDlyFacts { get; set; } = null!;
//        public virtual DbSet<TStgPortfolioPricingText> TStgPortfolioPricingTexts { get; set; } = null!;
//        public virtual DbSet<TStgPortfolioPricingXl> TStgPortfolioPricingXls { get; set; } = null!;
//        public virtual DbSet<TStgPrismUwiCc> TStgPrismUwiCcs { get; set; } = null!;
//        public virtual DbSet<TStgProdviewAllFlownetHierarchy> TStgProdviewAllFlownetHierarchies { get; set; } = null!;
//        public virtual DbSet<TStgProdviewGroupPointDoi> TStgProdviewGroupPointDois { get; set; } = null!;
//        public virtual DbSet<TStgProdviewProrationDatum> TStgProdviewProrationData { get; set; } = null!;
//        public virtual DbSet<TStgProdviewVolumesFinal> TStgProdviewVolumesFinals { get; set; } = null!;
//        public virtual DbSet<TStgProdviewVolumesFinalIncr> TStgProdviewVolumesFinalIncrs { get; set; } = null!;
//        public virtual DbSet<TStgQbyteCostCentreDoi> TStgQbyteCostCentreDois { get; set; } = null!;
//        public virtual DbSet<TStgQbyteDeletedLineItemsIncr> TStgQbyteDeletedLineItemsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgQbyteVolumesFact> TStgQbyteVolumesFacts { get; set; } = null!;
//        public virtual DbSet<TStgQbyteVolumesFactsIncr> TStgQbyteVolumesFactsIncrs { get; set; } = null!;
//        public virtual DbSet<TStgRevenueModel> TStgRevenueModels { get; set; } = null!;
//        public virtual DbSet<TStgTypeCurvesCurrentScenario> TStgTypeCurvesCurrentScenarios { get; set; } = null!;
//        public virtual DbSet<TStgValnavBaseDeclineEntCustomFieldDef> TStgValnavBaseDeclineEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TStgValnavBudgetEntCustomFieldDef> TStgValnavBudgetEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TStgValnavReservesEntCustomFieldDef> TStgValnavReservesEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TStgValnavReservesXl> TStgValnavReservesXls { get; set; } = null!;
//        public virtual DbSet<TStgValnavTypecurvesEntCustomFieldDef> TStgValnavTypecurvesEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TTmpTextExecption> TTmpTextExecptions { get; set; } = null!;
//        public virtual DbSet<TTypecurvesCodeLookup> TTypecurvesCodeLookups { get; set; } = null!;
//        public virtual DbSet<TTypecurvesCompany> TTypecurvesCompanies { get; set; } = null!;
//        public virtual DbSet<TTypecurvesCustomFieldDef> TTypecurvesCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntCompanyInterest> TTypecurvesEntCompanyInterests { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntCustomField> TTypecurvesEntCustomFields { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntDetail> TTypecurvesEntDetails { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntLeaseInterest> TTypecurvesEntLeaseInterests { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntPlan> TTypecurvesEntPlans { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntProductInterest> TTypecurvesEntProductInterests { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntReservesCache> TTypecurvesEntReservesCaches { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntReservesCategory> TTypecurvesEntReservesCategories { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntReversionInterest> TTypecurvesEntReversionInterests { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntSharedPlanDatum> TTypecurvesEntSharedPlanData { get; set; } = null!;
//        public virtual DbSet<TTypecurvesEntity> TTypecurvesEntities { get; set; } = null!;
//        public virtual DbSet<TTypecurvesFiscPriceDeck> TTypecurvesFiscPriceDecks { get; set; } = null!;
//        public virtual DbSet<TTypecurvesFiscProductListValue> TTypecurvesFiscProductListValues { get; set; } = null!;
//        public virtual DbSet<TTypecurvesFiscReservesProduct> TTypecurvesFiscReservesProducts { get; set; } = null!;
//        public virtual DbSet<TTypecurvesFiscScenario> TTypecurvesFiscScenarios { get; set; } = null!;
//        public virtual DbSet<TTypecurvesFiscScenarioParam> TTypecurvesFiscScenarioParams { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultId> TTypecurvesResultIds { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsBtax> TTypecurvesResultsBtaxes { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsBtaxProduct> TTypecurvesResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsCost> TTypecurvesResultsCosts { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsCostDetail> TTypecurvesResultsCostDetails { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsLookup> TTypecurvesResultsLookups { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsRegime> TTypecurvesResultsRegimes { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsSummary> TTypecurvesResultsSummaries { get; set; } = null!;
//        public virtual DbSet<TTypecurvesResultsSummaryProduct> TTypecurvesResultsSummaryProducts { get; set; } = null!;
//        public virtual DbSet<TValnavDimHierarchyHistory> TValnavDimHierarchyHistories { get; set; } = null!;
//        public virtual DbSet<TValnavDimHierarchySource> TValnavDimHierarchySources { get; set; } = null!;
//        public virtual DbSet<TValnavOnstreamDateBudget> TValnavOnstreamDateBudgets { get; set; } = null!;
//        public virtual DbSet<TValnavOnstreamDateReserf> TValnavOnstreamDateReserves { get; set; } = null!;
//        public virtual DbSet<TValnavOnstreamDateTypecurf> TValnavOnstreamDateTypecurves { get; set; } = null!;
//        public virtual DbSet<TValnavXlsReservesUwi> TValnavXlsReservesUwis { get; set; } = null!;
//        public virtual DbSet<TVendorInvoice> TVendorInvoices { get; set; } = null!;
//        public virtual DbSet<TWellviewVendorLibrary> TWellviewVendorLibraries { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvca> TWellviewWvtWvcas { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjob> TWellviewWvtWvjobs { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobafe> TWellviewWvtWvjobaves { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobdrillstring> TWellviewWvtWvjobdrillstrings { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobdrillstringdrillparam> TWellviewWvtWvjobdrillstringdrillparams { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobreport> TWellviewWvtWvjobreports { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobreportcostgen> TWellviewWvtWvjobreportcostgens { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvjobrig> TWellviewWvtWvjobrigs { get; set; } = null!;
//        public virtual DbSet<TWellviewWvtWvwellheader> TWellviewWvtWvwellheaders { get; set; } = null!;
//        public virtual DbSet<TableArray> TableArrays { get; set; } = null!;
//        public virtual DbSet<TblTest> TblTests { get; set; } = null!;
//        public virtual DbSet<TestTbl> TestTbls { get; set; } = null!;
//        public virtual DbSet<Tract> Tracts { get; set; } = null!;
//        public virtual DbSet<TractMaster> TractMasters { get; set; } = null!;
//        public virtual DbSet<Unit> Units { get; set; } = null!;
//        public virtual DbSet<UnitMaster> UnitMasters { get; set; } = null!;
//        public virtual DbSet<UnitTract> UnitTracts { get; set; } = null!;
//        public virtual DbSet<UnitWell> UnitWells { get; set; } = null!;
//        public virtual DbSet<UserAccount> UserAccounts { get; set; } = null!;
//        public virtual DbSet<VAcctNonCapitalExpenditure> VAcctNonCapitalExpenditures { get; set; } = null!;
//        public virtual DbSet<VAfeCostEstimatesAfenav> VAfeCostEstimatesAfenavs { get; set; } = null!;
//        public virtual DbSet<VAfeCostEstimatesQbyte> VAfeCostEstimatesQbytes { get; set; } = null!;
//        public virtual DbSet<VAfeCostEstimatesSiteview> VAfeCostEstimatesSiteviews { get; set; } = null!;
//        public virtual DbSet<VAfeCostEstimatesWellview> VAfeCostEstimatesWellviews { get; set; } = null!;
//        public virtual DbSet<VAfenavSourceCostEstimate> VAfenavSourceCostEstimates { get; set; } = null!;
//        public virtual DbSet<VBasedeclineResultId> VBasedeclineResultIds { get; set; } = null!;
//        public virtual DbSet<VBonavistaUwiMasterList> VBonavistaUwiMasterLists { get; set; } = null!;
//        public virtual DbSet<VBonavistaUwiMasterListProdviewExternalsException> VBonavistaUwiMasterListProdviewExternalsExceptions { get; set; } = null!;
//        public virtual DbSet<VBonavistaUwiMasterListV1> VBonavistaUwiMasterListV1s { get; set; } = null!;
//        public virtual DbSet<VBudgetResultId> VBudgetResultIds { get; set; } = null!;
//        public virtual DbSet<VCcUwiMasterSource> VCcUwiMasterSources { get; set; } = null!;
//        public virtual DbSet<VCsxWellLatestWorkingInterest> VCsxWellLatestWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VCteVDimSourceScenarioFinanceDimScenario> VCteVDimSourceScenarioFinanceDimScenarios { get; set; } = null!;
//        public virtual DbSet<VCtrlMarketingSalesPoint> VCtrlMarketingSalesPoints { get; set; } = null!;
//        public virtual DbSet<VCtrlMarketingSalesPoints2> VCtrlMarketingSalesPoints2s { get; set; } = null!;
//        public virtual DbSet<VCtrlMarketingSalesPointsAll> VCtrlMarketingSalesPointsAlls { get; set; } = null!;
//        public virtual DbSet<VCtrlVolumesValanvTimePeriod> VCtrlVolumesValanvTimePeriods { get; set; } = null!;
//        public virtual DbSet<VCtrlVolumesValanvTimePeriodCte> VCtrlVolumesValanvTimePeriodCtes { get; set; } = null!;
//        public virtual DbSet<VDimAccountCapital> VDimAccountCapitals { get; set; } = null!;
//        public virtual DbSet<VDimAccountCapital2> VDimAccountCapital2s { get; set; } = null!;
//        public virtual DbSet<VDimAccountFinance> VDimAccountFinances { get; set; } = null!;
//        public virtual DbSet<VDimAccountLeaseop> VDimAccountLeaseops { get; set; } = null!;
//        public virtual DbSet<VDimAccumapLicense> VDimAccumapLicenses { get; set; } = null!;
//        public virtual DbSet<VDimAccumapOperator> VDimAccumapOperators { get; set; } = null!;
//        public virtual DbSet<VDimAccumapWell> VDimAccumapWells { get; set; } = null!;
//        public virtual DbSet<VDimAccumapWellsTest> VDimAccumapWellsTests { get; set; } = null!;
//        public virtual DbSet<VDimActivityPeriod> VDimActivityPeriods { get; set; } = null!;
//        public virtual DbSet<VDimAfeType> VDimAfeTypes { get; set; } = null!;
//        public virtual DbSet<VDimArContract> VDimArContracts { get; set; } = null!;
//        public virtual DbSet<VDimAuthorizationForExpenditure> VDimAuthorizationForExpenditures { get; set; } = null!;
//        public virtual DbSet<VDimChargeFormula> VDimChargeFormulas { get; set; } = null!;
//        public virtual DbSet<VDimChargeSequence> VDimChargeSequences { get; set; } = null!;
//        public virtual DbSet<VDimChargeType> VDimChargeTypes { get; set; } = null!;
//        public virtual DbSet<VDimControlGroup> VDimControlGroups { get; set; } = null!;
//        public virtual DbSet<VDimCorporateHierarchy> VDimCorporateHierarchies { get; set; } = null!;
//        public virtual DbSet<VDimCorporateHierarchyBcd> VDimCorporateHierarchyBcds { get; set; } = null!;
//        public virtual DbSet<VDimDateAccounting> VDimDateAccountings { get; set; } = null!;
//        public virtual DbSet<VDimDateAccountingCapital> VDimDateAccountingCapitals { get; set; } = null!;
//        public virtual DbSet<VDimDateAccountingFinance> VDimDateAccountingFinances { get; set; } = null!;
//        public virtual DbSet<VDimDateAccountingLeaseop> VDimDateAccountingLeaseops { get; set; } = null!;
//        public virtual DbSet<VDimDateActivityAccumap> VDimDateActivityAccumaps { get; set; } = null!;
//        public virtual DbSet<VDimDateActivityCapital> VDimDateActivityCapitals { get; set; } = null!;
//        public virtual DbSet<VDimDateActivityFinance> VDimDateActivityFinances { get; set; } = null!;
//        public virtual DbSet<VDimDateActivityLeaseop> VDimDateActivityLeaseops { get; set; } = null!;
//        public virtual DbSet<VDimDateActivityVolume> VDimDateActivityVolumes { get; set; } = null!;
//        public virtual DbSet<VDimDateCostCentreCreated> VDimDateCostCentreCreateds { get; set; } = null!;
//        public virtual DbSet<VDimDateCostCentreTerm> VDimDateCostCentreTerms { get; set; } = null!;
//        public virtual DbSet<VDimDateCostCentreTerminated> VDimDateCostCentreTerminateds { get; set; } = null!;
//        public virtual DbSet<VDimDateRigLastProduction> VDimDateRigLastProductions { get; set; } = null!;
//        public virtual DbSet<VDimDateRigOnProduction> VDimDateRigOnProductions { get; set; } = null!;
//        public virtual DbSet<VDimDateRigOnProduction1> VDimDateRigOnProductions1 { get; set; } = null!;
//        public virtual DbSet<VDimDateRigRelease> VDimDateRigReleases { get; set; } = null!;
//        public virtual DbSet<VDimDateSpud> VDimDateSpuds { get; set; } = null!;
//        public virtual DbSet<VDimDeliverySequence> VDimDeliverySequences { get; set; } = null!;
//        public virtual DbSet<VDimDueDate> VDimDueDates { get; set; } = null!;
//        public virtual DbSet<VDimExpenseEntity> VDimExpenseEntities { get; set; } = null!;
//        public virtual DbSet<VDimFacility> VDimFacilities { get; set; } = null!;
//        public virtual DbSet<VDimGrossNet> VDimGrossNets { get; set; } = null!;
//        public virtual DbSet<VDimInvoiceDate> VDimInvoiceDates { get; set; } = null!;
//        public virtual DbSet<VDimInvoiceNumber> VDimInvoiceNumbers { get; set; } = null!;
//        public virtual DbSet<VDimInvoiceType> VDimInvoiceTypes { get; set; } = null!;
//        public virtual DbSet<VDimIttestRun> VDimIttestRuns { get; set; } = null!;
//        public virtual DbSet<VDimNormalizedDay> VDimNormalizedDays { get; set; } = null!;
//        public virtual DbSet<VDimNormalizedMonth> VDimNormalizedMonths { get; set; } = null!;
//        public virtual DbSet<VDimNormalizedTime> VDimNormalizedTimes { get; set; } = null!;
//        public virtual DbSet<VDimOrganization> VDimOrganizations { get; set; } = null!;
//        public virtual DbSet<VDimOwner> VDimOwners { get; set; } = null!;
//        public virtual DbSet<VDimPaymentType> VDimPaymentTypes { get; set; } = null!;
//        public virtual DbSet<VDimProduct> VDimProducts { get; set; } = null!;
//        public virtual DbSet<VDimPurchaser> VDimPurchasers { get; set; } = null!;
//        public virtual DbSet<VDimPurchaserSequence> VDimPurchaserSequences { get; set; } = null!;
//        public virtual DbSet<VDimRevenueEntity> VDimRevenueEntities { get; set; } = null!;
//        public virtual DbSet<VDimRoyaltyObligationSequence> VDimRoyaltyObligationSequences { get; set; } = null!;
//        public virtual DbSet<VDimRoyaltyPayor> VDimRoyaltyPayors { get; set; } = null!;
//        public virtual DbSet<VDimRoyaltyType> VDimRoyaltyTypes { get; set; } = null!;
//        public virtual DbSet<VDimSalesTik> VDimSalesTiks { get; set; } = null!;
//        public virtual DbSet<VDimSalesType> VDimSalesTypes { get; set; } = null!;
//        public virtual DbSet<VDimScenarioCapital> VDimScenarioCapitals { get; set; } = null!;
//        public virtual DbSet<VDimScenarioFinance> VDimScenarioFinances { get; set; } = null!;
//        public virtual DbSet<VDimScenarioLeaseop> VDimScenarioLeaseops { get; set; } = null!;
//        public virtual DbSet<VDimScenarioLeaseopsBcd> VDimScenarioLeaseopsBcds { get; set; } = null!;
//        public virtual DbSet<VDimScenarioVolume> VDimScenarioVolumes { get; set; } = null!;
//        public virtual DbSet<VDimSourceAccountQbyteHierarchy> VDimSourceAccountQbyteHierarchies { get; set; } = null!;
//        public virtual DbSet<VDimSourceAccountQbyteHierarchyFinance> VDimSourceAccountQbyteHierarchyFinances { get; set; } = null!;
//        public virtual DbSet<VDimSourceEntityCostCentreHierarchy> VDimSourceEntityCostCentreHierarchies { get; set; } = null!;
//        public virtual DbSet<VDimSourceEntityUwiHierarchyAttribute> VDimSourceEntityUwiHierarchyAttributes { get; set; } = null!;
//        public virtual DbSet<VDimSourceEntityValnavEntitiesGlj> VDimSourceEntityValnavEntitiesGljs { get; set; } = null!;
//        public virtual DbSet<VDimSourceEntityValnavEntity> VDimSourceEntityValnavEntities { get; set; } = null!;
//        public virtual DbSet<VDimSourceEntityValnavHistoryEntity> VDimSourceEntityValnavHistoryEntities { get; set; } = null!;
//        public virtual DbSet<VDimSourceFacility> VDimSourceFacilities { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixArContract> VDimSourceMetrixArContracts { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixChargeFormula> VDimSourceMetrixChargeFormulas { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixChargeType> VDimSourceMetrixChargeTypes { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixControlGroup> VDimSourceMetrixControlGroups { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixDeliverySequence> VDimSourceMetrixDeliverySequences { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixFacility> VDimSourceMetrixFacilities { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixOwner> VDimSourceMetrixOwners { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixProduct> VDimSourceMetrixProducts { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixPurchaserSequence> VDimSourceMetrixPurchaserSequences { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixRoyaltyObligationSequence> VDimSourceMetrixRoyaltyObligationSequences { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixSalesType> VDimSourceMetrixSalesTypes { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixTargetFacility> VDimSourceMetrixTargetFacilities { get; set; } = null!;
//        public virtual DbSet<VDimSourceMetrixWellTract> VDimSourceMetrixWellTracts { get; set; } = null!;
//        public virtual DbSet<VDimSourceOrganization> VDimSourceOrganizations { get; set; } = null!;
//        public virtual DbSet<VDimSourceScenarioFinance> VDimSourceScenarioFinances { get; set; } = null!;
//        public virtual DbSet<VDimTargetFacility> VDimTargetFacilities { get; set; } = null!;
//        public virtual DbSet<VDimUwiCorporateHierarchy> VDimUwiCorporateHierarchies { get; set; } = null!;
//        public virtual DbSet<VDimValnavAccount> VDimValnavAccounts { get; set; } = null!;
//        public virtual DbSet<VDimValnavActivityDate> VDimValnavActivityDates { get; set; } = null!;
//        public virtual DbSet<VDimValnavCorporateHierarchy> VDimValnavCorporateHierarchies { get; set; } = null!;
//        public virtual DbSet<VDimValnavCorporateHierarchyBcd> VDimValnavCorporateHierarchyBcds { get; set; } = null!;
//        public virtual DbSet<VDimValnavCurrentPriorBudgetScenarioSource> VDimValnavCurrentPriorBudgetScenarioSources { get; set; } = null!;
//        public virtual DbSet<VDimValnavGrossNet> VDimValnavGrossNets { get; set; } = null!;
//        public virtual DbSet<VDimValnavNormalizedMonth> VDimValnavNormalizedMonths { get; set; } = null!;
//        public virtual DbSet<VDimValnavReserveCategory> VDimValnavReserveCategories { get; set; } = null!;
//        public virtual DbSet<VDimValnavReserveRealizedDate> VDimValnavReserveRealizedDates { get; set; } = null!;
//        public virtual DbSet<VDimValnavScenario> VDimValnavScenarios { get; set; } = null!;
//        public virtual DbSet<VDimValnavScenarioBcd> VDimValnavScenarioBcds { get; set; } = null!;
//        public virtual DbSet<VDimVendor> VDimVendors { get; set; } = null!;
//        public virtual DbSet<VDimVnReservesActivityDate> VDimVnReservesActivityDates { get; set; } = null!;
//        public virtual DbSet<VDimVnReservesReserveRealizedDate> VDimVnReservesReserveRealizedDates { get; set; } = null!;
//        public virtual DbSet<VDimVnreservesScenario> VDimVnreservesScenarios { get; set; } = null!;
//        public virtual DbSet<VDimVntypeCurvesScenario> VDimVntypeCurvesScenarios { get; set; } = null!;
//        public virtual DbSet<VDimVoucherNumber> VDimVoucherNumbers { get; set; } = null!;
//        public virtual DbSet<VDimVoucherType> VDimVoucherTypes { get; set; } = null!;
//        public virtual DbSet<VDimWell> VDimWells { get; set; } = null!;
//        public virtual DbSet<VEwfEventSequenceInfo> VEwfEventSequenceInfos { get; set; } = null!;
//        public virtual DbSet<VEwfProdDatum> VEwfProdData { get; set; } = null!;
//        public virtual DbSet<VEwfWellboreInfo> VEwfWellboreInfos { get; set; } = null!;
//        public virtual DbSet<VExceptionVolumesVsValnavUwiCostCentre> VExceptionVolumesVsValnavUwiCostCentres { get; set; } = null!;
//        public virtual DbSet<VExportToOplynxv6> VExportToOplynxv6s { get; set; } = null!;
//        public virtual DbSet<VFactAccumap> VFactAccumaps { get; set; } = null!;
//        public virtual DbSet<VFactApAr> VFactApArs { get; set; } = null!;
//        public virtual DbSet<VFactApArOpen> VFactApArOpens { get; set; } = null!;
//        public virtual DbSet<VFactCapital> VFactCapitals { get; set; } = null!;
//        public virtual DbSet<VFactFinance> VFactFinances { get; set; } = null!;
//        public virtual DbSet<VFactIttest> VFactIttests { get; set; } = null!;
//        public virtual DbSet<VFactLeaseop> VFactLeaseops { get; set; } = null!;
//        public virtual DbSet<VFactLeaseopsBcd> VFactLeaseopsBcds { get; set; } = null!;
//        public virtual DbSet<VFactMetrix> VFactMetrixes { get; set; } = null!;
//        public virtual DbSet<VFactMetrixFee> VFactMetrixFees { get; set; } = null!;
//        public virtual DbSet<VFactMetrixRoyalty> VFactMetrixRoyalties { get; set; } = null!;
//        public virtual DbSet<VFactSourceAllocatedSalesRawVolume> VFactSourceAllocatedSalesRawVolumes { get; set; } = null!;
//        public virtual DbSet<VFactSourceApAr> VFactSourceApArs { get; set; } = null!;
//        public virtual DbSet<VFactSourceCostActualsQbyte> VFactSourceCostActualsQbytes { get; set; } = null!;
//        public virtual DbSet<VFactSourceCostEstimatesAfenav> VFactSourceCostEstimatesAfenavs { get; set; } = null!;
//        public virtual DbSet<VFactSourceCostEstimatesQbyte> VFactSourceCostEstimatesQbytes { get; set; } = null!;
//        public virtual DbSet<VFactSourceCostEstimatesSiteview> VFactSourceCostEstimatesSiteviews { get; set; } = null!;
//        public virtual DbSet<VFactSourceCostEstimatesWellview> VFactSourceCostEstimatesWellviews { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcHistoryFact> VFactSourceFdcHistoryFacts { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcIhsFull> VFactSourceFdcIhsFulls { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcIhsIncr> VFactSourceFdcIhsIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcProdviewDowntime> VFactSourceFdcProdviewDowntimes { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcProdviewDowntimeIncr> VFactSourceFdcProdviewDowntimeIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcProdviewInjection> VFactSourceFdcProdviewInjections { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcProdviewInjectionIncr> VFactSourceFdcProdviewInjectionIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcQbyteSalesFull> VFactSourceFdcQbyteSalesFulls { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcQbyteSalesIncr> VFactSourceFdcQbyteSalesIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcValnavGljProductionVolume> VFactSourceFdcValnavGljProductionVolumes { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcValnavVolume> VFactSourceFdcValnavVolumes { get; set; } = null!;
//        public virtual DbSet<VFactSourceFdcValnavVolumesDaily> VFactSourceFdcValnavVolumesDailies { get; set; } = null!;
//        public virtual DbSet<VFactSourceFinanceBudget> VFactSourceFinanceBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceLeaseopsOpexAccrual> VFactSourceLeaseopsOpexAccruals { get; set; } = null!;
//        public virtual DbSet<VFactSourceLeaseopsValnavVolume> VFactSourceLeaseopsValnavVolumes { get; set; } = null!;
//        public virtual DbSet<VFactSourceMarketing> VFactSourceMarketings { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixFee> VFactSourceMetrixFees { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixFeesIncr> VFactSourceMetrixFeesIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixInventoriesIncr> VFactSourceMetrixInventoriesIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixInventory> VFactSourceMetrixInventories { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixNonopSale> VFactSourceMetrixNonopSales { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixNonopSalesIncr> VFactSourceMetrixNonopSalesIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixRoyalty> VFactSourceMetrixRoyalties { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixRoyaltyIncr> VFactSourceMetrixRoyaltyIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixSale> VFactSourceMetrixSales { get; set; } = null!;
//        public virtual DbSet<VFactSourceMetrixSalesIncr> VFactSourceMetrixSalesIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceOpexAccrualVoucherUploadDetail> VFactSourceOpexAccrualVoucherUploadDetails { get; set; } = null!;
//        public virtual DbSet<VFactSourceOpexAccrualVoucherUploadHeader> VFactSourceOpexAccrualVoucherUploadHeaders { get; set; } = null!;
//        public virtual DbSet<VFactSourcePowervision> VFactSourcePowervisions { get; set; } = null!;
//        public virtual DbSet<VFactSourceQbyte> VFactSourceQbytes { get; set; } = null!;
//        public virtual DbSet<VFactSourceQbyteIncr> VFactSourceQbyteIncrs { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavCapitalBudget> VFactSourceValnavCapitalBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavCapitalGljreserf> VFactSourceValnavCapitalGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavCapitalTypecurf> VFactSourceValnavCapitalTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavChanceOfSuccessBudget> VFactSourceValnavChanceOfSuccessBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsBudget> VFactSourceValnavEconomicsBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsBudgetFinal> VFactSourceValnavEconomicsBudgetFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsGljreserf> VFactSourceValnavEconomicsGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsGljreservesFinal> VFactSourceValnavEconomicsGljreservesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsTypecurf> VFactSourceValnavEconomicsTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavEconomicsTypecurvesFinal> VFactSourceValnavEconomicsTypecurvesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavFinancialBudget> VFactSourceValnavFinancialBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavFinancialGljreserf> VFactSourceValnavFinancialGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavFinancialTypecurf> VFactSourceValnavFinancialTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavFinancialXl> VFactSourceValnavFinancialXls { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavLateralLengthBudget> VFactSourceValnavLateralLengthBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionBaseDecline> VFactSourceValnavProductionBaseDeclines { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionBaseDeclineFinal> VFactSourceValnavProductionBaseDeclineFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionBudget> VFactSourceValnavProductionBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionBudgetFinal> VFactSourceValnavProductionBudgetFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionGljreserf> VFactSourceValnavProductionGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionGljreservesFinal> VFactSourceValnavProductionGljreservesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionTypecurf> VFactSourceValnavProductionTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavProductionTypecurvesFinal> VFactSourceValnavProductionTypecurvesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavQbyteWorkingInterest> VFactSourceValnavQbyteWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReserveAddsCalculation> VFactSourceValnavReserveAddsCalculations { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesBudget> VFactSourceValnavReservesBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesBudgetFinal> VFactSourceValnavReservesBudgetFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesBudgetRi> VFactSourceValnavReservesBudgetRis { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesGljreserf> VFactSourceValnavReservesGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesGljreservesFinal> VFactSourceValnavReservesGljreservesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesTypecurf> VFactSourceValnavReservesTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesTypecurvesFinal> VFactSourceValnavReservesTypecurvesFinals { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavReservesXl> VFactSourceValnavReservesXls { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRevenuesRoyaltyByProductBaseDecline> VFactSourceValnavRevenuesRoyaltyByProductBaseDeclines { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRevenuesRoyaltyByProductBudget> VFactSourceValnavRevenuesRoyaltyByProductBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRevenuesRoyaltyByProductGljreserf> VFactSourceValnavRevenuesRoyaltyByProductGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRevenuesRoyaltyByProductTypecurf> VFactSourceValnavRevenuesRoyaltyByProductTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltiesBudget> VFactSourceValnavRoyaltiesBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltiesGljreserf> VFactSourceValnavRoyaltiesGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltiesTypecurf> VFactSourceValnavRoyaltiesTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltyByProductCalculationsBaseDecline> VFactSourceValnavRoyaltyByProductCalculationsBaseDeclines { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltyByProductCalculationsBudget> VFactSourceValnavRoyaltyByProductCalculationsBudgets { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltyByProductCalculationsGljreserf> VFactSourceValnavRoyaltyByProductCalculationsGljreserves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavRoyaltyByProductCalculationsTypecurf> VFactSourceValnavRoyaltyByProductCalculationsTypecurves { get; set; } = null!;
//        public virtual DbSet<VFactSourceValnavWellCountsBudget> VFactSourceValnavWellCountsBudgets { get; set; } = null!;
//        public virtual DbSet<VFactValnavFinancial> VFactValnavFinancials { get; set; } = null!;
//        public virtual DbSet<VFactValnavFinancialBcd> VFactValnavFinancialBcds { get; set; } = null!;
//        public virtual DbSet<VFactValnavFinancialCurrent> VFactValnavFinancialCurrents { get; set; } = null!;
//        public virtual DbSet<VFactValnavProduction> VFactValnavProductions { get; set; } = null!;
//        public virtual DbSet<VFactValnavProductionBcd> VFactValnavProductionBcds { get; set; } = null!;
//        public virtual DbSet<VFactValnavProductionCurrent> VFactValnavProductionCurrents { get; set; } = null!;
//        public virtual DbSet<VFactValnavReserf> VFactValnavReserves { get; set; } = null!;
//        public virtual DbSet<VFactValnavReservesBcd> VFactValnavReservesBcds { get; set; } = null!;
//        public virtual DbSet<VFactValnavReservesCurrent> VFactValnavReservesCurrents { get; set; } = null!;
//        public virtual DbSet<VFactVnreservesFinancial> VFactVnreservesFinancials { get; set; } = null!;
//        public virtual DbSet<VFactVnreservesProduction> VFactVnreservesProductions { get; set; } = null!;
//        public virtual DbSet<VFactVnreservesReserf> VFactVnreservesReserves { get; set; } = null!;
//        public virtual DbSet<VFactVntypecurvesFinancial> VFactVntypecurvesFinancials { get; set; } = null!;
//        public virtual DbSet<VFactVntypecurvesProduction> VFactVntypecurvesProductions { get; set; } = null!;
//        public virtual DbSet<VFactVntypecurvesReserf> VFactVntypecurvesReserves { get; set; } = null!;
//        public virtual DbSet<VFactVolume> VFactVolumes { get; set; } = null!;
//        public virtual DbSet<VFieldticketsFactsSource> VFieldticketsFactsSources { get; set; } = null!;
//        public virtual DbSet<VHierarchyAttribute> VHierarchyAttributes { get; set; } = null!;
//        public virtual DbSet<VIhsAttribute> VIhsAttributes { get; set; } = null!;
//        public virtual DbSet<VInvoicesUsed> VInvoicesUseds { get; set; } = null!;
//        public virtual DbSet<VMdsSourceBcdCcCustomGrouping> VMdsSourceBcdCcCustomGroupings { get; set; } = null!;
//        public virtual DbSet<VMetrixUnitTract> VMetrixUnitTracts { get; set; } = null!;
//        public virtual DbSet<VMetrixUnitWell> VMetrixUnitWells { get; set; } = null!;
//        public virtual DbSet<VOpeninvoiceDetail> VOpeninvoiceDetails { get; set; } = null!;
//        public virtual DbSet<VOpeninvoiceDetailsIncr> VOpeninvoiceDetailsIncrs { get; set; } = null!;
//        public virtual DbSet<VOpeninvoiceXlsxAttachment> VOpeninvoiceXlsxAttachments { get; set; } = null!;
//        public virtual DbSet<VOpexBudgetSourceFact> VOpexBudgetSourceFacts { get; set; } = null!;
//        public virtual DbSet<VOpexPwrappsScenario> VOpexPwrappsScenarios { get; set; } = null!;
//        public virtual DbSet<VOpexPwrappsSourceScenario> VOpexPwrappsSourceScenarios { get; set; } = null!;
//        public virtual DbSet<VOpexPwrappsTargetScenario> VOpexPwrappsTargetScenarios { get; set; } = null!;
//        public virtual DbSet<VProdviewAllocatedVolume> VProdviewAllocatedVolumes { get; set; } = null!;
//        public virtual DbSet<VProdviewAllocatedVolumesIncr> VProdviewAllocatedVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<VProdviewAttribute> VProdviewAttributes { get; set; } = null!;
//        public virtual DbSet<VProdviewBsw> VProdviewBsws { get; set; } = null!;
//        public virtual DbSet<VProdviewDowntimeHoursVolume> VProdviewDowntimeHoursVolumes { get; set; } = null!;
//        public virtual DbSet<VProdviewDowntimeHoursVolumesIncr> VProdviewDowntimeHoursVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<VProdviewInjectionVolume> VProdviewInjectionVolumes { get; set; } = null!;
//        public virtual DbSet<VProdviewInjectionVolumesIncr> VProdviewInjectionVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<VProdviewJointsToFluid> VProdviewJointsToFluids { get; set; } = null!;
//        public virtual DbSet<VProdviewOnstreamDate> VProdviewOnstreamDates { get; set; } = null!;
//        public virtual DbSet<VProdviewProrationDataIncr> VProdviewProrationDataIncrs { get; set; } = null!;
//        public virtual DbSet<VProdviewProrationDatum> VProdviewProrationData { get; set; } = null!;
//        public virtual DbSet<VProdviewShrinkYieldRate> VProdviewShrinkYieldRates { get; set; } = null!;
//        public virtual DbSet<VProdviewTypfluidprod> VProdviewTypfluidprods { get; set; } = null!;
//        public virtual DbSet<VQbyteAccountHierarchySource> VQbyteAccountHierarchySources { get; set; } = null!;
//        public virtual DbSet<VQbyteAccountHierarchySourceFinance> VQbyteAccountHierarchySourceFinances { get; set; } = null!;
//        public virtual DbSet<VQbyteAfeCcList> VQbyteAfeCcLists { get; set; } = null!;
//        public virtual DbSet<VQbyteAfeCcUwi> VQbyteAfeCcUwis { get; set; } = null!;
//        public virtual DbSet<VQbyteAfeProjectJustificationComment> VQbyteAfeProjectJustificationComments { get; set; } = null!;
//        public virtual DbSet<VQbyteAuthorizationForExpenditureAttribute> VQbyteAuthorizationForExpenditureAttributes { get; set; } = null!;
//        public virtual DbSet<VQbyteCcBnpDivestHierarchy> VQbyteCcBnpDivestHierarchies { get; set; } = null!;
//        public virtual DbSet<VQbyteCcHierarchy> VQbyteCcHierarchies { get; set; } = null!;
//        public virtual DbSet<VQbyteCorpHierarchy> VQbyteCorpHierarchies { get; set; } = null!;
//        public virtual DbSet<VQbyteCostCentresAttribute> VQbyteCostCentresAttributes { get; set; } = null!;
//        public virtual DbSet<VQbyteSourceCostEstimate> VQbyteSourceCostEstimates { get; set; } = null!;
//        public virtual DbSet<VQbyteVendor> VQbyteVendors { get; set; } = null!;
//        public virtual DbSet<VReservesResultId> VReservesResultIds { get; set; } = null!;
//        public virtual DbSet<VReservesResultsBtaxProduct> VReservesResultsBtaxProducts { get; set; } = null!;
//        public virtual DbSet<VRptApInvoiceAllocation> VRptApInvoiceAllocations { get; set; } = null!;
//        public virtual DbSet<VRptCsxLatestWorkingInterest> VRptCsxLatestWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VRptCsxWellInsuranceElection> VRptCsxWellInsuranceElections { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging> VRptDepartmentUserAgings { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging20220414> VRptDepartmentUserAging20220414s { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging20220414b> VRptDepartmentUserAging20220414bs { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging20220418> VRptDepartmentUserAging20220418s { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging20220505> VRptDepartmentUserAging20220505s { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAging20220511> VRptDepartmentUserAging20220511s { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAgingBak> VRptDepartmentUserAgingBaks { get; set; } = null!;
//        public virtual DbSet<VRptDepartmentUserAgingPlusQbyte> VRptDepartmentUserAgingPlusQbytes { get; set; } = null!;
//        public virtual DbSet<VRptInsuranceElection> VRptInsuranceElections { get; set; } = null!;
//        public virtual DbSet<VRptOpenticketsCurrentStatus> VRptOpenticketsCurrentStatuses { get; set; } = null!;
//        public virtual DbSet<VRptOwnershipSummary> VRptOwnershipSummaries { get; set; } = null!;
//        public virtual DbSet<VRptQbLatestWorkingInterest> VRptQbLatestWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VRptRoyaltyObligation> VRptRoyaltyObligations { get; set; } = null!;
//        public virtual DbSet<VRptServiceAgreementFeeContract> VRptServiceAgreementFeeContracts { get; set; } = null!;
//        public virtual DbSet<VRptValnavCapitalActual> VRptValnavCapitalActuals { get; set; } = null!;
//        public virtual DbSet<VRptWiExceptionQbC> VRptWiExceptionQbCs { get; set; } = null!;
//        public virtual DbSet<VSiteviewSourceCostEstimate> VSiteviewSourceCostEstimates { get; set; } = null!;
//        public virtual DbSet<VSourceInvoicesDatum> VSourceInvoicesData { get; set; } = null!;
//        public virtual DbSet<VSourceMetrixControlGroup> VSourceMetrixControlGroups { get; set; } = null!;
//        public virtual DbSet<VStgIhsVolume> VStgIhsVolumes { get; set; } = null!;
//        public virtual DbSet<VStgIhsVolumesIncr> VStgIhsVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<VStgInvoiceEnergylink> VStgInvoiceEnergylinks { get; set; } = null!;
//        public virtual DbSet<VStgOnProdDate> VStgOnProdDates { get; set; } = null!;
//        public virtual DbSet<VStgProdviewAllFlownetHierarchy> VStgProdviewAllFlownetHierarchies { get; set; } = null!;
//        public virtual DbSet<VStgProdviewGroupPointDoi> VStgProdviewGroupPointDois { get; set; } = null!;
//        public virtual DbSet<VStgProdviewVolume> VStgProdviewVolumes { get; set; } = null!;
//        public virtual DbSet<VStgProdviewVolumesIncr> VStgProdviewVolumesIncrs { get; set; } = null!;
//        public virtual DbSet<VStgQbyteCostCentreDoi> VStgQbyteCostCentreDois { get; set; } = null!;
//        public virtual DbSet<VStgQbyteVolumesFact> VStgQbyteVolumesFacts { get; set; } = null!;
//        public virtual DbSet<VStgQbyteVolumesFactsIncr> VStgQbyteVolumesFactsIncrs { get; set; } = null!;
//        public virtual DbSet<VStgValnavBaseDeclineEntCustomFieldDef> VStgValnavBaseDeclineEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<VStgValnavBudgetEntCustomFieldDef> VStgValnavBudgetEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<VStgValnavReservesEntCustomFieldDef> VStgValnavReservesEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<VStgValnavTypecurvesEntCustomFieldDef> VStgValnavTypecurvesEntCustomFieldDefs { get; set; } = null!;
//        public virtual DbSet<VTypecurvesResultId> VTypecurvesResultIds { get; set; } = null!;
//        public virtual DbSet<VUwisBySalesDispositionPoint> VUwisBySalesDispositionPoints { get; set; } = null!;
//        public virtual DbSet<VValnavDimHierarchySource> VValnavDimHierarchySources { get; set; } = null!;
//        public virtual DbSet<VValnavForecastStartDateBudget> VValnavForecastStartDateBudgets { get; set; } = null!;
//        public virtual DbSet<VValnavNetbackAccount> VValnavNetbackAccounts { get; set; } = null!;
//        public virtual DbSet<VValnavOnstreamDateBudget> VValnavOnstreamDateBudgets { get; set; } = null!;
//        public virtual DbSet<VValnavOnstreamDateReserf> VValnavOnstreamDateReserves { get; set; } = null!;
//        public virtual DbSet<VValnavOnstreamDateTypecurf> VValnavOnstreamDateTypecurves { get; set; } = null!;
//        public virtual DbSet<VValnavTypeCurvesUwiWorkingInterest> VValnavTypeCurvesUwiWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VValnavTypecurvesPriceDeck> VValnavTypecurvesPriceDecks { get; set; } = null!;
//        public virtual DbSet<VValnavUwiWorkingInterest> VValnavUwiWorkingInterests { get; set; } = null!;
//        public virtual DbSet<VValnavXlsReservesUwi> VValnavXlsReservesUwis { get; set; } = null!;
//        public virtual DbSet<VVerifyVolumesQbyteVsVolumeCube> VVerifyVolumesQbyteVsVolumeCubes { get; set; } = null!;
//        public virtual DbSet<VWellviewSourceCostEstimate> VWellviewSourceCostEstimates { get; set; } = null!;
//        public virtual DbSet<WDetail1> WDetail1s { get; set; } = null!;
//        public virtual DbSet<WDetail2> WDetail2s { get; set; } = null!;
//        public virtual DbSet<WatermarkTable> WatermarkTables { get; set; } = null!;
//        public virtual DbSet<Well> Wells { get; set; } = null!;
//        public virtual DbSet<WellFactor> WellFactors { get; set; } = null!;
//        public virtual DbSet<WellMaster> WellMasters { get; set; } = null!;
//        public virtual DbSet<WellTract> WellTracts { get; set; } = null!;
//        public virtual DbSet<XReference> XReferences { get; set; } = null!;

//        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//        {
//            if (!optionsBuilder.IsConfigured)
//            {
//                optionsBuilder.UseSqlServer(ConfigurationManager.ConnectionStrings["Synapse"].ConnectionString);
//            }
//        }

//        protected override void OnModelCreating(ModelBuilder modelBuilder)
//        {
//            modelBuilder.Entity<AdfcopyGeneratedExternalTable41cb5967A8fe487dB0887e2a15ecbbd6>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ADFCopyGeneratedExternalTable_41cb5967-a8fe-487d-b088-7e2a15ecbbd6", "dbo");

//                entity.Property(e => e.Bhaanpres).HasColumnName("bhaanpres");

//                entity.Property(e => e.Bhtemp).HasColumnName("bhtemp");

//                entity.Property(e => e.Depthend).HasColumnName("depthend");

//                entity.Property(e => e.Depthstart).HasColumnName("depthstart");

//                entity.Property(e => e.Dttmend).HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart).HasColumnName("dttmstart");

//                entity.Property(e => e.Ecdendoverride).HasColumnName("ecdendoverride");

//                entity.Property(e => e.Excludefromnewhole).HasColumnName("excludefromnewhole");

//                entity.Property(e => e.Gasinjrate).HasColumnName("gasinjrate");

//                entity.Property(e => e.Gasreturnrate).HasColumnName("gasreturnrate");

//                entity.Property(e => e.Hookloadoffbottom).HasColumnName("hookloadoffbottom");

//                entity.Property(e => e.Hookloadpickup).HasColumnName("hookloadpickup");

//                entity.Property(e => e.Hookloadrotating).HasColumnName("hookloadrotating");

//                entity.Property(e => e.Hookloadslackoff).HasColumnName("hookloadslackoff");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecwellbore)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellbore");

//                entity.Property(e => e.Idrecwellboretk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellboretk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Injtemp).HasColumnName("injtemp");

//                entity.Property(e => e.Liquidinjrate).HasColumnName("liquidinjrate");

//                entity.Property(e => e.Liquidinjrateriser).HasColumnName("liquidinjrateriser");

//                entity.Property(e => e.Liquidreturnrate).HasColumnName("liquidreturnrate");

//                entity.Property(e => e.Note)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("note");

//                entity.Property(e => e.Refnostand)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("refnostand");

//                entity.Property(e => e.Ropinst).HasColumnName("ropinst");

//                entity.Property(e => e.Rpmmotor).HasColumnName("rpmmotor");

//                entity.Property(e => e.Rpmstring).HasColumnName("rpmstring");

//                entity.Property(e => e.Sppdiff).HasColumnName("sppdiff");

//                entity.Property(e => e.Sppdrill).HasColumnName("sppdrill");

//                entity.Property(e => e.Surfannpres).HasColumnName("surfannpres");

//                entity.Property(e => e.Surfanntemp).HasColumnName("surfanntemp");

//                entity.Property(e => e.Syscreatedate).HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate).HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate).HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szodvgstab).HasColumnName("szodvgstab");

//                entity.Property(e => e.Tfo).HasColumnName("tfo");

//                entity.Property(e => e.Tforef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tforef");

//                entity.Property(e => e.Tmcirc).HasColumnName("tmcirc");

//                entity.Property(e => e.Tmdrill).HasColumnName("tmdrill");

//                entity.Property(e => e.Tmother).HasColumnName("tmother");

//                entity.Property(e => e.Tmtrip).HasColumnName("tmtrip");

//                entity.Property(e => e.Torquedrill).HasColumnName("torquedrill");

//                entity.Property(e => e.Torqueoffbtm).HasColumnName("torqueoffbtm");

//                entity.Property(e => e.Torqueunits)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("torqueunits");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Wob).HasColumnName("wob");
//            });

//            modelBuilder.Entity<BaTable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("BA_TABLE", "stage_csx_csland");

//                entity.Property(e => e.AddressLine1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_1");

//                entity.Property(e => e.AddressLine2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_2");

//                entity.Property(e => e.AddressLine3)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_3");

//                entity.Property(e => e.AddressLine4)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_4");

//                entity.Property(e => e.AddressLine5)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_5");

//                entity.Property(e => e.AlternateCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.BankFee)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("BANK_FEE");

//                entity.Property(e => e.CombineRental)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("COMBINE_RENTAL");

//                entity.Property(e => e.ContactName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTACT_NAME");

//                entity.Property(e => e.CurrencyCountry)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENCY_COUNTRY")
//                    .IsFixedLength();

//                entity.Property(e => e.EMailAddress)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("E_MAIL_ADDRESS");

//                entity.Property(e => e.FaxNumber)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("FAX_NUMBER");

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.GstRegNo)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_REG_NO");

//                entity.Property(e => e.MailFlags)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("MAIL_FLAGS");

//                entity.Property(e => e.MinChequeAmount)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("MIN_CHEQUE_AMOUNT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.PhoneNumber)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("PHONE_NUMBER");

//                entity.Property(e => e.PrimaryKey)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_KEY")
//                    .IsFixedLength();

//                entity.Property(e => e.SapCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("SAP_CODE");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME")
//                    .IsFixedLength();

//                entity.Property(e => e.SinNumber)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("SIN_NUMBER");

//                entity.Property(e => e.WtaxCountry)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("WTAX_COUNTRY")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<BatteryFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("BATTERY_FACILITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<BatteryMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("BATTERY_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.BatteryOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_OPERATOR_ID");

//                entity.Property(e => e.BatteryType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_TYPE");

//                entity.Property(e => e.Bc08Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC08_FACILITY");

//                entity.Property(e => e.Bc09Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC09_FACILITY");

//                entity.Property(e => e.ContactName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTACT_NAME");

//                entity.Property(e => e.ContactPhone)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTACT_PHONE");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtpRegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.CtpRegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.CtpRegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_PROVINCE");

//                entity.Property(e => e.DlsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_EVENT_SEQUENCE");

//                entity.Property(e => e.DlsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("DLS_LOCATION_EXCEPTION");

//                entity.Property(e => e.DlsMeridian)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_MERIDIAN");

//                entity.Property(e => e.DlsRange)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_RANGE");

//                entity.Property(e => e.DlsSection)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SECTION");

//                entity.Property(e => e.DlsSubDivision)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SUB_DIVISION");

//                entity.Property(e => e.DlsTownship)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DLS_TOWNSHIP");

//                entity.Property(e => e.EndOfStreamFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("END_OF_STREAM_FACILITY");

//                entity.Property(e => e.EntitySubtypeSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ENTITY_SUBTYPE_SYS_ID");

//                entity.Property(e => e.FluidType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FLUID_TYPE");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NtsBlock)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_BLOCK");

//                entity.Property(e => e.NtsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("NTS_EVENT_SEQUENCE");

//                entity.Property(e => e.NtsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_LOCATION_EXCEPTION");

//                entity.Property(e => e.NtsMapNumber1)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER1");

//                entity.Property(e => e.NtsMapNumber2)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER2");

//                entity.Property(e => e.NtsMapNumber3)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER3");

//                entity.Property(e => e.NtsQuarterUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_QUARTER_UNIT");

//                entity.Property(e => e.NtsUnit)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_UNIT");

//                entity.Property(e => e.OffShoreBlock)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("OFF_SHORE_BLOCK");

//                entity.Property(e => e.OffShoreQuadrant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_QUADRANT");

//                entity.Property(e => e.OffShoreSubTract)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("OFF_SHORE_SUB_TRACT");

//                entity.Property(e => e.OffShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_TRACT");

//                entity.Property(e => e.OilCtpProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_CTP_PRODUCT_CODE");

//                entity.Property(e => e.OilPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_PIPELINE_SPLIT");

//                entity.Property(e => e.OnShoreConcession)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_CONCESSION");

//                entity.Property(e => e.OnShoreLot)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_LOT");

//                entity.Property(e => e.OnShoreTownship)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TOWNSHIP");

//                entity.Property(e => e.OnShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TRACT");

//                entity.Property(e => e.OnShoreZone)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_ZONE");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.PraFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRA_FACILITY");

//                entity.Property(e => e.ProcessSafoafFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_SAFOAF_FLAG");

//                entity.Property(e => e.ProcessVolumetrics)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_VOLUMETRICS");

//                entity.Property(e => e.ProducePipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCE_PIPELINE_SPLIT");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_STATUS");

//                entity.Property(e => e.PseudoBatteryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PSEUDO_BATTERY_FLAG");

//                entity.Property(e => e.RegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.RegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.RegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_PROVINCE");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WestfloReceiptPoint)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WESTFLO_RECEIPT_POINT");
//            });

//            modelBuilder.Entity<CBase>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_BASE", "stage_csx_csland");

//                entity.Property(e => e.AdminCompany)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ADMIN_COMPANY")
//                    .IsFixedLength();

//                entity.Property(e => e.Assignment)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNMENT");

//                entity.Property(e => e.AssignmentTerms)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNMENT_TERMS");

//                entity.Property(e => e.ContractDate)
//                    .HasColumnType("date")
//                    .HasColumnName("CONTRACT_DATE");

//                entity.Property(e => e.ContractName)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_NAME");

//                entity.Property(e => e.ContractType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.PrevDocNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PREV_DOC_NUMBER");

//                entity.Property(e => e.Processor)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESSOR")
//                    .IsFixedLength();

//                entity.Property(e => e.Producer)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCER")
//                    .IsFixedLength();

//                entity.Property(e => e.RevisionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("REVISION_DATE");

//                entity.Property(e => e.RevisionNumber)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVISION_NUMBER");

//                entity.Property(e => e.Rofr)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROFR");

//                entity.Property(e => e.Segregation)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SEGREGATION");

//                entity.Property(e => e.StatusDate)
//                    .HasColumnType("date")
//                    .HasColumnName("STATUS_DATE");

//                entity.Property(e => e.Term)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM")
//                    .IsFixedLength();

//                entity.Property(e => e.TermNotice)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_NOTICE")
//                    .IsFixedLength();

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("TERMINATION_DATE");

//                entity.Property(e => e.UnitCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.UnitOperator)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_OPERATOR")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<COperCapl81>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_OPER_CAPL81", "stage_csx_csland");

//                entity.Property(e => e.Capl811007Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL81_1007_RMKS");

//                entity.Property(e => e.Capl812401Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL81_2401_RMKS");

//                entity.Property(e => e.Capl81311Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL81_311_RMKS");

//                entity.Property(e => e.Capl81903Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL81_903_RMKS");

//                entity.Property(e => e.CasingPoint)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CASING_POINT");

//                entity.Property(e => e.DispOfInterest)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISP_OF_INTEREST");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.Insurance)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INSURANCE");

//                entity.Property(e => e.PenaltyDev)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PENALTY_DEV");

//                entity.Property(e => e.PenaltyExp)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PENALTY_EXP");
//            });

//            modelBuilder.Entity<COperCapl90>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_OPER_CAPL90", "stage_csx_csland");

//                entity.Property(e => e.Assignment)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNMENT");

//                entity.Property(e => e.Capl901007Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_1007_RMKS");

//                entity.Property(e => e.Capl901010Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_1010_RMKS");

//                entity.Property(e => e.Capl902401Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_2401_RMKS");

//                entity.Property(e => e.Capl902404Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_2404_RMKS");

//                entity.Property(e => e.Capl90311Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_311_RMKS");

//                entity.Property(e => e.Capl90604Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_604_RMKS");

//                entity.Property(e => e.Capl90604bRmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_604B_RMKS");

//                entity.Property(e => e.Capl90903Rmks)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPL90_903_RMKS");

//                entity.Property(e => e.CasingPoint)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CASING_POINT");

//                entity.Property(e => e.DispOfInterest)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISP_OF_INTEREST");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.Insurance)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INSURANCE");

//                entity.Property(e => e.Marketing)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MARKETING");

//                entity.Property(e => e.MktADollar)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("MKT_A_DOLLAR");

//                entity.Property(e => e.MktAPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MKT_A_PERCENT");

//                entity.Property(e => e.MktBDollar)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("MKT_B_DOLLAR");

//                entity.Property(e => e.MktBPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MKT_B_PERCENT");

//                entity.Property(e => e.MktCDollar)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("MKT_C_DOLLAR");

//                entity.Property(e => e.MktCPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MKT_C_PERCENT");

//                entity.Property(e => e.MktDDollar)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("MKT_D_DOLLAR");

//                entity.Property(e => e.MktDPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MKT_D_PERCENT");

//                entity.Property(e => e.PenaltyDev)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PENALTY_DEV");

//                entity.Property(e => e.PenaltyExp)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PENALTY_EXP");

//                entity.Property(e => e.TitleWell)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("TITLE_WELL");
//            });

//            modelBuilder.Entity<CServiceFee>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_SERVICE_FEES", "stage_csx_csland");

//                entity.Property(e => e.ApDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("AP_DESC");

//                entity.Property(e => e.ApUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("AP_UWI");

//                entity.Property(e => e.AscYn)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ASC_YN");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CostCentreNum)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_NUM");

//                entity.Property(e => e.DpDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DP_DESC");

//                entity.Property(e => e.DpUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DP_UWI");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.FeeBasis)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FEE_BASIS")
//                    .IsFixedLength();

//                entity.Property(e => e.FeeCapital)
//                    .HasColumnType("numeric(11, 4)")
//                    .HasColumnName("FEE_CAPITAL");

//                entity.Property(e => e.FeeEffectDate)
//                    .HasColumnType("date")
//                    .HasColumnName("FEE_EFFECT_DATE");

//                entity.Property(e => e.FeeOccurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("FEE_OCCURRENCE");

//                entity.Property(e => e.FeeOperating)
//                    .HasColumnType("numeric(11, 4)")
//                    .HasColumnName("FEE_OPERATING");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.GrossNetGn)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GROSS_NET_GN");

//                entity.Property(e => e.HistOccurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("HIST_OCCURRENCE");

//                entity.Property(e => e.InputDate)
//                    .HasColumnType("date")
//                    .HasColumnName("INPUT_DATE");

//                entity.Property(e => e.LocOccurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("LOC_OCCURRENCE");

//                entity.Property(e => e.NetPct)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("NET_PCT");

//                entity.Property(e => e.PaFacilityId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_FACILITY_ID");

//                entity.Property(e => e.ProcDescription)
//                    .HasMaxLength(1910)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_DESCRIPTION");

//                entity.Property(e => e.ProcProject)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_PROJECT");

//                entity.Property(e => e.ProcSortedUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_SORTED_UWI");

//                entity.Property(e => e.ProcUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_UWI");

//                entity.Property(e => e.ProcWellNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_WELL_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.ProcWl)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROC_WL")
//                    .IsFixedLength();

//                entity.Property(e => e.ReasonForChange)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("REASON_FOR_CHANGE");

//                entity.Property(e => e.ServiceTermDate)
//                    .HasColumnType("date")
//                    .HasColumnName("SERVICE_TERM_DATE");

//                entity.Property(e => e.ServiceType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("SERVICE_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("TERMINATION_DATE");

//                entity.Property(e => e.VariableFee)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_FEE");

//                entity.Property(e => e.VolumeBasisGis)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_BASIS_GIS");
//            });

//            modelBuilder.Entity<CServiceLoc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_SERVICE_LOC", "stage_csx_csland");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.LocOccurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("LOC_OCCURRENCE");

//                entity.Property(e => e.ProdDescription)
//                    .HasMaxLength(1910)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_DESCRIPTION");

//                entity.Property(e => e.ProdOffSrvDate)
//                    .HasColumnType("date")
//                    .HasColumnName("PROD_OFF_SRV_DATE");

//                entity.Property(e => e.ProdPriority)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_PRIORITY");

//                entity.Property(e => e.ProdProject)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_PROJECT");

//                entity.Property(e => e.ProdSortedUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_SORTED_UWI");

//                entity.Property(e => e.ProdUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_UWI");

//                entity.Property(e => e.ProdWellNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_WELL_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.ProdWl)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_WL");
//            });

//            modelBuilder.Entity<CSub>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("C_SUB", "stage_csx_csland");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA")
//                    .IsFixedLength();

//                entity.Property(e => e.CapPcntIntYn)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAP_PCNT_INT_YN");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DIVISION")
//                    .IsFixedLength();

//                entity.Property(e => e.EubFacilityCode)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("EUB_FACILITY_CODE");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.FileSub)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_SUB")
//                    .IsFixedLength();

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR")
//                    .IsFixedLength();

//                entity.Property(e => e.ProjectNumber)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECT_NUMBER");

//                entity.Property(e => e.ReasonForSub)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("REASON_FOR_SUB");

//                entity.Property(e => e.StatusDate)
//                    .HasColumnType("date")
//                    .HasColumnName("STATUS_DATE");

//                entity.Property(e => e.TractPartic)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("TRACT_PARTIC");
//            });

//            modelBuilder.Entity<ChargeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CHARGE_TYPES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveValue)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_VALUE");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ShortDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_DESCRIPTION");

//                entity.Property(e => e.SortOrder)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("SORT_ORDER");

//                entity.Property(e => e.SpecificTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIFIC_TYPE_CODE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<CheckOnstreamDateBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("check_onstream_date_budget", "stage_valnav");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<ControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CONTROL_GROUPS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CurrentProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CURRENT_PRODUCTION_DATE");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<ControlGroupAmendmentHist>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CONTROL_GROUP_AMENDMENT_HIST", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AmendmentReason)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("AMENDMENT_REASON");

//                entity.Property(e => e.AssignedToUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNED_TO_USER");

//                entity.Property(e => e.ClosedAccountingDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CLOSED_ACCOUNTING_DATE");

//                entity.Property(e => e.ClosedByUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CLOSED_BY_USER");

//                entity.Property(e => e.ClosedDateTime).HasColumnName("CLOSED_DATE_TIME");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OpenFromStepNumber)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OPEN_FROM_STEP_NUMBER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RequestedByUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("REQUESTED_BY_USER");

//                entity.Property(e => e.RequestedDateTime).HasColumnName("REQUESTED_DATE_TIME");

//                entity.Property(e => e.ResetAllFacilitiesFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RESET_ALL_FACILITIES_FLAG");

//                entity.Property(e => e.ScheduledByUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SCHEDULED_BY_USER");

//                entity.Property(e => e.ScheduledDateTime).HasColumnName("SCHEDULED_DATE_TIME");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<ControlGroupHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CONTROL_GROUP_HIERARCHIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LevelNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("LEVEL_NUMBER");

//                entity.Property(e => e.ParentHierarchySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("PARENT_HIERARCHY_SYS_ID");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<ControlGroupMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CONTROL_GROUP_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AllowGenerationTypSelection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_GENERATION_TYP_SELECTION");

//                entity.Property(e => e.AllowHeavyOilProcessing)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_HEAVY_OIL_PROCESSING");

//                entity.Property(e => e.AllowInterOilWaterXfer)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_INTER_OIL_WATER_XFER");

//                entity.Property(e => e.AllowPricingZeroOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_PRICING_ZERO_OIL");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultOilPurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_OIL_PURCHASER_ID");

//                entity.Property(e => e.DisableArchivingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISABLE_ARCHIVING_FLAG");

//                entity.Property(e => e.GasFlowEnabled)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_FLOW_ENABLED");

//                entity.Property(e => e.GenerateMarketMasters)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GENERATE_MARKET_MASTERS");

//                entity.Property(e => e.GenerateOilProcOrderFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GENERATE_OIL_PROC_ORDER_FLAG");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LockedForOilProcessing)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCKED_FOR_OIL_PROCESSING");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.ProducePartnerReporting)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCE_PARTNER_REPORTING");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RegionId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGION_ID");

//                entity.Property(e => e.ReportGroupSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("REPORT_GROUP_SYS_ID");

//                entity.Property(e => e.ReportZeroTransfersFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_ZERO_TRANSFERS_FLAG");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<CteTStgMarketingFlownetHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_t_stg_marketing_flownet_hierarchy", "datamart_marketing");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesDispositionPointIdrec)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point_idrec");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<CteVDimScenarioLeaseopsBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_scenario_leaseops_BCD", "stage");

//                entity.Property(e => e.Nlevel).HasColumnName("NLEVEL");

//                entity.Property(e => e.Rn).HasColumnName("RN");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<CteVDimScenarioLeaseopsBcdCurPriorCte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_scenario_leaseops_BCD_CUR_PRIOR_CTE", "stage");

//                entity.Property(e => e.Nlevel).HasColumnName("NLEVEL");

//                entity.Property(e => e.Rn).HasColumnName("RN");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<CteVDimSourceScenarioFinanceScenarioLevel>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_source_scenario_finance_scenario_levels", "dbo");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyType)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_type");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<CteVDimSourceScenarioFinanceScenarioLevels20220307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_source_scenario_finance_scenario_levels_2022_03_07", "dbo");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyType)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_type");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<CteVDimSourceScenarioFinanceScenarioLevelsOi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_source_scenario_finance_scenario_levels_OI", "dbo");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyType)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_type");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<CteVDimValnavCurrentPriorBudgetScenarioSource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_valnav_current_prior_budget_scenario_source", "dbo");

//                entity.Property(e => e.DestReplaceText)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("dest_replace_text");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.SourceReplaceText)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("source_replace_text");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CteVDimValnavCurrentPriorBudgetScenarioSource20210104>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_valnav_current_prior_budget_scenario_source_20210104", "dbo");

//                entity.Property(e => e.DestReplaceText)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("dest_replace_text");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.SourceReplaceText)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("source_replace_text");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CteVDimValnavScenarioBcdCurPrior>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_valnav_scenario_BCD_cur_prior", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CteVDimValnavScenarioBcdVar>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_valnav_scenario_BCD_var", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CteVDimValnavScenarioBcdWbud>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_dim_valnav_scenario_BCD_wbud", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CteVQbyteAccountHierarchySource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_qbyte_account_hierarchy_source", "dbo");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountUda)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_uda");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySeqNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_seq_num");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorMinor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_minor");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.ProductUda)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_uda");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<CteVQbyteAccountHierarchySourceFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_qbyte_account_hierarchy_source_finance", "dbo");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountUda)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_uda");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySeqNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_seq_num");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyPathDesc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path_Desc");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorMinor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_minor");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentAlias)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_alias");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.ProductUda)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_uda");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<CteVValnavNetbackAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("CTE_v_valnav_netback_accounts", "stage");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.Path1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<Cteak>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("cteak", "dbo");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.SalesDispositionPoint).HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesDispositionPointIdrec).HasColumnName("sales_disposition_point_idrec");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Xlevel).HasColumnName("xlevel");
//            });

//            modelBuilder.Entity<CustomGroupingsLeaf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Custom_Groupings_Leaf", "stage");

//                entity.Property(e => e.BatchId).HasColumnName("Batch_ID");

//                entity.Property(e => e.BatchTag).HasMaxLength(50);

//                entity.Property(e => e.Code).HasMaxLength(250);

//                entity.Property(e => e.CostCentreType)
//                    .HasMaxLength(100)
//                    .HasColumnName("Cost Centre Type");

//                entity.Property(e => e.Group1).HasMaxLength(100);

//                entity.Property(e => e.Group10).HasMaxLength(100);

//                entity.Property(e => e.Group2).HasMaxLength(100);

//                entity.Property(e => e.Group3).HasMaxLength(100);

//                entity.Property(e => e.Group4).HasMaxLength(100);

//                entity.Property(e => e.Group5).HasMaxLength(100);

//                entity.Property(e => e.Group6).HasMaxLength(100);

//                entity.Property(e => e.Group7).HasMaxLength(100);

//                entity.Property(e => e.Group8).HasMaxLength(100);

//                entity.Property(e => e.Group9).HasMaxLength(100);

//                entity.Property(e => e.Id)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("ID");

//                entity.Property(e => e.ImportStatusId).HasColumnName("ImportStatus_ID");

//                entity.Property(e => e.Name).HasMaxLength(250);

//                entity.Property(e => e.NewCode).HasMaxLength(250);
//            });

//            modelBuilder.Entity<DDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("D_DETAIL", "stage_csx_csland");

//                entity.Property(e => e.DoiId)
//                    .HasColumnType("numeric(7, 0)")
//                    .HasColumnName("DOI_ID");

//                entity.Property(e => e.ExternalUse)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_USE");

//                entity.Property(e => e.Gst)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GST");

//                entity.Property(e => e.NriCalcYn)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NRI_CALC_YN");

//                entity.Property(e => e.Occurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("OCCURRENCE");

//                entity.Property(e => e.Partner)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTNER")
//                    .IsFixedLength();

//                entity.Property(e => e.PartnerPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PARTNER_PERCENT");

//                entity.Property(e => e.PartnerType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTNER_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.Penalty)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PENALTY");

//                entity.Property(e => e.SapPartnerType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SAP_PARTNER_TYPE");

//                entity.Property(e => e.SilentOwner)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_OWNER")
//                    .IsFixedLength();

//                entity.Property(e => e.SilentPartner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER");

//                entity.Property(e => e.Suspended)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SUSPENDED");

//                entity.Property(e => e.Tik)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TIK");
//            });

//            modelBuilder.Entity<DXref>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("D_XREF", "stage_csx_csland");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNT_GROUP")
//                    .IsFixedLength();

//                entity.Property(e => e.AdminCompany)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ADMIN_COMPANY");

//                entity.Property(e => e.ChangedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("CHANGED_DATE");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.DoiId)
//                    .HasColumnType("numeric(7, 0)")
//                    .HasColumnName("DOI_ID");

//                entity.Property(e => e.DoiStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_STATUS");

//                entity.Property(e => e.DoiType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("date")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileSub)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_SUB")
//                    .IsFixedLength();

//                entity.Property(e => e.Occurrence)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("OCCURRENCE");

//                entity.Property(e => e.Owner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER");

//                entity.Property(e => e.Subsystem)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBSYSTEM");
//            });

//            modelBuilder.Entity<DataSourceTable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("data_source_table", "dbo");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(255)
//                    .IsUnicode(false);

//                entity.Property(e => e.PersonId).HasColumnName("PersonID");
//            });

//            modelBuilder.Entity<DeliverySystem>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("DELIVERY_SYSTEMS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<DeliverySystemMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("DELIVERY_SYSTEM_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtpRegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.CtpRegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.CtpRegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_PROVINCE");

//                entity.Property(e => e.DeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.EndOfStreamFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("END_OF_STREAM_FACILITY");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_OPERATOR_ID");

//                entity.Property(e => e.GasPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_PIPELINE_SPLIT");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.OilCtpProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_CTP_PRODUCT_CODE");

//                entity.Property(e => e.OilPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_PIPELINE_SPLIT");

//                entity.Property(e => e.PraFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRA_FACILITY");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PseudoFacilityFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PSEUDO_FACILITY_FLAG");

//                entity.Property(e => e.RegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.RegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.RegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_PROVINCE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<DetailLineItemsArar>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Detail_Line_Items_ARAR", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasColumnType("date");

//                entity.Property(e => e.Baname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BAName");

//                entity.Property(e => e.BapurchaserId).HasColumnName("BAPurchaserID");

//                entity.Property(e => e.Comment)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.DeliveryLocation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Delivery Location");

//                entity.Property(e => e.Dollars).HasColumnType("money");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility Code");

//                entity.Property(e => e.Key).HasColumnName("key");

//                entity.Property(e => e.LimAutoCount).HasColumnName("LIM_AutoCount");

//                entity.Property(e => e.LineItemMasterFk).HasColumnName("LineItemMaster_fk");

//                entity.Property(e => e.LineItemName)
//                    .HasMaxLength(150)
//                    .IsUnicode(false);

//                entity.Property(e => e.ModifiedBy)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Modified By");

//                entity.Property(e => e.ModifiedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Modified Date");

//                entity.Property(e => e.OriginLocation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Origin Location");

//                entity.Property(e => e.ProdMonth).HasColumnType("date");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);

//                entity.Property(e => e.ProductionAccountant)
//                    .HasMaxLength(50)
//                    .HasColumnName("Production Accountant")
//                    .IsFixedLength();

//                entity.Property(e => e.Seq).ValueGeneratedOnAdd();

//                entity.Property(e => e.Timestamp).HasColumnType("date");

//                entity.Property(e => e.Timestampdt)
//                    .HasColumnType("datetime")
//                    .HasColumnName("timestampdt");
//            });

//            modelBuilder.Entity<DetailLineItemsArarBackup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Detail_Line_Items_ARAR_backup", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasColumnType("date");

//                entity.Property(e => e.Baname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BAName");

//                entity.Property(e => e.BapurchaserId).HasColumnName("BAPurchaserID");

//                entity.Property(e => e.Comment)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.DeliveryLocation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Delivery Location");

//                entity.Property(e => e.Dollars).HasColumnType("money");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility Code");

//                entity.Property(e => e.Key).HasColumnName("key");

//                entity.Property(e => e.LimAutoCount).HasColumnName("LIM_AutoCount");

//                entity.Property(e => e.LineItemMasterFk).HasColumnName("LineItemMaster_fk");

//                entity.Property(e => e.LineItemName)
//                    .HasMaxLength(150)
//                    .IsUnicode(false);

//                entity.Property(e => e.ModifiedBy)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Modified By");

//                entity.Property(e => e.ModifiedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Modified Date");

//                entity.Property(e => e.OriginLocation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Origin Location");

//                entity.Property(e => e.ProdMonth).HasColumnType("date");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);

//                entity.Property(e => e.ProductionAccountant)
//                    .HasMaxLength(50)
//                    .HasColumnName("Production Accountant")
//                    .IsFixedLength();

//                entity.Property(e => e.Timestamp).HasColumnType("date");

//                entity.Property(e => e.Timestampdt)
//                    .HasColumnType("datetime")
//                    .HasColumnName("timestampdt");
//            });

//            modelBuilder.Entity<DimDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("dim_date", "data_mart");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.CalendarYearNumber).HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<DimDate1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("dim_date", "OLAPControl");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.CalendarYearNumber).HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<DivisionOfInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("DIVISION_OF_INTERESTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<DoiMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("DOI_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultDoi)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_DOI");

//                entity.Property(e => e.DivisionOfInterestSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DIVISION_OF_INTEREST_SYS_ID");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.SubId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SUB_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<DoiOwner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("DOI_OWNERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DoiMasterSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DOI_MASTER_SYS_ID");

//                entity.Property(e => e.ExcludeOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCLUDE_OWNER");

//                entity.Property(e => e.GstForFacilityCharges)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_FOR_FACILITY_CHARGES");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.OwnerInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("OWNER_INTEREST_PERCENT");

//                entity.Property(e => e.SilentPartnerParentId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER_PARENT_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<EntityType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ENTITY_TYPES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveValue)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_VALUE");

//                entity.Property(e => e.ChargeFacilityUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_FACILITY_USAGE");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DeliveryType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_TYPE");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.IndianReserveUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INDIAN_RESERVE_USAGE");

//                entity.Property(e => e.IpsParticipantUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("IPS_PARTICIPANT_USAGE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OperatedType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATED_TYPE");

//                entity.Property(e => e.OwnerType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_TYPE");

//                entity.Property(e => e.ParticipantGroupUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTICIPANT_GROUP_USAGE");

//                entity.Property(e => e.ShortDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_DESCRIPTION");

//                entity.Property(e => e.SortOrder)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("SORT_ORDER");

//                entity.Property(e => e.UnitType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.VoucherUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_USAGE");

//                entity.Property(e => e.WellTractType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TRACT_TYPE");
//            });

//            modelBuilder.Entity<ExistingObj>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("existing_obj", "dbo");

//                entity.Property(e => e.TblName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tbl_name");
//            });

//            modelBuilder.Entity<Facility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FACILITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.EntityTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_TYPE_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<FacilityChargeFormula>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FACILITY_CHARGE_FORMULAS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<FcCalcFormulaDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FC_CALC_FORMULA_DETAILS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CalculationDescription)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_DESCRIPTION");

//                entity.Property(e => e.ChargeFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_FACILITY_ID");

//                entity.Property(e => e.ChargeFacilityType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_FACILITY_TYPE");

//                entity.Property(e => e.ChargeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_TYPE");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_ID");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.Factor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("FACTOR");

//                entity.Property(e => e.FcSequenceNumber)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("FC_SEQUENCE_NUMBER");

//                entity.Property(e => e.FormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FORMULA_ID");

//                entity.Property(e => e.JobId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("JOB_ID");

//                entity.Property(e => e.Maximum)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("MAXIMUM");

//                entity.Property(e => e.Minimum)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("MINIMUM");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PercentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PERCENT_FLAG");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ResultFactor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("RESULT_FACTOR");

//                entity.Property(e => e.ResultSign)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RESULT_SIGN");

//                entity.Property(e => e.SequenceNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("SEQUENCE_NUMBER");

//                entity.Property(e => e.Subtotal)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("SUBTOTAL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");
//            });

//            modelBuilder.Entity<FcExpenseIncomeReport>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FC_EXPENSE_INCOME_REPORTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AccountingDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ACCOUNTING_DATE");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_ID");

//                entity.Property(e => e.ChargeDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_DESCRIPTION");

//                entity.Property(e => e.ChargeSequenceNumber)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("CHARGE_SEQUENCE_NUMBER");

//                entity.Property(e => e.ChargeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_TYPE");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.ExpenseFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_FACILITY_ID");

//                entity.Property(e => e.ExpenseFacilityType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_FACILITY_TYPE");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_ID");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.JobId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JOB_ID");

//                entity.Property(e => e.NetGstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("NET_GST_VALUE");

//                entity.Property(e => e.NetPstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("NET_PST_VALUE");

//                entity.Property(e => e.NetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("NET_VALUE");

//                entity.Property(e => e.NetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("NET_VOLUME");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PreviousGstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("PREVIOUS_GST_VALUE");

//                entity.Property(e => e.PreviousPstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("PREVIOUS_PST_VALUE");

//                entity.Property(e => e.PreviousValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("PREVIOUS_VALUE");

//                entity.Property(e => e.PreviousVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("PREVIOUS_VOLUME");

//                entity.Property(e => e.PrimaryRetrieval)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_RETRIEVAL");

//                entity.Property(e => e.PrimaryRetrievalDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_RETRIEVAL_DESCRIPTION");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ReportTitle)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_TITLE");

//                entity.Property(e => e.RevisedGstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("REVISED_GST_VALUE");

//                entity.Property(e => e.RevisedPstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("REVISED_PST_VALUE");

//                entity.Property(e => e.RevisedValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("REVISED_VALUE");

//                entity.Property(e => e.RevisedVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("REVISED_VOLUME");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");
//            });

//            modelBuilder.Entity<FcFormulaMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FC_FORMULA_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_CHARGE_FORMULA_ID");

//                entity.Property(e => e.FacilityChargeFormulaType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_CHARGE_FORMULA_TYPE");

//                entity.Property(e => e.FcMonthlyInputId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FC_MONTHLY_INPUT_ID");

//                entity.Property(e => e.FcShutinLookupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FC_SHUTIN_LOOKUP_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.PrimaryRetrievalCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_RETRIEVAL_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UnitTractCriteria)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_TRACT_CRITERIA");

//                entity.Property(e => e.ValueType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VALUE_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.VolumeType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_TYPE");
//            });

//            modelBuilder.Entity<FcFormulaRetrieval>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FC_FORMULA_RETRIEVALS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveValue)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_VALUE");

//                entity.Property(e => e.BatteryUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_USAGE");

//                entity.Property(e => e.BypUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("BYP_USAGE");

//                entity.Property(e => e.CalculationBasedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_BASED_FLAG");

//                entity.Property(e => e.Category)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CATEGORY");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.EntityExceptionsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_EXCEPTIONS_FLAG");

//                entity.Property(e => e.FromToExceptionsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FROM_TO_EXCEPTIONS_FLAG");

//                entity.Property(e => e.GasUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_USAGE");

//                entity.Property(e => e.GgsUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GGS_USAGE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.NaUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("NA_USAGE");

//                entity.Property(e => e.OilUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_USAGE");

//                entity.Property(e => e.PlantUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PLANT_USAGE");

//                entity.Property(e => e.PurchaserExceptionsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_EXCEPTIONS_FLAG");

//                entity.Property(e => e.ShortDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_DESCRIPTION");

//                entity.Property(e => e.SortOrder)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("SORT_ORDER");

//                entity.Property(e => e.UnitTractFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_TRACT_FLAG");

//                entity.Property(e => e.UnitUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_USAGE");

//                entity.Property(e => e.UnitWellFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_WELL_FLAG");

//                entity.Property(e => e.UsageDetails)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("USAGE_DETAILS");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WaterUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_USAGE");
//            });

//            modelBuilder.Entity<FiSubmission>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("FI_SUBMISSIONS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AccountingDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("ACCOUNTING_DATE");

//                entity.Property(e => e.BatchOption)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATCH_OPTION");

//                entity.Property(e => e.CompanyNumber)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPANY_NUMBER");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DetailCsvFiles)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DETAIL_CSV_FILES");

//                entity.Property(e => e.FiIdentifierId)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FI_IDENTIFIER_ID");

//                entity.Property(e => e.FinancialGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FINANCIAL_GROUP_ID");

//                entity.Property(e => e.IncludeAmendments)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDE_AMENDMENTS");

//                entity.Property(e => e.IncludeNetZeroRecords)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDE_NET_ZERO_RECORDS");

//                entity.Property(e => e.JobId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("JOB_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProcessError)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_ERROR");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RegionId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGION_ID");

//                entity.Property(e => e.RunType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RUN_TYPE");

//                entity.Property(e => e.SubmitDateTime).HasColumnName("SUBMIT_DATE_TIME");

//                entity.Property(e => e.SubmitUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBMIT_USER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransactionType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSACTION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<GgsFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("GGS_FACILITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<GgsMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("GGS_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.Bc08Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC08_FACILITY");

//                entity.Property(e => e.Bc09Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC09_FACILITY");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtpRegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.CtpRegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.CtpRegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_PROVINCE");

//                entity.Property(e => e.DefaultS2DeliveryCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_S2_DELIVERY_CODE");

//                entity.Property(e => e.DlsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_EVENT_SEQUENCE");

//                entity.Property(e => e.DlsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("DLS_LOCATION_EXCEPTION");

//                entity.Property(e => e.DlsMeridian)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_MERIDIAN");

//                entity.Property(e => e.DlsRange)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_RANGE");

//                entity.Property(e => e.DlsSection)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SECTION");

//                entity.Property(e => e.DlsSubDivision)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SUB_DIVISION");

//                entity.Property(e => e.DlsTownship)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DLS_TOWNSHIP");

//                entity.Property(e => e.EndOfStreamFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("END_OF_STREAM_FACILITY");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_OPERATOR_ID");

//                entity.Property(e => e.GasPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_PIPELINE_SPLIT");

//                entity.Property(e => e.GgsFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GGS_FACILITY_ID");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NtsBlock)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_BLOCK");

//                entity.Property(e => e.NtsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("NTS_EVENT_SEQUENCE");

//                entity.Property(e => e.NtsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_LOCATION_EXCEPTION");

//                entity.Property(e => e.NtsMapNumber1)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER1");

//                entity.Property(e => e.NtsMapNumber2)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER2");

//                entity.Property(e => e.NtsMapNumber3)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER3");

//                entity.Property(e => e.NtsQuarterUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_QUARTER_UNIT");

//                entity.Property(e => e.NtsUnit)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_UNIT");

//                entity.Property(e => e.OffShoreBlock)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("OFF_SHORE_BLOCK");

//                entity.Property(e => e.OffShoreQuadrant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_QUADRANT");

//                entity.Property(e => e.OffShoreSubTract)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("OFF_SHORE_SUB_TRACT");

//                entity.Property(e => e.OffShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_TRACT");

//                entity.Property(e => e.OilPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_PIPELINE_SPLIT");

//                entity.Property(e => e.OnShoreConcession)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_CONCESSION");

//                entity.Property(e => e.OnShoreLot)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_LOT");

//                entity.Property(e => e.OnShoreTownship)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TOWNSHIP");

//                entity.Property(e => e.OnShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TRACT");

//                entity.Property(e => e.OnShoreZone)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_ZONE");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.PraFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRA_FACILITY");

//                entity.Property(e => e.ProcessSafoafFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_SAFOAF_FLAG");

//                entity.Property(e => e.ProcessVolumetrics)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_VOLUMETRICS");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_STATUS");

//                entity.Property(e => e.ReceiptPoint)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RECEIPT_POINT");

//                entity.Property(e => e.RegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.RegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.RegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_PROVINCE");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WestfloReceiptPoint)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WESTFLO_RECEIPT_POINT");
//            });

//            modelBuilder.Entity<GroupDataFromProd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("groupDataFromProd", "stage_valnav");

//                entity.Property(e => e.ActivityDateKey)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date_key");

//                entity.Property(e => e.IsZero).HasColumnName("isZero");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.RCount).HasColumnName("rCOUNT");
//            });

//            modelBuilder.Entity<IndianReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INDIAN_RESERVES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<IndianReserveMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INDIAN_RESERVE_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.IndianReserveId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INDIAN_RESERVE_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<IndianReserveWellDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INDIAN_RESERVE_WELL_DETAILS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ConfidentialWellFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENTIAL_WELL_FLAG");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.GrossRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GROSS_ROYALTY_PERCENT");

//                entity.Property(e => e.IncludedExcluded)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDED_EXCLUDED");

//                entity.Property(e => e.IndianReserveId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INDIAN_RESERVE_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RoyaltyNetAmount)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_NET_AMOUNT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TotalGcaDeduction)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_GCA_DEDUCTION");

//                entity.Property(e => e.TotalRoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_ROYALTY_VALUE");

//                entity.Property(e => e.TotalSalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_SALES_VALUE");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<IndianRoyaltyEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INDIAN_ROYALTY_ENTITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.RoyaltyEntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_ENTITY_ID");

//                entity.Property(e => e.RoyaltyEntityType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_ENTITY_TYPE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<InjectionFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INJECTION_FACILITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<InjectionMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("INJECTION_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultS2DeliveryCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_S2_DELIVERY_CODE");

//                entity.Property(e => e.DlsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_EVENT_SEQUENCE");

//                entity.Property(e => e.DlsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("DLS_LOCATION_EXCEPTION");

//                entity.Property(e => e.DlsMeridian)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_MERIDIAN");

//                entity.Property(e => e.DlsRange)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_RANGE");

//                entity.Property(e => e.DlsSection)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SECTION");

//                entity.Property(e => e.DlsSubDivision)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SUB_DIVISION");

//                entity.Property(e => e.DlsTownship)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DLS_TOWNSHIP");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_OPERATOR_ID");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.InjectionFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_FACILITY_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LegalDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_DESCRIPTION");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NtsBlock)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_BLOCK");

//                entity.Property(e => e.NtsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("NTS_EVENT_SEQUENCE");

//                entity.Property(e => e.NtsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_LOCATION_EXCEPTION");

//                entity.Property(e => e.NtsMapNumber1)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER1");

//                entity.Property(e => e.NtsMapNumber2)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER2");

//                entity.Property(e => e.NtsMapNumber3)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER3");

//                entity.Property(e => e.NtsQuarterUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_QUARTER_UNIT");

//                entity.Property(e => e.NtsUnit)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_UNIT");

//                entity.Property(e => e.OffShoreBlock)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("OFF_SHORE_BLOCK");

//                entity.Property(e => e.OffShoreQuadrant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_QUADRANT");

//                entity.Property(e => e.OffShoreSubTract)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("OFF_SHORE_SUB_TRACT");

//                entity.Property(e => e.OffShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_TRACT");

//                entity.Property(e => e.OnShoreConcession)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_CONCESSION");

//                entity.Property(e => e.OnShoreLot)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_LOT");

//                entity.Property(e => e.OnShoreTownship)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TOWNSHIP");

//                entity.Property(e => e.OnShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TRACT");

//                entity.Property(e => e.OnShoreZone)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_ZONE");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.PraFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRA_FACILITY");

//                entity.Property(e => e.ProcessVolumetrics)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_VOLUMETRICS");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_STATUS");

//                entity.Property(e => e.RegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.RegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.RegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_PROVINCE");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<IvCcNumWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("iv_cc_num_working_interest", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<IvQbyteCostCentreLegal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("iv_qbyte_cost_centre_legals", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_8");

//                entity.Property(e => e.PrimaryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_FLAG");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM_CODE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiAlias)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_alias");

//                entity.Property(e => e.UwiSortElement1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_1");

//                entity.Property(e => e.UwiSortElement2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_2");

//                entity.Property(e => e.UwiSortElement3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_3");

//                entity.Property(e => e.UwiSortElement4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_4");

//                entity.Property(e => e.UwiSortElement5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_5");

//                entity.Property(e => e.UwiSortElement6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_6");

//                entity.Property(e => e.UwiSortElement7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_7");

//                entity.Property(e => e.UwiSortElement8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_8");

//                entity.Property(e => e.UwiSortElement9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_9");
//            });

//            modelBuilder.Entity<IvVendorInvoice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("iv_vendor_invoices", "stage");

//                entity.Property(e => e.InvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.VendorId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.VendorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_name");
//            });

//            modelBuilder.Entity<MarketMasterDisposition>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("MARKET_MASTER_DISPOSITIONS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DeliverySequence)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DELIVERY_SEQUENCE");

//                entity.Property(e => e.DeliverySystemPriority)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DELIVERY_SYSTEM_PRIORITY");

//                entity.Property(e => e.DestinationDeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DESTINATION_DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DestinationFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DESTINATION_FACILITY_SYS_ID");

//                entity.Property(e => e.DispositionTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DISPOSITION_TYPE_CODE");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.SystemGenerated)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SYSTEM_GENERATED");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<MarketMasterPurchPrice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("MARKET_MASTER_PURCH_PRICES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.InputPrice)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("INPUT_PRICE");

//                entity.Property(e => e.InputSalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("INPUT_SALES_VALUE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LineLoss)
//                    .HasColumnType("numeric(13, 5)")
//                    .HasColumnName("LINE_LOSS");

//                entity.Property(e => e.LineLossType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("LINE_LOSS_TYPE");

//                entity.Property(e => e.MarketMasterPurchaserSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("MARKET_MASTER_PURCHASER_SYS_ID");

//                entity.Property(e => e.PriceCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICE_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransportationCost)
//                    .HasColumnType("numeric(13, 5)")
//                    .HasColumnName("TRANSPORTATION_COST");

//                entity.Property(e => e.TransportationCostType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSPORTATION_COST_TYPE");

//                entity.Property(e => e.TransportsGas)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSPORTS_GAS");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<MarketMasterPurchaser>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("MARKET_MASTER_PURCHASERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ContractDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_DESCRIPTION");

//                entity.Property(e => e.ContractReference)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_REFERENCE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FlowGroupInId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_IN_ID");

//                entity.Property(e => e.FlowGroupOutId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_OUT_ID");

//                entity.Property(e => e.ForceSales)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FORCE_SALES");

//                entity.Property(e => e.IncludeAllParticipants)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDE_ALL_PARTICIPANTS");

//                entity.Property(e => e.IncludedBatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDED_BATTERY_ID");

//                entity.Property(e => e.IncludedUnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INCLUDED_UNIT_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MarketMasterAllocGrpSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MARKET_MASTER_ALLOC_GRP_SYS_ID");

//                entity.Property(e => e.OverrideSplitOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OVERRIDE_SPLIT_OWNER_ID");

//                entity.Property(e => e.ParticipantGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTICIPANT_GROUP_ID");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_ID");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE");

//                entity.Property(e => e.PurchaserType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_TYPE");

//                entity.Property(e => e.RevenueNotReceivedReason)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_NOT_RECEIVED_REASON");

//                entity.Property(e => e.RevenueReceived)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_RECEIVED");

//                entity.Property(e => e.ShipperPipelineContract)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHIPPER_PIPELINE_CONTRACT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<ObjectRow>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("object_rows", "dbo");

//                entity.Property(e => e.Cnt).HasColumnName("cnt");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");
//            });

//            modelBuilder.Entity<OwnerGovernment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("OWNER_GOVERNMENTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<OwnerMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("OWNER_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AddressLine1)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE1");

//                entity.Property(e => e.AddressLine2)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE2");

//                entity.Property(e => e.AddressLine3)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE3");

//                entity.Property(e => e.AddressLine4)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE4");

//                entity.Property(e => e.Bc08ReportingOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BC08_REPORTING_OWNER_ID");

//                entity.Property(e => e.ContactName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTACT_NAME");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FaxNumber)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("FAX_NUMBER");

//                entity.Property(e => e.GlobalObligationPayorFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GLOBAL_OBLIGATION_PAYOR_FLAG");

//                entity.Property(e => e.JiblinkCountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("JIBLINK_COUNTRY_CODE");

//                entity.Property(e => e.JiblinkProvinceCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("JIBLINK_PROVINCE_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NrtApplicable)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NRT_APPLICABLE");

//                entity.Property(e => e.NrtRateOverride)
//                    .HasColumnType("numeric(6, 3)")
//                    .HasColumnName("NRT_RATE_OVERRIDE");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PhoneNumber)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("PHONE_NUMBER");

//                entity.Property(e => e.PostalCode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("POSTAL_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<PaSplitsCurrent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PA_Splits_Current", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasMaxLength(10);

//                entity.Property(e => e.Arcontract)
//                    .HasMaxLength(100)
//                    .HasColumnName("ARContract");

//                entity.Property(e => e.ControlGroup).HasMaxLength(100);

//                entity.Property(e => e.LastUpdateDate).HasColumnName("last_update_date");

//                entity.Property(e => e.Owner).HasMaxLength(100);

//                entity.Property(e => e.Pa)
//                    .HasMaxLength(100)
//                    .HasColumnName("PA");

//                entity.Property(e => e.ProdMonth).HasMaxLength(10);
//            });

//            modelBuilder.Entity<PaSplitsHistory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PA_Splits_History", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasMaxLength(10);

//                entity.Property(e => e.ArchiveDate).HasColumnName("Archive_Date");

//                entity.Property(e => e.Arcontract)
//                    .HasMaxLength(100)
//                    .HasColumnName("ARContract");

//                entity.Property(e => e.ControlGroup).HasMaxLength(100);

//                entity.Property(e => e.LastUpdateDate).HasColumnName("last_update_date");

//                entity.Property(e => e.Owner).HasMaxLength(100);

//                entity.Property(e => e.Pa)
//                    .HasMaxLength(100)
//                    .HasColumnName("PA");

//                entity.Property(e => e.ProdMonth).HasMaxLength(10);
//            });

//            modelBuilder.Entity<Package>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("packages", "stage");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1024)
//                    .HasColumnName("description");

//                entity.Property(e => e.EntryPoint).HasColumnName("entry_point");

//                entity.Property(e => e.LastValidationTime).HasColumnName("last_validation_time");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(260)
//                    .HasColumnName("name");

//                entity.Property(e => e.PackageFormatVersion).HasColumnName("package_format_version");

//                entity.Property(e => e.PackageGuid).HasColumnName("package_guid");

//                entity.Property(e => e.PackageId).HasColumnName("package_id");

//                entity.Property(e => e.ProjectId).HasColumnName("project_id");

//                entity.Property(e => e.ProjectVersionLsn).HasColumnName("project_version_lsn");

//                entity.Property(e => e.ValidationStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("validation_status")
//                    .IsFixedLength();

//                entity.Property(e => e.VersionBuild).HasColumnName("version_build");

//                entity.Property(e => e.VersionComments)
//                    .HasMaxLength(1024)
//                    .HasColumnName("version_comments");

//                entity.Property(e => e.VersionGuid).HasColumnName("version_guid");

//                entity.Property(e => e.VersionMajor).HasColumnName("version_major");

//                entity.Property(e => e.VersionMinor).HasColumnName("version_minor");
//            });

//            modelBuilder.Entity<ParseHierarchyPath>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_Hierarchy_Path", "dbo");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");
//            });

//            modelBuilder.Entity<ParseHierarchyPath20200612>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_Hierarchy_Path_20200612", "dbo");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");
//            });

//            modelBuilder.Entity<ParseHierarchyPath20220307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_Hierarchy_Path_2022_03_07", "dbo");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");
//            });

//            modelBuilder.Entity<ParseHierarchyPath220220307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_Hierarchy_Path_22022_03_07", "dbo");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");
//            });

//            modelBuilder.Entity<ParseHierarchyPathOi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_Hierarchy_Path_OI", "dbo");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");
//            });

//            modelBuilder.Entity<ParseScenarioSortKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_scenario_sort_key", "dbo");

//                entity.Property(e => e.AccountLevel01ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_scenario_sort_key");

//                entity.Property(e => e.AccountLevel02ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_scenario_sort_key");

//                entity.Property(e => e.AccountLevel03ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_scenario_sort_key");

//                entity.Property(e => e.AccountLevel04ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_scenario_sort_key");

//                entity.Property(e => e.AccountLevel05ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_scenario_sort_key");

//                entity.Property(e => e.AccountLevel06ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_scenario_sort_key");

//                entity.Property(e => e.AccountLevel07ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_scenario_sort_key");

//                entity.Property(e => e.AccountLevel08ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_scenario_sort_key");

//                entity.Property(e => e.AccountLevel09ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_scenario_sort_key");

//                entity.Property(e => e.AccountLevel10ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_scenario_sort_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");
//            });

//            modelBuilder.Entity<ParseScenarioSortKey20220307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_scenario_sort_key_2022_03_07", "dbo");

//                entity.Property(e => e.AccountLevel01ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_scenario_sort_key");

//                entity.Property(e => e.AccountLevel02ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_scenario_sort_key");

//                entity.Property(e => e.AccountLevel03ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_scenario_sort_key");

//                entity.Property(e => e.AccountLevel04ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_scenario_sort_key");

//                entity.Property(e => e.AccountLevel05ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_scenario_sort_key");

//                entity.Property(e => e.AccountLevel06ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_scenario_sort_key");

//                entity.Property(e => e.AccountLevel07ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_scenario_sort_key");

//                entity.Property(e => e.AccountLevel08ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_scenario_sort_key");

//                entity.Property(e => e.AccountLevel09ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_scenario_sort_key");

//                entity.Property(e => e.AccountLevel10ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_scenario_sort_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");
//            });

//            modelBuilder.Entity<ParseScenarioSortKey20220307b>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_scenario_sort_key_2022_03_07b", "dbo");

//                entity.Property(e => e.AccountLevel01ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_scenario_sort_key");

//                entity.Property(e => e.AccountLevel02ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_scenario_sort_key");

//                entity.Property(e => e.AccountLevel03ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_scenario_sort_key");

//                entity.Property(e => e.AccountLevel04ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_scenario_sort_key");

//                entity.Property(e => e.AccountLevel05ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_scenario_sort_key");

//                entity.Property(e => e.AccountLevel06ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_scenario_sort_key");

//                entity.Property(e => e.AccountLevel07ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_scenario_sort_key");

//                entity.Property(e => e.AccountLevel08ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_scenario_sort_key");

//                entity.Property(e => e.AccountLevel09ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_scenario_sort_key");

//                entity.Property(e => e.AccountLevel10ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_scenario_sort_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");
//            });

//            modelBuilder.Entity<ParseScenarioSortKeyOi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_scenario_sort_key_OI", "dbo");

//                entity.Property(e => e.AccountLevel01ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_scenario_sort_key");

//                entity.Property(e => e.AccountLevel02ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_scenario_sort_key");

//                entity.Property(e => e.AccountLevel03ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_scenario_sort_key");

//                entity.Property(e => e.AccountLevel04ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_scenario_sort_key");

//                entity.Property(e => e.AccountLevel05ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_scenario_sort_key");

//                entity.Property(e => e.AccountLevel06ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_scenario_sort_key");

//                entity.Property(e => e.AccountLevel07ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_scenario_sort_key");

//                entity.Property(e => e.AccountLevel08ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_scenario_sort_key");

//                entity.Property(e => e.AccountLevel09ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_scenario_sort_key");

//                entity.Property(e => e.AccountLevel10ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_scenario_sort_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");
//            });

//            modelBuilder.Entity<ParseSortKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Parse_sort_key", "dbo");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<ParticipantAvailable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PARTICIPANT_AVAILABLES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AvailableForSaleVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("AVAILABLE_FOR_SALE_VOLUME");

//                entity.Property(e => e.ClosingGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CLOSING_GIGAJOULES");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CLOSING_INVENTORY");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OpeningGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OPENING_GIGAJOULES");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OPENING_INVENTORY");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.ParticipantTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTICIPANT_TYPE_CODE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("PRODUCTION_GIGAJOULES");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("PRODUCTION_VOLUME");

//                entity.Property(e => e.ReceivingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("RECEIVING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("SALES_GIGAJOULES");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SendingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SENDING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_RECEIVED");

//                entity.Property(e => e.TransferVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_VOLUME");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.VolumeFromFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_FROM_FRAC");

//                entity.Property(e => e.VolumeSentForFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_SENT_FOR_FRAC");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WORKING_INTEREST_OWNER_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<ParticipantType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PARTICIPANT_TYPES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveValue)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_VALUE");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.InTransitUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("IN_TRANSIT_USAGE");

//                entity.Property(e => e.InventoryUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INVENTORY_USAGE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LinePackUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("LINE_PACK_USAGE");

//                entity.Property(e => e.OtherPurchaserUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OTHER_PURCHASER_USAGE");

//                entity.Property(e => e.ShortDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_DESCRIPTION");

//                entity.Property(e => e.SortOrder)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("SORT_ORDER");

//                entity.Property(e => e.StorageCrownRoyaltyUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("STORAGE_CROWN_ROYALTY_USAGE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<PartnerOpBatteryPrice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PARTNER_OP_BATTERY_PRICES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AllocationBasisCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_BASIS_CODE");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestinationDeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DESTINATION_DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DestinationFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DESTINATION_FACILITY_SYS_ID");

//                entity.Property(e => e.EnteredPrice)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("ENTERED_PRICE");

//                entity.Property(e => e.EnteredValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_VALUE");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PricingCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_CODE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSequenceNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransactionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSACTION_TYPE");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<PartnerOpBatteryTxn>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PARTNER_OP_BATTERY_TXNS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AllocationBasisCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_BASIS_CODE");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.CalculatedGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_GROSS_GIGAJOULES");

//                entity.Property(e => e.CalculatedGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_GROSS_VALUE");

//                entity.Property(e => e.CalculatedGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_GROSS_VOLUME");

//                entity.Property(e => e.CalculatedNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_NET_GIGAJOULES");

//                entity.Property(e => e.CalculatedNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_NET_VALUE");

//                entity.Property(e => e.CalculatedNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_NET_VOLUME");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestinationDeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DESTINATION_DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DestinationFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DESTINATION_FACILITY_SYS_ID");

//                entity.Property(e => e.EnteredGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_GROSS_GIGAJOULES");

//                entity.Property(e => e.EnteredGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_GROSS_VALUE");

//                entity.Property(e => e.EnteredGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_GROSS_VOLUME");

//                entity.Property(e => e.EnteredNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_NET_GIGAJOULES");

//                entity.Property(e => e.EnteredNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_NET_VALUE");

//                entity.Property(e => e.EnteredNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_NET_VOLUME");

//                entity.Property(e => e.EnteredPrice)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("ENTERED_PRICE");

//                entity.Property(e => e.EnteredValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_VALUE");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PricingCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProducingHours)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("PRODUCING_HOURS");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSequenceNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.TransactionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSACTION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellheadGasProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_GAS_PRODUCTION");

//                entity.Property(e => e.WellheadOilProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_OIL_PRODUCTION");
//            });

//            modelBuilder.Entity<PlantFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PLANT_FACILITIES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<PlantMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PLANT_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.Bc08Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC08_FACILITY");

//                entity.Property(e => e.Bc09Facility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BC09_FACILITY");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtpRegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.CtpRegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.CtpRegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_REGISTRY_PROVINCE");

//                entity.Property(e => e.DefaultS2DeliveryCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_S2_DELIVERY_CODE");

//                entity.Property(e => e.DlsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_EVENT_SEQUENCE");

//                entity.Property(e => e.DlsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("DLS_LOCATION_EXCEPTION");

//                entity.Property(e => e.DlsMeridian)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_MERIDIAN");

//                entity.Property(e => e.DlsRange)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_RANGE");

//                entity.Property(e => e.DlsSection)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SECTION");

//                entity.Property(e => e.DlsSubDivision)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SUB_DIVISION");

//                entity.Property(e => e.DlsTownship)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DLS_TOWNSHIP");

//                entity.Property(e => e.EndOfStreamFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("END_OF_STREAM_FACILITY");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_OPERATOR_ID");

//                entity.Property(e => e.GasPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_PIPELINE_SPLIT");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NtsBlock)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_BLOCK");

//                entity.Property(e => e.NtsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("NTS_EVENT_SEQUENCE");

//                entity.Property(e => e.NtsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_LOCATION_EXCEPTION");

//                entity.Property(e => e.NtsMapNumber1)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER1");

//                entity.Property(e => e.NtsMapNumber2)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER2");

//                entity.Property(e => e.NtsMapNumber3)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER3");

//                entity.Property(e => e.NtsQuarterUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_QUARTER_UNIT");

//                entity.Property(e => e.NtsUnit)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_UNIT");

//                entity.Property(e => e.OffShoreBlock)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("OFF_SHORE_BLOCK");

//                entity.Property(e => e.OffShoreQuadrant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_QUADRANT");

//                entity.Property(e => e.OffShoreSubTract)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("OFF_SHORE_SUB_TRACT");

//                entity.Property(e => e.OffShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_TRACT");

//                entity.Property(e => e.OilPipelineSplit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_PIPELINE_SPLIT");

//                entity.Property(e => e.OnShoreConcession)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_CONCESSION");

//                entity.Property(e => e.OnShoreLot)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_LOT");

//                entity.Property(e => e.OnShoreTownship)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TOWNSHIP");

//                entity.Property(e => e.OnShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TRACT");

//                entity.Property(e => e.OnShoreZone)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_ZONE");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.PlantFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PLANT_FACILITY_ID");

//                entity.Property(e => e.PraFacility)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRA_FACILITY");

//                entity.Property(e => e.ProcessSafoafFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_SAFOAF_FLAG");

//                entity.Property(e => e.ProcessVolumetrics)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_VOLUMETRICS");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_STATUS");

//                entity.Property(e => e.ReceiptPoint)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RECEIPT_POINT");

//                entity.Property(e => e.RegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_ENTITY_TYPE");

//                entity.Property(e => e.RegistryGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_GOVERNMENT_CODE");

//                entity.Property(e => e.RegistryProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REGISTRY_PROVINCE");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WatertonPlant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WATERTON_PLANT");

//                entity.Property(e => e.WestfloReceiptPoint)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WESTFLO_RECEIPT_POINT");
//            });

//            modelBuilder.Entity<ProdTBudgetResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_budget_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<ProdTBudgetResultsCostDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_budget_results_cost_detail", "stage_valnav");

//                entity.Property(e => e.CostDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_DEFINITION_ID");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("FAILURE_GROSS_VALUE");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("FAILURE_INTEREST_VALUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("SUCCESS_GROSS_VALUE");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("SUCCESS_INTEREST_VALUE");
//            });

//            modelBuilder.Entity<ProdTDimEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_dim_entity", "data_mart");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<ProdTProdviewInjectionVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_prodview_injection_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");
//            });

//            modelBuilder.Entity<ProdTReservesEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_reserves_entity", "stage_valnav");

//                entity.Property(e => e.EntityType).HasColumnName("ENTITY_TYPE");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("FORMATTED_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.SortingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("SORTING_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<ProdTReservesResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_reserves_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<ProdTReservesResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_reserves_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<ProdTReservesResultsLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_reserves_results_lookup", "stage_valnav");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.ResultType).HasColumnName("RESULT_TYPE");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SCENARIO_ID");
//            });

//            modelBuilder.Entity<ProdTWellviewWvtWvjob>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_wellview_wvt_wvjob", "stage");

//                entity.Property(e => e.Chartofaccounts)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("chartofaccounts");

//                entity.Property(e => e.Client)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("client");

//                entity.Property(e => e.Complexityindex)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("complexityindex");

//                entity.Property(e => e.Costfinalactual).HasColumnName("costfinalactual");

//                entity.Property(e => e.Currencycode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("currencycode");

//                entity.Property(e => e.Currencyexchangerate).HasColumnName("currencyexchangerate");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmspud)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmspud");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Dttmstartplan)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstartplan");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrectub)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectub");

//                entity.Property(e => e.Idrectubtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectubtk");

//                entity.Property(e => e.Idrecwellbore)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellbore");

//                entity.Property(e => e.Idrecwellboretk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellboretk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Jobida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobida");

//                entity.Property(e => e.Jobidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobidb");

//                entity.Property(e => e.Jobidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobidc");

//                entity.Property(e => e.Jobsubtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("jobsubtyp");

//                entity.Property(e => e.Jobtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("jobtyp");

//                entity.Property(e => e.Objective)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("objective");

//                entity.Property(e => e.Objectivegeo)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("objectivegeo");

//                entity.Property(e => e.Rateactualcond).HasColumnName("rateactualcond");

//                entity.Property(e => e.Rateactualgas).HasColumnName("rateactualgas");

//                entity.Property(e => e.Rateactualoil).HasColumnName("rateactualoil");

//                entity.Property(e => e.Rateactualwater).HasColumnName("rateactualwater");

//                entity.Property(e => e.Ratetargetcond).HasColumnName("ratetargetcond");

//                entity.Property(e => e.Ratetargetgas).HasColumnName("ratetargetgas");

//                entity.Property(e => e.Ratetargetoil).HasColumnName("ratetargetoil");

//                entity.Property(e => e.Ratetargetwater).HasColumnName("ratetargetwater");

//                entity.Property(e => e.Responsiblegrp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp1");

//                entity.Property(e => e.Responsiblegrp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp2");

//                entity.Property(e => e.Responsiblegrp3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp3");

//                entity.Property(e => e.Resulttechnical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("resulttechnical");

//                entity.Property(e => e.Status1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status1");

//                entity.Property(e => e.Status2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status2");

//                entity.Property(e => e.Summary)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summary");

//                entity.Property(e => e.Summarygeo)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summarygeo");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Targetdepth).HasColumnName("targetdepth");

//                entity.Property(e => e.Targetform)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("targetform");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Wvtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("wvtyp");
//            });

//            modelBuilder.Entity<ProdTWellviewWvtWvjobreportcostgen>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("prod_t_wellview_wvt_wvjobreportcostgen", "stage");

//                entity.Property(e => e.Code1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code1");

//                entity.Property(e => e.Code2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code2");

//                entity.Property(e => e.Code3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code3");

//                entity.Property(e => e.Code4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code4");

//                entity.Property(e => e.Code5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code5");

//                entity.Property(e => e.Code6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code6");

//                entity.Property(e => e.Cost).HasColumnName("cost");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecafecustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustom");

//                entity.Property(e => e.Idrecafecustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustomtk");

//                entity.Property(e => e.Idrecintervalproblemcustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecintervalproblemcustom");

//                entity.Property(e => e.Idrecintervalproblemcustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecintervalproblemcustomtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecphasecustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecphasecustom");

//                entity.Property(e => e.Idrecphasecustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecphasecustomtk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Intervalproblempct).HasColumnName("intervalproblempct");

//                entity.Property(e => e.Note)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("note");

//                entity.Property(e => e.Opscategory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("opscategory");

//                entity.Property(e => e.Polineno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("polineno");

//                entity.Property(e => e.Pono)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pono");

//                entity.Property(e => e.Sn)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sn");

//                entity.Property(e => e.Syscarryfwdp).HasColumnName("syscarryfwdp");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Ticketno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ticketno");

//                entity.Property(e => e.Unschedtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("unschedtyp");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");

//                entity.Property(e => e.Vendorsubcode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorsubcode");

//                entity.Property(e => e.Workorderno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("workorderno");
//            });

//            modelBuilder.Entity<Product>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("PRODUCTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveValue)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_VALUE");

//                entity.Property(e => e.BaseProductUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_PRODUCT_USAGE");

//                entity.Property(e => e.BatteryDispositionUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_DISPOSITION_USAGE");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CombineNglUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("COMBINE_NGL_USAGE");

//                entity.Property(e => e.CompositionAllowedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPOSITION_ALLOWED_FLAG");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtpOilUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CTP_OIL_USAGE");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.FacilityChargeUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_CHARGE_USAGE");

//                entity.Property(e => e.FdcAdjustmentUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FDC_ADJUSTMENT_USAGE");

//                entity.Property(e => e.FdcInjectionUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FDC_INJECTION_USAGE");

//                entity.Property(e => e.FinancialInterfaceUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FINANCIAL_INTERFACE_USAGE");

//                entity.Property(e => e.GasByproductUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_BYPRODUCT_USAGE");

//                entity.Property(e => e.GasDispositionUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_DISPOSITION_USAGE");

//                entity.Property(e => e.GasEquivalentFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_EQUIVALENT_FACTOR");

//                entity.Property(e => e.GeneralUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GENERAL_USAGE");

//                entity.Property(e => e.GeqAllowedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GEQ_ALLOWED_FLAG");

//                entity.Property(e => e.GigajoulesAllowedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GIGAJOULES_ALLOWED_FLAG");

//                entity.Property(e => e.InjectionConsumptionUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_CONSUMPTION_USAGE");

//                entity.Property(e => e.InjectionDeliveryReportCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_DELIVERY_REPORT_CODE");

//                entity.Property(e => e.InjectionDeliveryUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_DELIVERY_USAGE");

//                entity.Property(e => e.InjectionDisposalReportCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_DISPOSAL_REPORT_CODE");

//                entity.Property(e => e.InjectionDisposalUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_DISPOSAL_USAGE");

//                entity.Property(e => e.InjectionReceiptReportCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_RECEIPT_REPORT_CODE");

//                entity.Property(e => e.InjectionReceiptUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_RECEIPT_USAGE");

//                entity.Property(e => e.InjectionSummaryCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_SUMMARY_CODE");

//                entity.Property(e => e.InjectionSummaryReportCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_SUMMARY_REPORT_CODE");

//                entity.Property(e => e.InjectionSummaryUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_SUMMARY_USAGE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MixFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MIX_FLAG");

//                entity.Property(e => e.NglValReportingProdCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("NGL_VAL_REPORTING_PROD_CODE");

//                entity.Property(e => e.NonGasDispositionUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NON_GAS_DISPOSITION_USAGE");

//                entity.Property(e => e.ObligUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIG_USAGE");

//                entity.Property(e => e.OilGasUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_GAS_USAGE");

//                entity.Property(e => e.ParentProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_PRODUCT_CODE");

//                entity.Property(e => e.ParentSpecProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_SPEC_PRODUCT_CODE");

//                entity.Property(e => e.PartnerOperatedUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTNER_OPERATED_USAGE");

//                entity.Property(e => e.ReportAsUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_USAGE");

//                entity.Property(e => e.ReportOilAsUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_OIL_AS_USAGE");

//                entity.Property(e => e.ReportWaterAsUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_WATER_AS_USAGE");

//                entity.Property(e => e.RoyaltyBypUsage)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_BYP_USAGE");

//                entity.Property(e => e.ShortDescription)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_DESCRIPTION");

//                entity.Property(e => e.SortOrder)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SORT_ORDER");

//                entity.Property(e => e.SpecFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPEC_FLAG");

//                entity.Property(e => e.SpecProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SPEC_PRODUCT_CODE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<PvtPvfacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvfacility", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Facilityida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityida");

//                entity.Property(e => e.Facilityidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidb");

//                entity.Property(e => e.Facilityidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidc");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Hidefacrev).HasColumnName("hidefacrev");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("idpa");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecunitprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimary");

//                entity.Property(e => e.Idrecunitprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimarytk");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Permanentid)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("permanentid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Treathcliquidasgas).HasColumnName("treathcliquidasgas");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typpa");

//                entity.Property(e => e.Typregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typregulatory");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");
//            });

//            modelBuilder.Entity<PvtPvfacilitymonthdaycalc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvfacilitymonthdaycalc", "pv30_prodcopy");

//                entity.Property(e => e.Balanced).HasColumnName("balanced");

//                entity.Property(e => e.Balfactgas).HasColumnName("balfactgas");

//                entity.Property(e => e.Balfactgasplusgaseq).HasColumnName("balfactgasplusgaseq");

//                entity.Property(e => e.Balfacthcliq).HasColumnName("balfacthcliq");

//                entity.Property(e => e.Balfactsand).HasColumnName("balfactsand");

//                entity.Property(e => e.Balfactwater).HasColumnName("balfactwater");

//                entity.Property(e => e.Balgas).HasColumnName("balgas");

//                entity.Property(e => e.Balgasplusgaseq).HasColumnName("balgasplusgaseq");

//                entity.Property(e => e.Balhcliq).HasColumnName("balhcliq");

//                entity.Property(e => e.Balsand).HasColumnName("balsand");

//                entity.Property(e => e.Balwater).HasColumnName("balwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volbalgas).HasColumnName("volbalgas");

//                entity.Property(e => e.Volbalgasplusgaseq).HasColumnName("volbalgasplusgaseq");

//                entity.Property(e => e.Volbalhcliq).HasColumnName("volbalhcliq");

//                entity.Property(e => e.Volbalsand).HasColumnName("volbalsand");

//                entity.Property(e => e.Volbalwater).HasColumnName("volbalwater");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volendremainrecovgas).HasColumnName("volendremainrecovgas");

//                entity.Property(e => e.Volendremainrecovgasplusgeq).HasColumnName("volendremainrecovgasplusgeq");

//                entity.Property(e => e.Volendremainrecovhcliq).HasColumnName("volendremainrecovhcliq");

//                entity.Property(e => e.Volendremainrecovsand).HasColumnName("volendremainrecovsand");

//                entity.Property(e => e.Volendremainrecovwater).HasColumnName("volendremainrecovwater");

//                entity.Property(e => e.Volinothergas).HasColumnName("volinothergas");

//                entity.Property(e => e.Volinothergasplusgaseq).HasColumnName("volinothergasplusgaseq");

//                entity.Property(e => e.Volinotherhcliq).HasColumnName("volinotherhcliq");

//                entity.Property(e => e.Volinothersand).HasColumnName("volinothersand");

//                entity.Property(e => e.Volinotherwater).HasColumnName("volinotherwater");

//                entity.Property(e => e.Volinrecovgas).HasColumnName("volinrecovgas");

//                entity.Property(e => e.Volinrecovgasplusgaseq).HasColumnName("volinrecovgasplusgaseq");

//                entity.Property(e => e.Volinrecovhcliq).HasColumnName("volinrecovhcliq");

//                entity.Property(e => e.Volinrecovsand).HasColumnName("volinrecovsand");

//                entity.Property(e => e.Volinrecovwater).HasColumnName("volinrecovwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathgasplusgaseq).HasColumnName("volnewprodgathgasplusgaseq");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Voloutconsumegas).HasColumnName("voloutconsumegas");

//                entity.Property(e => e.Voloutconsumegasplusgaseq).HasColumnName("voloutconsumegasplusgaseq");

//                entity.Property(e => e.Voloutconsumehcliq).HasColumnName("voloutconsumehcliq");

//                entity.Property(e => e.Voloutconsumesand).HasColumnName("voloutconsumesand");

//                entity.Property(e => e.Voloutconsumewater).HasColumnName("voloutconsumewater");

//                entity.Property(e => e.Voloutinjectrecovgas).HasColumnName("voloutinjectrecovgas");

//                entity.Property(e => e.Voloutinjectrecovgasplusgaseq).HasColumnName("voloutinjectrecovgasplusgaseq");

//                entity.Property(e => e.Voloutinjectrecovhcliq).HasColumnName("voloutinjectrecovhcliq");

//                entity.Property(e => e.Voloutinjectrecovsand).HasColumnName("voloutinjectrecovsand");

//                entity.Property(e => e.Voloutinjectrecovwater).HasColumnName("voloutinjectrecovwater");

//                entity.Property(e => e.Voloutothergas).HasColumnName("voloutothergas");

//                entity.Property(e => e.Voloutothergasplusgaseq).HasColumnName("voloutothergasplusgaseq");

//                entity.Property(e => e.Voloutotherhcliq).HasColumnName("voloutotherhcliq");

//                entity.Property(e => e.Voloutothersand).HasColumnName("voloutothersand");

//                entity.Property(e => e.Voloutotherwater).HasColumnName("voloutotherwater");

//                entity.Property(e => e.Volprodgas).HasColumnName("volprodgas");

//                entity.Property(e => e.Volprodgasplusgaseq).HasColumnName("volprodgasplusgaseq");

//                entity.Property(e => e.Volprodhcliq).HasColumnName("volprodhcliq");

//                entity.Property(e => e.Volprodsand).HasColumnName("volprodsand");

//                entity.Property(e => e.Volprodwater).HasColumnName("volprodwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovgasplusgeq).HasColumnName("volstartremainrecovgasplusgeq");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Volstvgas).HasColumnName("volstvgas");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvflownetheader>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvflownetheader", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmallocprocessbegan)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmallocprocessbegan");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmlastallocprocess)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmlastallocprocess");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrecfacilityprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilityprimary");

//                entity.Property(e => e.Idrecfacilityprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilityprimarytk");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecunitprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimary");

//                entity.Property(e => e.Idrecunitprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimarytk");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Rptallocations).HasColumnName("rptallocations");

//                entity.Property(e => e.Rptcomponentdispositions).HasColumnName("rptcomponentdispositions");

//                entity.Property(e => e.Rptdispositions).HasColumnName("rptdispositions");

//                entity.Property(e => e.Rptgatheredcalcs).HasColumnName("rptgatheredcalcs");

//                entity.Property(e => e.Rptnodecalculations).HasColumnName("rptnodecalculations");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockdatemaster)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdatemaster");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoddatedb)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddatedb");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysmoduserdb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduserdb");

//                entity.Property(e => e.Syssecuritytyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syssecuritytyp");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Userlastallocprocess)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("userlastallocprocess");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");
//            });

//            modelBuilder.Entity<PvtPvrouteset>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvrouteset", "pv30_prodcopy");

//                entity.Property(e => e.Activetodaycalc).HasColumnName("activetodaycalc");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvroutesetroute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvroutesetroute", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");
//            });

//            modelBuilder.Entity<PvtPvunit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunit", "pv30_prodcopy");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Costcenterida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenterida");

//                entity.Property(e => e.Costcenteridb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenteridb");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("country");

//                entity.Property(e => e.County)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("county");

//                entity.Property(e => e.Displaysizefactor).HasColumnName("displaysizefactor");

//                entity.Property(e => e.Dispproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispproductname");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("division");

//                entity.Property(e => e.Divisioncode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("divisioncode");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Elevation).HasColumnName("elevation");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("field");

//                entity.Property(e => e.Fieldcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldcode");

//                entity.Property(e => e.Fieldoffice)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldoffice");

//                entity.Property(e => e.Fieldofficecode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldofficecode");

//                entity.Property(e => e.Govauthority)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("govauthority");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecfacilitycalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitycalc");

//                entity.Property(e => e.Idrecfacilitycalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitycalctk");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecroutesetroutecalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecroutesetroutecalc");

//                entity.Property(e => e.Idrecroutesetroutecalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecroutesetroutecalctk");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Latitude).HasColumnName("latitude");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Latlongsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongsource");

//                entity.Property(e => e.Lease)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("lease");

//                entity.Property(e => e.Leaseida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("leaseida");

//                entity.Property(e => e.Legalsurfloc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurfloc");

//                entity.Property(e => e.Locationtyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("locationtyp");

//                entity.Property(e => e.Longitude).HasColumnName("longitude");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Operated).HasColumnName("operated");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Operatorida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operatorida");

//                entity.Property(e => e.Padcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padcode");

//                entity.Property(e => e.Padname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padname");

//                entity.Property(e => e.Platform)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("platform");

//                entity.Property(e => e.Priority).HasColumnName("priority");

//                entity.Property(e => e.Purchaser).HasColumnName("purchaser");

//                entity.Property(e => e.Slot)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("slot");

//                entity.Property(e => e.Sortbyuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sortbyuser");

//                entity.Property(e => e.Stateprov)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("stateprov");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Timezone)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("timezone");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typdisphcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisphcliq");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Typpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typpa");

//                entity.Property(e => e.Typregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typregulatory");

//                entity.Property(e => e.Unitida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitida");

//                entity.Property(e => e.Unitidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidb");

//                entity.Property(e => e.Unitidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidc");

//                entity.Property(e => e.Unitidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidpa");

//                entity.Property(e => e.Unitidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidregulatory");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Utmgridzone).HasColumnName("utmgridzone");

//                entity.Property(e => e.Utmsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("utmsource");

//                entity.Property(e => e.Utmx).HasColumnName("utmx");

//                entity.Property(e => e.Utmy).HasColumnName("utmy");
//            });

//            modelBuilder.Entity<PvtPvunitagreemt>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitagreemt", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecappliesto)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecappliesto");

//                entity.Property(e => e.Idrecappliestotk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecappliestotk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Refida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refida");

//                entity.Property(e => e.Refidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidb");

//                entity.Property(e => e.Refidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidc");

//                entity.Property(e => e.Subtyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("subtyp1");

//                entity.Property(e => e.Subtyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("subtyp2");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");
//            });

//            modelBuilder.Entity<PvtPvunitallocmonthday>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitallocmonthday", "pv30_prodcopy");

//                entity.Property(e => e.Allocfactgas).HasColumnName("allocfactgas");

//                entity.Property(e => e.Allocfacthcliq).HasColumnName("allocfacthcliq");

//                entity.Property(e => e.Allocfactsand).HasColumnName("allocfactsand");

//                entity.Property(e => e.Allocfactwater).HasColumnName("allocfactwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Nrigas).HasColumnName("nrigas");

//                entity.Property(e => e.Nrihcliq).HasColumnName("nrihcliq");

//                entity.Property(e => e.Nrisand).HasColumnName("nrisand");

//                entity.Property(e => e.Nriwater).HasColumnName("nriwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Voldifftargetcond).HasColumnName("voldifftargetcond");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetngl).HasColumnName("voldifftargetngl");

//                entity.Property(e => e.Voldifftargetoil).HasColumnName("voldifftargetoil");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Voldispflaregas).HasColumnName("voldispflaregas");

//                entity.Property(e => e.Voldispfuelgas).HasColumnName("voldispfuelgas");

//                entity.Property(e => e.Voldispincinerategas).HasColumnName("voldispincinerategas");

//                entity.Property(e => e.Voldispinjectgas).HasColumnName("voldispinjectgas");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalecond).HasColumnName("voldispsalecond");

//                entity.Property(e => e.Voldispsalegas).HasColumnName("voldispsalegas");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Voldispsalengl).HasColumnName("voldispsalengl");

//                entity.Property(e => e.Voldispsaleoil).HasColumnName("voldispsaleoil");

//                entity.Property(e => e.Voldispventgas).HasColumnName("voldispventgas");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectrecovgas).HasColumnName("volinjectrecovgas");

//                entity.Property(e => e.Volinjectrecovhcliq).HasColumnName("volinjectrecovhcliq");

//                entity.Property(e => e.Volinjectrecovsand).HasColumnName("volinjectrecovsand");

//                entity.Property(e => e.Volinjectrecovwater).HasColumnName("volinjectrecovwater");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodalloccond).HasColumnName("volnewprodalloccond");

//                entity.Property(e => e.Volnewprodallocgas).HasColumnName("volnewprodallocgas");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallochcliqgaseq).HasColumnName("volnewprodallochcliqgaseq");

//                entity.Property(e => e.Volnewprodallocngl).HasColumnName("volnewprodallocngl");

//                entity.Property(e => e.Volnewprodallocoil).HasColumnName("volnewprodallocoil");

//                entity.Property(e => e.Volnewprodallocsand).HasColumnName("volnewprodallocsand");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodalloccond).HasColumnName("volprodalloccond");

//                entity.Property(e => e.Volprodallocgas).HasColumnName("volprodallocgas");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodallochcliqgaseq).HasColumnName("volprodallochcliqgaseq");

//                entity.Property(e => e.Volprodallocngl).HasColumnName("volprodallocngl");

//                entity.Property(e => e.Volprodallocoil).HasColumnName("volprodallocoil");

//                entity.Property(e => e.Volprodallocsand).HasColumnName("volprodallocsand");

//                entity.Property(e => e.Volprodallocwater).HasColumnName("volprodallocwater");

//                entity.Property(e => e.Volprodcumcond).HasColumnName("volprodcumcond");

//                entity.Property(e => e.Volprodcumgas).HasColumnName("volprodcumgas");

//                entity.Property(e => e.Volprodcumhcliq).HasColumnName("volprodcumhcliq");

//                entity.Property(e => e.Volprodcumngl).HasColumnName("volprodcumngl");

//                entity.Property(e => e.Volprodcumoil).HasColumnName("volprodcumoil");

//                entity.Property(e => e.Volprodcumsand).HasColumnName("volprodcumsand");

//                entity.Property(e => e.Volprodcumwater).HasColumnName("volprodcumwater");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathsand).HasColumnName("volprodgathsand");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volrecovgas).HasColumnName("volrecovgas");

//                entity.Property(e => e.Volrecovhcliq).HasColumnName("volrecovhcliq");

//                entity.Property(e => e.Volrecovsand).HasColumnName("volrecovsand");

//                entity.Property(e => e.Volrecovwater).HasColumnName("volrecovwater");

//                entity.Property(e => e.Volremainrecovgas).HasColumnName("volremainrecovgas");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");

//                entity.Property(e => e.Volremainrecovsand).HasColumnName("volremainrecovsand");

//                entity.Property(e => e.Volremainrecovwater).HasColumnName("volremainrecovwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Wigas).HasColumnName("wigas");

//                entity.Property(e => e.Wihcliq).HasColumnName("wihcliq");

//                entity.Property(e => e.Wisand).HasColumnName("wisand");

//                entity.Property(e => e.Wiwater).HasColumnName("wiwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitallocmonthdayIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitallocmonthday_incr", "pv30_prodcopy");

//                entity.Property(e => e.Allocfactgas).HasColumnName("allocfactgas");

//                entity.Property(e => e.Allocfacthcliq).HasColumnName("allocfacthcliq");

//                entity.Property(e => e.Allocfactsand).HasColumnName("allocfactsand");

//                entity.Property(e => e.Allocfactwater).HasColumnName("allocfactwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Nrigas).HasColumnName("nrigas");

//                entity.Property(e => e.Nrihcliq).HasColumnName("nrihcliq");

//                entity.Property(e => e.Nrisand).HasColumnName("nrisand");

//                entity.Property(e => e.Nriwater).HasColumnName("nriwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Voldifftargetcond).HasColumnName("voldifftargetcond");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetngl).HasColumnName("voldifftargetngl");

//                entity.Property(e => e.Voldifftargetoil).HasColumnName("voldifftargetoil");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Voldispflaregas).HasColumnName("voldispflaregas");

//                entity.Property(e => e.Voldispfuelgas).HasColumnName("voldispfuelgas");

//                entity.Property(e => e.Voldispincinerategas).HasColumnName("voldispincinerategas");

//                entity.Property(e => e.Voldispinjectgas).HasColumnName("voldispinjectgas");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalecond).HasColumnName("voldispsalecond");

//                entity.Property(e => e.Voldispsalegas).HasColumnName("voldispsalegas");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Voldispsalengl).HasColumnName("voldispsalengl");

//                entity.Property(e => e.Voldispsaleoil).HasColumnName("voldispsaleoil");

//                entity.Property(e => e.Voldispventgas).HasColumnName("voldispventgas");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectrecovgas).HasColumnName("volinjectrecovgas");

//                entity.Property(e => e.Volinjectrecovhcliq).HasColumnName("volinjectrecovhcliq");

//                entity.Property(e => e.Volinjectrecovsand).HasColumnName("volinjectrecovsand");

//                entity.Property(e => e.Volinjectrecovwater).HasColumnName("volinjectrecovwater");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodalloccond).HasColumnName("volnewprodalloccond");

//                entity.Property(e => e.Volnewprodallocgas).HasColumnName("volnewprodallocgas");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallochcliqgaseq).HasColumnName("volnewprodallochcliqgaseq");

//                entity.Property(e => e.Volnewprodallocngl).HasColumnName("volnewprodallocngl");

//                entity.Property(e => e.Volnewprodallocoil).HasColumnName("volnewprodallocoil");

//                entity.Property(e => e.Volnewprodallocsand).HasColumnName("volnewprodallocsand");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodalloccond).HasColumnName("volprodalloccond");

//                entity.Property(e => e.Volprodallocgas).HasColumnName("volprodallocgas");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodallochcliqgaseq).HasColumnName("volprodallochcliqgaseq");

//                entity.Property(e => e.Volprodallocngl).HasColumnName("volprodallocngl");

//                entity.Property(e => e.Volprodallocoil).HasColumnName("volprodallocoil");

//                entity.Property(e => e.Volprodallocsand).HasColumnName("volprodallocsand");

//                entity.Property(e => e.Volprodallocwater).HasColumnName("volprodallocwater");

//                entity.Property(e => e.Volprodcumcond).HasColumnName("volprodcumcond");

//                entity.Property(e => e.Volprodcumgas).HasColumnName("volprodcumgas");

//                entity.Property(e => e.Volprodcumhcliq).HasColumnName("volprodcumhcliq");

//                entity.Property(e => e.Volprodcumngl).HasColumnName("volprodcumngl");

//                entity.Property(e => e.Volprodcumoil).HasColumnName("volprodcumoil");

//                entity.Property(e => e.Volprodcumsand).HasColumnName("volprodcumsand");

//                entity.Property(e => e.Volprodcumwater).HasColumnName("volprodcumwater");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathsand).HasColumnName("volprodgathsand");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volrecovgas).HasColumnName("volrecovgas");

//                entity.Property(e => e.Volrecovhcliq).HasColumnName("volrecovhcliq");

//                entity.Property(e => e.Volrecovsand).HasColumnName("volrecovsand");

//                entity.Property(e => e.Volrecovwater).HasColumnName("volrecovwater");

//                entity.Property(e => e.Volremainrecovgas).HasColumnName("volremainrecovgas");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");

//                entity.Property(e => e.Volremainrecovsand).HasColumnName("volremainrecovsand");

//                entity.Property(e => e.Volremainrecovwater).HasColumnName("volremainrecovwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Wigas).HasColumnName("wigas");

//                entity.Property(e => e.Wihcliq).HasColumnName("wihcliq");

//                entity.Property(e => e.Wisand).HasColumnName("wisand");

//                entity.Property(e => e.Wiwater).HasColumnName("wiwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitcomp>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcomp", "pv30_prodcopy");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Compidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidb");

//                entity.Property(e => e.Compidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidc");

//                entity.Property(e => e.Compidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidd");

//                entity.Property(e => e.Compidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidpa");

//                entity.Property(e => e.Compidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidregulatory");

//                entity.Property(e => e.Completioncode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completioncode");

//                entity.Property(e => e.Completionide)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionide");

//                entity.Property(e => e.Completionlicensee)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionlicensee");

//                entity.Property(e => e.Completionlicenseno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionlicenseno");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttmabandon)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmabandon");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmfirstsale)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmfirstsale");

//                entity.Property(e => e.Dttmflowbackend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmflowbackend");

//                entity.Property(e => e.Dttmflowbackstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmflowbackstart");

//                entity.Property(e => e.Dttmlicense)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmlicense");

//                entity.Property(e => e.Dttmonprod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmonprod");

//                entity.Property(e => e.Dttmstartalloc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstartalloc");

//                entity.Property(e => e.Entryreqperiodfluidlevel)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entryreqperiodfluidlevel");

//                entity.Property(e => e.Entryreqperiodparam)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entryreqperiodparam");

//                entity.Property(e => e.Exportid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("exportid1");

//                entity.Property(e => e.Exportid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("exportid2");

//                entity.Property(e => e.Exporttyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("exporttyp1");

//                entity.Property(e => e.Exporttyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("exporttyp2");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Importid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("importid1");

//                entity.Property(e => e.Importid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("importid2");

//                entity.Property(e => e.Importtyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("importtyp1");

//                entity.Property(e => e.Importtyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("importtyp2");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Latitude).HasColumnName("latitude");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Latlongsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongsource");

//                entity.Property(e => e.Longitude).HasColumnName("longitude");

//                entity.Property(e => e.Permanentid)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("permanentid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Wellida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellida");

//                entity.Property(e => e.Wellidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidb");

//                entity.Property(e => e.Wellidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidc");

//                entity.Property(e => e.Wellidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidd");

//                entity.Property(e => e.Wellide)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellide");

//                entity.Property(e => e.Wellidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidpa");

//                entity.Property(e => e.Wellidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidregulatory");

//                entity.Property(e => e.Welllicenseno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("welllicenseno");

//                entity.Property(e => e.Wellname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("wellname");
//            });

//            modelBuilder.Entity<PvtPvunitcompdowntm>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompdowntm", "pv30_prodcopy");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Codedowntm2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm2");

//                entity.Property(e => e.Codedowntm3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm3");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmplanend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmplanend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Durdowncalc).HasColumnName("durdowncalc");

//                entity.Property(e => e.Durdownendday).HasColumnName("durdownendday");

//                entity.Property(e => e.Durdownplanend).HasColumnName("durdownplanend");

//                entity.Property(e => e.Durdownstartday).HasColumnName("durdownstartday");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typdowntm)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typdowntm");
//            });

//            modelBuilder.Entity<PvtPvunitcompfluidlevel>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompfluidlevel", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Depthpumpcalc).HasColumnName("depthpumpcalc");

//                entity.Property(e => e.Depthtofluid).HasColumnName("depthtofluid");

//                entity.Property(e => e.Depthtopumpcalc).HasColumnName("depthtopumpcalc");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Jointsinhole).HasColumnName("jointsinhole");

//                entity.Property(e => e.Jointsoffluidcalc).HasColumnName("jointsoffluidcalc");

//                entity.Property(e => e.Jointstofluid).HasColumnName("jointstofluid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvunitcompgathmonthcalc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompgathmonthcalc", "pv30_prodcopy");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Gor).HasColumnName("gor");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Pctchggas).HasColumnName("pctchggas");

//                entity.Property(e => e.Pctchghcliq).HasColumnName("pctchghcliq");

//                entity.Property(e => e.Pctchgsand).HasColumnName("pctchgsand");

//                entity.Property(e => e.Pctchgtotliq).HasColumnName("pctchgtotliq");

//                entity.Property(e => e.Pctchgwater).HasColumnName("pctchgwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Ratechggas).HasColumnName("ratechggas");

//                entity.Property(e => e.Ratechghcliq).HasColumnName("ratechghcliq");

//                entity.Property(e => e.Ratechgsand).HasColumnName("ratechgsand");

//                entity.Property(e => e.Ratechgtotalliq).HasColumnName("ratechgtotalliq");

//                entity.Property(e => e.Ratechgwater).HasColumnName("ratechgwater");

//                entity.Property(e => e.Rategas).HasColumnName("rategas");

//                entity.Property(e => e.Rategasintol).HasColumnName("rategasintol");

//                entity.Property(e => e.Ratehcliq).HasColumnName("ratehcliq");

//                entity.Property(e => e.Ratehcliqintol).HasColumnName("ratehcliqintol");

//                entity.Property(e => e.Rateintol).HasColumnName("rateintol");

//                entity.Property(e => e.Ratesand).HasColumnName("ratesand");

//                entity.Property(e => e.Ratesandintol).HasColumnName("ratesandintol");

//                entity.Property(e => e.Ratetotalliq).HasColumnName("ratetotalliq");

//                entity.Property(e => e.Ratewater).HasColumnName("ratewater");

//                entity.Property(e => e.Ratewaterintol).HasColumnName("ratewaterintol");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volcasinggas).HasColumnName("volcasinggas");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volgathinjectrecovgas).HasColumnName("volgathinjectrecovgas");

//                entity.Property(e => e.Volgathinjectrecovhcliq).HasColumnName("volgathinjectrecovhcliq");

//                entity.Property(e => e.Volgathinjectrecovsand).HasColumnName("volgathinjectrecovsand");

//                entity.Property(e => e.Volgathinjectrecovwater).HasColumnName("volgathinjectrecovwater");

//                entity.Property(e => e.Volgathrecovgas).HasColumnName("volgathrecovgas");

//                entity.Property(e => e.Volgathrecovhcliq).HasColumnName("volgathrecovhcliq");

//                entity.Property(e => e.Volgathrecovsand).HasColumnName("volgathrecovsand");

//                entity.Property(e => e.Volgathrecovwater).HasColumnName("volgathrecovwater");

//                entity.Property(e => e.Volgathremainrecovgas).HasColumnName("volgathremainrecovgas");

//                entity.Property(e => e.Volgathremainrecovhcliq).HasColumnName("volgathremainrecovhcliq");

//                entity.Property(e => e.Volgathremainrecovsand).HasColumnName("volgathremainrecovsand");

//                entity.Property(e => e.Volgathremainrecovwater).HasColumnName("volgathremainrecovwater");

//                entity.Property(e => e.Volgathstartremainrecovgas).HasColumnName("volgathstartremainrecovgas");

//                entity.Property(e => e.Volgathstartremainrecovhcliq).HasColumnName("volgathstartremainrecovhcliq");

//                entity.Property(e => e.Volgathstartremainrecovsand).HasColumnName("volgathstartremainrecovsand");

//                entity.Property(e => e.Volgathstartremainrecovwater).HasColumnName("volgathstartremainrecovwater");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Voltotalliq).HasColumnName("voltotalliq");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitcompgathmonthdaycalcIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompgathmonthdaycalc_incr", "pv30_prodcopy");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Gor).HasColumnName("gor");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Pctchggas).HasColumnName("pctchggas");

//                entity.Property(e => e.Pctchghcliq).HasColumnName("pctchghcliq");

//                entity.Property(e => e.Pctchgsand).HasColumnName("pctchgsand");

//                entity.Property(e => e.Pctchgtotliq).HasColumnName("pctchgtotliq");

//                entity.Property(e => e.Pctchgwater).HasColumnName("pctchgwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Ratechggas).HasColumnName("ratechggas");

//                entity.Property(e => e.Ratechghcliq).HasColumnName("ratechghcliq");

//                entity.Property(e => e.Ratechgsand).HasColumnName("ratechgsand");

//                entity.Property(e => e.Ratechgtotalliq).HasColumnName("ratechgtotalliq");

//                entity.Property(e => e.Ratechgwater).HasColumnName("ratechgwater");

//                entity.Property(e => e.Rategas).HasColumnName("rategas");

//                entity.Property(e => e.Rategasintol).HasColumnName("rategasintol");

//                entity.Property(e => e.Ratehcliq).HasColumnName("ratehcliq");

//                entity.Property(e => e.Ratehcliqintol).HasColumnName("ratehcliqintol");

//                entity.Property(e => e.Rateintol).HasColumnName("rateintol");

//                entity.Property(e => e.Ratesand).HasColumnName("ratesand");

//                entity.Property(e => e.Ratesandintol).HasColumnName("ratesandintol");

//                entity.Property(e => e.Ratetotalliq).HasColumnName("ratetotalliq");

//                entity.Property(e => e.Ratewater).HasColumnName("ratewater");

//                entity.Property(e => e.Ratewaterintol).HasColumnName("ratewaterintol");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volcasinggas).HasColumnName("volcasinggas");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volgathinjectrecovgas).HasColumnName("volgathinjectrecovgas");

//                entity.Property(e => e.Volgathinjectrecovhcliq).HasColumnName("volgathinjectrecovhcliq");

//                entity.Property(e => e.Volgathinjectrecovsand).HasColumnName("volgathinjectrecovsand");

//                entity.Property(e => e.Volgathinjectrecovwater).HasColumnName("volgathinjectrecovwater");

//                entity.Property(e => e.Volgathrecovgas).HasColumnName("volgathrecovgas");

//                entity.Property(e => e.Volgathrecovhcliq).HasColumnName("volgathrecovhcliq");

//                entity.Property(e => e.Volgathrecovsand).HasColumnName("volgathrecovsand");

//                entity.Property(e => e.Volgathrecovwater).HasColumnName("volgathrecovwater");

//                entity.Property(e => e.Volgathremainrecovgas).HasColumnName("volgathremainrecovgas");

//                entity.Property(e => e.Volgathremainrecovhcliq).HasColumnName("volgathremainrecovhcliq");

//                entity.Property(e => e.Volgathremainrecovsand).HasColumnName("volgathremainrecovsand");

//                entity.Property(e => e.Volgathremainrecovwater).HasColumnName("volgathremainrecovwater");

//                entity.Property(e => e.Volgathstartremainrecovgas).HasColumnName("volgathstartremainrecovgas");

//                entity.Property(e => e.Volgathstartremainrecovhcliq).HasColumnName("volgathstartremainrecovhcliq");

//                entity.Property(e => e.Volgathstartremainrecovsand).HasColumnName("volgathstartremainrecovsand");

//                entity.Property(e => e.Volgathstartremainrecovwater).HasColumnName("volgathstartremainrecovwater");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Voltotalliq).HasColumnName("voltotalliq");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitcompmeasmeth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompmeasmeth", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Flowdirection)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("flowdirection");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecnodecasinggas)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodecasinggas");

//                entity.Property(e => e.Idrecnodecasinggastk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodecasinggastk");

//                entity.Property(e => e.Idrecnodegas)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodegas");

//                entity.Property(e => e.Idrecnodegastk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodegastk");

//                entity.Property(e => e.Idrecnodehcliq)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodehcliq");

//                entity.Property(e => e.Idrecnodehcliqtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodehcliqtk");

//                entity.Property(e => e.Idrecnodewater)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodewater");

//                entity.Property(e => e.Idrecnodewatertk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodewatertk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Methodgas)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodgas");

//                entity.Property(e => e.Methodhcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodhcliq");

//                entity.Property(e => e.Methodwater)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodwater");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvunitcompparam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompparam", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Ph).HasColumnName("ph");

//                entity.Property(e => e.Presbh).HasColumnName("presbh");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prescassi).HasColumnName("prescassi");

//                entity.Property(e => e.Presinj).HasColumnName("presinj");

//                entity.Property(e => e.Presline).HasColumnName("presline");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Prestubsi).HasColumnName("prestubsi");

//                entity.Property(e => e.Presuser1).HasColumnName("presuser1");

//                entity.Property(e => e.Presuser2).HasColumnName("presuser2");

//                entity.Property(e => e.Presuser3).HasColumnName("presuser3");

//                entity.Property(e => e.Presuser4).HasColumnName("presuser4");

//                entity.Property(e => e.Presuser5).HasColumnName("presuser5");

//                entity.Property(e => e.Preswh).HasColumnName("preswh");

//                entity.Property(e => e.Salinity).HasColumnName("salinity");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szchoke).HasColumnName("szchoke");

//                entity.Property(e => e.Tempbh).HasColumnName("tempbh");

//                entity.Property(e => e.Tempuser1).HasColumnName("tempuser1");

//                entity.Property(e => e.Tempuser2).HasColumnName("tempuser2");

//                entity.Property(e => e.Tempuser3).HasColumnName("tempuser3");

//                entity.Property(e => e.Tempuser4).HasColumnName("tempuser4");

//                entity.Property(e => e.Tempuser5).HasColumnName("tempuser5");

//                entity.Property(e => e.Tempwh).HasColumnName("tempwh");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Viscdynamic).HasColumnName("viscdynamic");

//                entity.Property(e => e.Visckinematic).HasColumnName("visckinematic");
//            });

//            modelBuilder.Entity<PvtPvunitcompparamIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompparam_incr", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Ph).HasColumnName("ph");

//                entity.Property(e => e.Presbh).HasColumnName("presbh");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prescassi).HasColumnName("prescassi");

//                entity.Property(e => e.Presinj).HasColumnName("presinj");

//                entity.Property(e => e.Presline).HasColumnName("presline");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Prestubsi).HasColumnName("prestubsi");

//                entity.Property(e => e.Presuser1).HasColumnName("presuser1");

//                entity.Property(e => e.Presuser2).HasColumnName("presuser2");

//                entity.Property(e => e.Presuser3).HasColumnName("presuser3");

//                entity.Property(e => e.Presuser4).HasColumnName("presuser4");

//                entity.Property(e => e.Presuser5).HasColumnName("presuser5");

//                entity.Property(e => e.Preswh).HasColumnName("preswh");

//                entity.Property(e => e.Salinity).HasColumnName("salinity");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szchoke).HasColumnName("szchoke");

//                entity.Property(e => e.Tempbh).HasColumnName("tempbh");

//                entity.Property(e => e.Tempuser1).HasColumnName("tempuser1");

//                entity.Property(e => e.Tempuser2).HasColumnName("tempuser2");

//                entity.Property(e => e.Tempuser3).HasColumnName("tempuser3");

//                entity.Property(e => e.Tempuser4).HasColumnName("tempuser4");

//                entity.Property(e => e.Tempuser5).HasColumnName("tempuser5");

//                entity.Property(e => e.Tempwh).HasColumnName("tempwh");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Viscdynamic).HasColumnName("viscdynamic");

//                entity.Property(e => e.Visckinematic).HasColumnName("visckinematic");
//            });

//            modelBuilder.Entity<PvtPvunitcompstatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompstatus", "pv30_prodcopy");

//                entity.Property(e => e.Calclostprod).HasColumnName("calclostprod");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Commingled)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("commingled");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Flowdirection)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("flowdirection");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Methodprod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodprod");

//                entity.Property(e => e.Primaryfluidtyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primaryfluidtyp");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typcompletion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typcompletion");

//                entity.Property(e => e.Typfluidprod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidprod");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Wellcountincl).HasColumnName("wellcountincl");
//            });

//            modelBuilder.Entity<PvtPvunitcompwhcut>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitcompwhcut", "pv30_prodcopy");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Sandcut).HasColumnName("sandcut");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvunitdispmonthday>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitdispmonthday", "pv30_prodcopy");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Heat).HasColumnName("heat");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdispunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunit");

//                entity.Property(e => e.Idrecdispunitnode)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnode");

//                entity.Property(e => e.Idrecdispunitnodetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnodetk");

//                entity.Property(e => e.Idrecdispunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunittk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volc1gas).HasColumnName("volc1gas");

//                entity.Property(e => e.Volc1gaseq).HasColumnName("volc1gaseq");

//                entity.Property(e => e.Volc1liq).HasColumnName("volc1liq");

//                entity.Property(e => e.Volc2gas).HasColumnName("volc2gas");

//                entity.Property(e => e.Volc2gaseq).HasColumnName("volc2gaseq");

//                entity.Property(e => e.Volc2liq).HasColumnName("volc2liq");

//                entity.Property(e => e.Volc3gas).HasColumnName("volc3gas");

//                entity.Property(e => e.Volc3gaseq).HasColumnName("volc3gaseq");

//                entity.Property(e => e.Volc3liq).HasColumnName("volc3liq");

//                entity.Property(e => e.Volc6gas).HasColumnName("volc6gas");

//                entity.Property(e => e.Volc6gaseq).HasColumnName("volc6gaseq");

//                entity.Property(e => e.Volc6liq).HasColumnName("volc6liq");

//                entity.Property(e => e.Volc7gas).HasColumnName("volc7gas");

//                entity.Property(e => e.Volc7gaseq).HasColumnName("volc7gaseq");

//                entity.Property(e => e.Volc7liq).HasColumnName("volc7liq");

//                entity.Property(e => e.Volco2gas).HasColumnName("volco2gas");

//                entity.Property(e => e.Volco2gaseq).HasColumnName("volco2gaseq");

//                entity.Property(e => e.Volco2liq).HasColumnName("volco2liq");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volh2sgas).HasColumnName("volh2sgas");

//                entity.Property(e => e.Volh2sgaseq).HasColumnName("volh2sgaseq");

//                entity.Property(e => e.Volh2sliq).HasColumnName("volh2sliq");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volhcliqgaseq).HasColumnName("volhcliqgaseq");

//                entity.Property(e => e.Volic4gas).HasColumnName("volic4gas");

//                entity.Property(e => e.Volic4gaseq).HasColumnName("volic4gaseq");

//                entity.Property(e => e.Volic4liq).HasColumnName("volic4liq");

//                entity.Property(e => e.Volic5gas).HasColumnName("volic5gas");

//                entity.Property(e => e.Volic5gaseq).HasColumnName("volic5gaseq");

//                entity.Property(e => e.Volic5liq).HasColumnName("volic5liq");

//                entity.Property(e => e.Voln2gas).HasColumnName("voln2gas");

//                entity.Property(e => e.Voln2gaseq).HasColumnName("voln2gaseq");

//                entity.Property(e => e.Voln2liq).HasColumnName("voln2liq");

//                entity.Property(e => e.Volnc4gas).HasColumnName("volnc4gas");

//                entity.Property(e => e.Volnc4gaseq).HasColumnName("volnc4gaseq");

//                entity.Property(e => e.Volnc4liq).HasColumnName("volnc4liq");

//                entity.Property(e => e.Volnc5gas).HasColumnName("volnc5gas");

//                entity.Property(e => e.Volnc5gaseq).HasColumnName("volnc5gaseq");

//                entity.Property(e => e.Volnc5liq).HasColumnName("volnc5liq");

//                entity.Property(e => e.Volothercompgas).HasColumnName("volothercompgas");

//                entity.Property(e => e.Volothercompgaseq).HasColumnName("volothercompgaseq");

//                entity.Property(e => e.Volothercompliq).HasColumnName("volothercompliq");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitdispmonthdayIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitdispmonthday_incr", "pv30_prodcopy");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Heat).HasColumnName("heat");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdispunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunit");

//                entity.Property(e => e.Idrecdispunitnode)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnode");

//                entity.Property(e => e.Idrecdispunitnodetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnodetk");

//                entity.Property(e => e.Idrecdispunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunittk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volc1gas).HasColumnName("volc1gas");

//                entity.Property(e => e.Volc1gaseq).HasColumnName("volc1gaseq");

//                entity.Property(e => e.Volc1liq).HasColumnName("volc1liq");

//                entity.Property(e => e.Volc2gas).HasColumnName("volc2gas");

//                entity.Property(e => e.Volc2gaseq).HasColumnName("volc2gaseq");

//                entity.Property(e => e.Volc2liq).HasColumnName("volc2liq");

//                entity.Property(e => e.Volc3gas).HasColumnName("volc3gas");

//                entity.Property(e => e.Volc3gaseq).HasColumnName("volc3gaseq");

//                entity.Property(e => e.Volc3liq).HasColumnName("volc3liq");

//                entity.Property(e => e.Volc6gas).HasColumnName("volc6gas");

//                entity.Property(e => e.Volc6gaseq).HasColumnName("volc6gaseq");

//                entity.Property(e => e.Volc6liq).HasColumnName("volc6liq");

//                entity.Property(e => e.Volc7gas).HasColumnName("volc7gas");

//                entity.Property(e => e.Volc7gaseq).HasColumnName("volc7gaseq");

//                entity.Property(e => e.Volc7liq).HasColumnName("volc7liq");

//                entity.Property(e => e.Volco2gas).HasColumnName("volco2gas");

//                entity.Property(e => e.Volco2gaseq).HasColumnName("volco2gaseq");

//                entity.Property(e => e.Volco2liq).HasColumnName("volco2liq");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volh2sgas).HasColumnName("volh2sgas");

//                entity.Property(e => e.Volh2sgaseq).HasColumnName("volh2sgaseq");

//                entity.Property(e => e.Volh2sliq).HasColumnName("volh2sliq");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volhcliqgaseq).HasColumnName("volhcliqgaseq");

//                entity.Property(e => e.Volic4gas).HasColumnName("volic4gas");

//                entity.Property(e => e.Volic4gaseq).HasColumnName("volic4gaseq");

//                entity.Property(e => e.Volic4liq).HasColumnName("volic4liq");

//                entity.Property(e => e.Volic5gas).HasColumnName("volic5gas");

//                entity.Property(e => e.Volic5gaseq).HasColumnName("volic5gaseq");

//                entity.Property(e => e.Volic5liq).HasColumnName("volic5liq");

//                entity.Property(e => e.Voln2gas).HasColumnName("voln2gas");

//                entity.Property(e => e.Voln2gaseq).HasColumnName("voln2gaseq");

//                entity.Property(e => e.Voln2liq).HasColumnName("voln2liq");

//                entity.Property(e => e.Volnc4gas).HasColumnName("volnc4gas");

//                entity.Property(e => e.Volnc4gaseq).HasColumnName("volnc4gaseq");

//                entity.Property(e => e.Volnc4liq).HasColumnName("volnc4liq");

//                entity.Property(e => e.Volnc5gas).HasColumnName("volnc5gas");

//                entity.Property(e => e.Volnc5gaseq).HasColumnName("volnc5gaseq");

//                entity.Property(e => e.Volnc5liq).HasColumnName("volnc5liq");

//                entity.Property(e => e.Volothercompgas).HasColumnName("volothercompgas");

//                entity.Property(e => e.Volothercompgaseq).HasColumnName("volothercompgaseq");

//                entity.Property(e => e.Volothercompliq).HasColumnName("volothercompliq");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<PvtPvunitnode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitnode", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Component)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("component");

//                entity.Property(e => e.Componentphase)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("componentphase");

//                entity.Property(e => e.Correctionid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("correctionid1");

//                entity.Property(e => e.Correctionid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("correctionid2");

//                entity.Property(e => e.Correctiontyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("correctiontyp1");

//                entity.Property(e => e.Correctiontyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("correctiontyp2");

//                entity.Property(e => e.Desfluid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desfluid");

//                entity.Property(e => e.Dispida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispida");

//                entity.Property(e => e.Dispidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispidb");

//                entity.Property(e => e.Dispositionpoint).HasColumnName("dispositionpoint");

//                entity.Property(e => e.Dispproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispproductname");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Facproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facproductname");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Keepwhole)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("keepwhole");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Otherid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("otherid");

//                entity.Property(e => e.Purchasercode1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasercode1");

//                entity.Property(e => e.Purchasercode2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasercode2");

//                entity.Property(e => e.Purchasername)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasername");

//                entity.Property(e => e.Sortflowdiag).HasColumnName("sortflowdiag");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Typdisp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisp1");

//                entity.Property(e => e.Typdisp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisp2");

//                entity.Property(e => e.Typdisphcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisphcliq");

//                entity.Property(e => e.Typfluidbaserestrict)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidbaserestrict");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usevirutalanalysis).HasColumnName("usevirutalanalysis");
//            });

//            modelBuilder.Entity<PvtPvunitnodeflowto>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitnodeflowto", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecinlet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinlet");

//                entity.Property(e => e.Idrecinlettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinlettk");

//                entity.Property(e => e.Idrecinletunitcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinletunitcalc");

//                entity.Property(e => e.Idrecinletunitcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinletunitcalctk");

//                entity.Property(e => e.Idrecoutletcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletcalc");

//                entity.Property(e => e.Idrecoutletcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletcalctk");

//                entity.Property(e => e.Idrecoutletunitcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletunitcalc");

//                entity.Property(e => e.Idrecoutletunitcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletunitcalctk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Recircflow).HasColumnName("recircflow");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvunitnodemeterevent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitnodemeterevent", "pv30_prodcopy");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecmeterevent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeterevent");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<PvtPvunitothertag>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("pvt_pvunitothertag", "pv30_prodcopy");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecitem)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitem");

//                entity.Property(e => e.Idrecitemtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitemtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Value)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("value");
//            });

//            modelBuilder.Entity<RevisedAccountDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_account_description", "dbo");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountDescriptionRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description_Revised");
//            });

//            modelBuilder.Entity<RevisedChildAlias>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_child_alias", "dbo");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildAliasRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_alias_Revised");
//            });

//            modelBuilder.Entity<RevisedChildId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_child_id", "dbo");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ChildIdRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_id_Revised");
//            });

//            modelBuilder.Entity<RevisedClassCodeDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_class_code_description", "dbo");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.ClassCodeDescriptionRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("class_code_description_Revised");
//            });

//            modelBuilder.Entity<RevisedGlAccountDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_gl_account_description", "dbo");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GlAccountDescriptionRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gl_account_description_Revised");
//            });

//            modelBuilder.Entity<RevisedHierarchyPath>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_Hierarchy_Path", "dbo");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyPathRevised)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path_Revised");
//            });

//            modelBuilder.Entity<RevisedHierarchyPath20200612>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_Hierarchy_Path_20200612", "dbo");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyPathRevised)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path_Revised");
//            });

//            modelBuilder.Entity<RevisedMajorAccountDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_major_account_description", "dbo");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorAccountDescriptionRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("major_account_description_Revised");
//            });

//            modelBuilder.Entity<RevisedParentId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_parent_id", "dbo");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ParentIdRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("parent_id_Revised");
//            });

//            modelBuilder.Entity<RevisedScenarioSortKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_scenario_sort_key", "dbo");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(1000)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.ScenarioSortKeyRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("scenario_sort_key_Revised");
//            });

//            modelBuilder.Entity<RevisedSortKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("Revised_sort_key", "dbo");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.SortKeyRevised)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key_Revised");
//            });

//            modelBuilder.Entity<RoyaltyCalcFormulaDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_CALC_FORMULA_DETAILS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CalculationDescription)
//                    .HasMaxLength(160)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_DESCRIPTION");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_ID");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.Factor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("FACTOR");

//                entity.Property(e => e.JobId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("JOB_ID");

//                entity.Property(e => e.Maximum)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("MAXIMUM");

//                entity.Property(e => e.Minimum)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("MINIMUM");

//                entity.Property(e => e.ObligationId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIGATION_ID");

//                entity.Property(e => e.PercentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PERCENT_FLAG");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RecordType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RECORD_TYPE");

//                entity.Property(e => e.ResultFactor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("RESULT_FACTOR");

//                entity.Property(e => e.ResultSign)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RESULT_SIGN");

//                entity.Property(e => e.RonProduct)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("RON_PRODUCT");

//                entity.Property(e => e.SequenceNumber)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("SEQUENCE_NUMBER");

//                entity.Property(e => e.Subtotal)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("SUBTOTAL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TRACT_ID");

//                entity.Property(e => e.WellTractType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TRACT_TYPE");
//            });

//            modelBuilder.Entity<RoyaltyFormulaMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_FORMULA_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RoyaltyFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_FORMULA_ID");

//                entity.Property(e => e.RoyaltyFormulaType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_FORMULA_TYPE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<RoyaltyGlobalFactorMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_GLOBAL_FACTOR_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RoyaltyGlobalFactorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_GLOBAL_FACTOR_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<RoyaltyObligFactorValue>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_OBLIG_FACTOR_VALUES", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Factor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("FACTOR");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OblGlobalFactorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OBL_GLOBAL_FACTOR_ID");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RequiredFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REQUIRED_FLAG");

//                entity.Property(e => e.RoyaltyGlobalFactorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_GLOBAL_FACTOR_ID");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<RoyaltyObligation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_OBLIGATIONS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.RoyaltyObligationId)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_OBLIGATION_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<RoyaltyObligationMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_OBLIGATION_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.ActiveFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_FLAG");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DoiOwnershipExtensionId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DOI_OWNERSHIP_EXTENSION_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ObligationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIGATION_TYPE");

//                entity.Property(e => e.PaidByOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PAID_BY_OWNER_ID");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_TYPE");

//                entity.Property(e => e.PayorType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYOR_TYPE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RoyaltyEntitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_ENTITY_SYS_ID");

//                entity.Property(e => e.RoyaltyFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_FORMULA_ID");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_OWNER_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TakenInKind)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TAKEN_IN_KIND");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.UserDefined3)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED3");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<RoyaltySplit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("ROYALTY_SPLITS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownAdjustmentValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CROWN_ADJUSTMENT_VALUE");

//                entity.Property(e => e.CrownClassification)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CROWN_CLASSIFICATION");

//                entity.Property(e => e.DoiOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_OWNER_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.GrossNrt)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_NRT");

//                entity.Property(e => e.GrossNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GROSS_NRT_VOLUME");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ObligationTotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OBLIGATION_TOTAL_VALUE");

//                entity.Property(e => e.ObligationTotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OBLIGATION_TOTAL_VOLUME");

//                entity.Property(e => e.ObligationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIGATION_TYPE");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_TYPE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ReportAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_CONDENSATE");

//                entity.Property(e => e.RoyaltyHoliday)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_HOLIDAY");

//                entity.Property(e => e.RoyaltyNrtValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_NRT_VALUE");

//                entity.Property(e => e.RoyaltyNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_NRT_VOLUME");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_OWNER_ID");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_VALUE");

//                entity.Property(e => e.RoyaltyVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_VOLUME");

//                entity.Property(e => e.ShareType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SHARE_TYPE");

//                entity.Property(e => e.SilentPartnerOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER_OWNER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.UnitizationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNITIZATION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_USER_DEFINED1");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<SmallTReservesResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("small_t_reserves_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<SmallTReservesResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("small_t_reserves_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<StageDetailLineItemsArar>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("stage_Detail_Line_Items_ARAR", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasColumnType("date");

//                entity.Property(e => e.Baname)
//                    .HasMaxLength(500)
//                    .HasColumnName("BAName");

//                entity.Property(e => e.BapurchaserId).HasColumnName("BAPurchaserID");

//                entity.Property(e => e.Comment).HasMaxLength(1000);

//                entity.Property(e => e.DeliveryLocation)
//                    .HasMaxLength(500)
//                    .HasColumnName("Delivery Location");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("Facility Code");

//                entity.Property(e => e.Key)
//                    .HasMaxLength(500)
//                    .HasColumnName("key");

//                entity.Property(e => e.LimAutoCount).HasColumnName("LIM_AutoCount");

//                entity.Property(e => e.LineItemMasterFk)
//                    .HasMaxLength(500)
//                    .HasColumnName("LineItemMaster_fk");

//                entity.Property(e => e.LineItemName).HasMaxLength(1000);

//                entity.Property(e => e.ModifiedBy)
//                    .HasMaxLength(300)
//                    .HasColumnName("Modified By");

//                entity.Property(e => e.ModifiedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Modified Date");

//                entity.Property(e => e.OriginLocation)
//                    .HasMaxLength(500)
//                    .HasColumnName("Origin Location");

//                entity.Property(e => e.ProdMonth).HasColumnType("date");

//                entity.Property(e => e.Product).HasMaxLength(500);

//                entity.Property(e => e.ProductionAccountant)
//                    .HasMaxLength(500)
//                    .HasColumnName("Production Accountant");

//                entity.Property(e => e.Timestamp).HasColumnType("date");
//            });

//            modelBuilder.Entity<StageDetailLineItemsArarConvertedPy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("stage_Detail_Line_Items_ARAR_CONVERTED_PY", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasColumnType("date");

//                entity.Property(e => e.Baname)
//                    .HasMaxLength(500)
//                    .HasColumnName("BAName");

//                entity.Property(e => e.BapurchaserId).HasColumnName("BAPurchaserID");

//                entity.Property(e => e.Comment).HasMaxLength(1000);

//                entity.Property(e => e.DeliveryLocation)
//                    .HasMaxLength(500)
//                    .HasColumnName("Delivery Location");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("Facility Code");

//                entity.Property(e => e.Key)
//                    .HasMaxLength(500)
//                    .HasColumnName("key");

//                entity.Property(e => e.LimAutoCount).HasColumnName("LIM_AutoCount");

//                entity.Property(e => e.LineItemMasterFk)
//                    .HasMaxLength(500)
//                    .HasColumnName("LineItemMaster_fk");

//                entity.Property(e => e.LineItemName).HasMaxLength(1000);

//                entity.Property(e => e.ModifiedBy)
//                    .HasMaxLength(300)
//                    .HasColumnName("Modified By");

//                entity.Property(e => e.ModifiedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Modified Date");

//                entity.Property(e => e.OriginLocation)
//                    .HasMaxLength(500)
//                    .HasColumnName("Origin Location");

//                entity.Property(e => e.ProdMonth).HasColumnType("date");

//                entity.Property(e => e.Product).HasMaxLength(500);

//                entity.Property(e => e.ProductionAccountant)
//                    .HasMaxLength(500)
//                    .HasColumnName("Production Accountant");

//                entity.Property(e => e.Timestamp).HasColumnType("date");
//            });

//            modelBuilder.Entity<StagePaSplit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("stage_pa_splits", "Stage_CashReceipts");

//                entity.Property(e => e.AcctMonth).HasMaxLength(10);

//                entity.Property(e => e.Arcontract)
//                    .HasMaxLength(100)
//                    .HasColumnName("ARContract");

//                entity.Property(e => e.ControlGroup).HasMaxLength(100);

//                entity.Property(e => e.LastUpdateDate).HasColumnName("last_update_date");

//                entity.Property(e => e.Owner).HasMaxLength(100);

//                entity.Property(e => e.Pa)
//                    .HasMaxLength(100)
//                    .HasColumnName("PA");

//                entity.Property(e => e.ProdMonth).HasMaxLength(10);
//            });

//            modelBuilder.Entity<StrMonthList>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("StrMonthList", "dbo");

//                entity.Property(e => e.MonthNum)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("month_num");
//            });

//            modelBuilder.Entity<TActionKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_action_keys", "openinvoice");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");
//            });

//            modelBuilder.Entity<TAdmin>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("T_ADMIN", "stage_csx_csland");

//                entity.Property(e => e.AiStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AI_STATUS");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.CodeInUse)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("CODE_IN_USE");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Reserved)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("RESERVED");
//            });

//            modelBuilder.Entity<TAfeCostEstimatesAfenav>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afe_cost_estimates_afenav", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<TAfeCostEstimatesQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afe_cost_estimates_qbyte", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MajorGrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("major_grs_net_flag");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<TAfeCostEstimatesSiteview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afe_cost_estimates_siteview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<TAfeCostEstimatesWellview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afe_cost_estimates_wellview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<TAfenavAfe>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_afe", "stage");

//                entity.Property(e => e.AccrualDoc)
//                    .HasMaxLength(50)
//                    .HasColumnName("ACCRUAL_DOC");

//                entity.Property(e => e.ActualDoc)
//                    .HasMaxLength(50)
//                    .HasColumnName("ACTUAL_DOC");

//                entity.Property(e => e.Afecashcall).HasColumnName("AFECASHCALL");

//                entity.Property(e => e.Afechainid).HasColumnName("AFECHAINID");

//                entity.Property(e => e.Afecorrnumber).HasColumnName("AFECORRNUMBER");

//                entity.Property(e => e.Afeid).HasColumnName("AFEID");

//                entity.Property(e => e.AfelinkTrackingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("AFELINK_TRACKING_ID");

//                entity.Property(e => e.AfenumberDoc)
//                    .HasMaxLength(50)
//                    .HasColumnName("AFENUMBER_DOC");

//                entity.Property(e => e.Afeoperatingpartner).HasColumnName("AFEOPERATINGPARTNER");

//                entity.Property(e => e.Afereleasedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("AFERELEASEDATE");

//                entity.Property(e => e.Aferevnumber).HasColumnName("AFEREVNUMBER");

//                entity.Property(e => e.Afesupersededdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("AFESUPERSEDEDDATE");

//                entity.Property(e => e.Afesupnumber).HasColumnName("AFESUPNUMBER");

//                entity.Property(e => e.ApprovedGrossEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("APPROVED_GROSS_ESTIMATE");

//                entity.Property(e => e.ApprovedNetEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("APPROVED_NET_ESTIMATE");

//                entity.Property(e => e.BaseCreationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("BASE_CREATION_DATE");

//                entity.Property(e => e.BudgetManager)
//                    .HasMaxLength(50)
//                    .HasColumnName("BUDGET_MANAGER");

//                entity.Property(e => e.BudgetYear).HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.ChainGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHAIN_GUID");

//                entity.Property(e => e.ChainVersion).HasColumnName("CHAIN_VERSION");

//                entity.Property(e => e.Closed).HasColumnName("CLOSED");

//                entity.Property(e => e.ClosedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CLOSED_DATE");

//                entity.Property(e => e.ClosedReason)
//                    .HasMaxLength(2000)
//                    .HasColumnName("CLOSED_REASON");

//                entity.Property(e => e.ClosedUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("CLOSED_USER");

//                entity.Property(e => e.Completed)
//                    .HasColumnType("datetime")
//                    .HasColumnName("COMPLETED");

//                entity.Property(e => e.CopyOfAfeDoc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of AFE_DOC");

//                entity.Property(e => e.CopyOfAfeGuid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of AFE_GUID");

//                entity.Property(e => e.CopyOfAferevsupmode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of AFEREVSUPMODE");

//                entity.Property(e => e.CopyOfAfestatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of AFESTATUS");

//                entity.Property(e => e.CopyOfExternalId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of EXTERNAL_ID");

//                entity.Property(e => e.CopyOfNextApprovingPositions)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of NEXT_APPROVING_POSITIONS");

//                entity.Property(e => e.CopyOfNextReviewingPosition)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of NEXT_REVIEWING_POSITION");

//                entity.Property(e => e.CopyOfSupersededAfestatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of SUPERSEDED_AFESTATUS");

//                entity.Property(e => e.CorrNumber).HasColumnName("CORR_NUMBER");

//                entity.Property(e => e.CreationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATION_DATE");

//                entity.Property(e => e.Creator)
//                    .HasMaxLength(50)
//                    .HasColumnName("CREATOR");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("CURRENCY_CODE");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(40)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("DOCUMENT_ID");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("END_DATE");

//                entity.Property(e => e.EstimateConversionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ESTIMATE_CONVERSION_DATE");

//                entity.Property(e => e.ExternalJustification)
//                    .HasMaxLength(4000)
//                    .HasColumnName("EXTERNAL_JUSTIFICATION");

//                entity.Property(e => e.Fasttrack).HasColumnName("FASTTRACK");

//                entity.Property(e => e.FieldcostDoc)
//                    .HasMaxLength(50)
//                    .HasColumnName("FIELDCOST_DOC");

//                entity.Property(e => e.FullApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FULL_APPROVAL_DATE");

//                entity.Property(e => e.Hasexternalapproval).HasColumnName("HASEXTERNALAPPROVAL");

//                entity.Property(e => e.InternalApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INTERNAL_APPROVAL_DATE");

//                entity.Property(e => e.InternalJustification)
//                    .HasMaxLength(4000)
//                    .HasColumnName("INTERNAL_JUSTIFICATION");

//                entity.Property(e => e.Isrevised).HasColumnName("ISREVISED");

//                entity.Property(e => e.Issupplemented).HasColumnName("ISSUPPLEMENTED");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser).HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LegacyAfeid).HasColumnName("LEGACY_AFEID");

//                entity.Property(e => e.LegacyChainid).HasColumnName("LEGACY_CHAINID");

//                entity.Property(e => e.NextApprovingPositions)
//                    .HasMaxLength(4000)
//                    .HasColumnName("NEXT_APPROVING_POSITIONS");

//                entity.Property(e => e.NextPosition).HasColumnName("NEXT_POSITION");

//                entity.Property(e => e.NextReviewingPositions)
//                    .HasMaxLength(4000)
//                    .HasColumnName("NEXT_REVIEWING_POSITIONS");

//                entity.Property(e => e.OpNotice).HasColumnName("OP_NOTICE");

//                entity.Property(e => e.OperatingCompany)
//                    .HasMaxLength(50)
//                    .HasColumnName("OPERATING_COMPANY");

//                entity.Property(e => e.OurWi)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("OUR_WI");

//                entity.Property(e => e.OutsideAfenumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("OUTSIDE_AFENUMBER");

//                entity.Property(e => e.Owner)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWNER");

//                entity.Property(e => e.ParentCompany)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_COMPANY");

//                entity.Property(e => e.ParentRtd)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_RTD");

//                entity.Property(e => e.ReleaseComment)
//                    .HasMaxLength(4000)
//                    .HasColumnName("RELEASE_COMMENT");

//                entity.Property(e => e.ReleaseUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("RELEASE_USER");

//                entity.Property(e => e.ReleasedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RELEASED_DATE");

//                entity.Property(e => e.RequiredByDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("REQUIRED_BY_DATE");

//                entity.Property(e => e.RevNumber).HasColumnName("REV_NUMBER");

//                entity.Property(e => e.RevSupMode)
//                    .HasMaxLength(1)
//                    .HasColumnName("REV_SUP_MODE");

//                entity.Property(e => e.ReviewCompletedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("REVIEW_COMPLETED_DATE");

//                entity.Property(e => e.Revision).HasColumnName("REVISION");

//                entity.Property(e => e.RouteForReviewDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROUTE_FOR_REVIEW_DATE");

//                entity.Property(e => e.RoutedComment)
//                    .HasMaxLength(4000)
//                    .HasColumnName("ROUTED_COMMENT");

//                entity.Property(e => e.RoutedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROUTED_DATE");

//                entity.Property(e => e.RoutedUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("ROUTED_USER");

//                entity.Property(e => e.SilentPartnerMode)
//                    .HasMaxLength(50)
//                    .HasColumnName("SILENT_PARTNER_MODE");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("START_DATE");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("STATUS");

//                entity.Property(e => e.StatusDesc)
//                    .HasMaxLength(50)
//                    .HasColumnName("STATUS_DESC");

//                entity.Property(e => e.SupNumber).HasColumnName("SUP_NUMBER");

//                entity.Property(e => e.SupersededDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SUPERSEDED_DATE");

//                entity.Property(e => e.SupersededStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("SUPERSEDED_STATUS");

//                entity.Property(e => e.SupersededStatusDesc)
//                    .HasMaxLength(50)
//                    .HasColumnName("SUPERSEDED_STATUS_DESC");

//                entity.Property(e => e.SupplementalGrossEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("SUPPLEMENTAL_GROSS_ESTIMATE");

//                entity.Property(e => e.SupplementalNetEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("SUPPLEMENTAL_NET_ESTIMATE");

//                entity.Property(e => e.TotalGrossEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("TOTAL_GROSS_ESTIMATE");

//                entity.Property(e => e.TotalNetEstimate)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("TOTAL_NET_ESTIMATE");

//                entity.Property(e => e.Version).HasColumnName("VERSION");

//                entity.Property(e => e.VersionString)
//                    .HasMaxLength(10)
//                    .HasColumnName("VERSION_STRING");

//                entity.Property(e => e.VnCostType)
//                    .HasMaxLength(50)
//                    .HasColumnName("VN_COST_TYPE");

//                entity.Property(e => e.VnEntity)
//                    .HasMaxLength(100)
//                    .HasColumnName("VN_ENTITY");

//                entity.Property(e => e.VnPlan)
//                    .HasMaxLength(100)
//                    .HasColumnName("VN_PLAN");

//                entity.Property(e => e.VnRescat)
//                    .HasMaxLength(100)
//                    .HasColumnName("VN_RESCAT");

//                entity.Property(e => e.VnScenario)
//                    .HasMaxLength(100)
//                    .HasColumnName("VN_SCENARIO");

//                entity.Property(e => e.WellListTitle)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_LIST_TITLE");

//                entity.Property(e => e.WellReportingIdentifier)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_REPORTING_IDENTIFIER");
//            });

//            modelBuilder.Entity<TAfenavAfeCustom>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_afe_custom", "stage");

//                entity.Property(e => e.ARProjectType)
//                    .HasMaxLength(50)
//                    .HasColumnName("A_R_PROJECT_TYPE");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .HasColumnName("AFE_TYPE");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .HasColumnName("AREA");

//                entity.Property(e => e.BudgetClass)
//                    .HasMaxLength(50)
//                    .HasColumnName("BUDGET_CLASS");

//                entity.Property(e => e.BudgetLine)
//                    .HasMaxLength(50)
//                    .HasColumnName("BUDGET_LINE");

//                entity.Property(e => e.BudgetTiming)
//                    .HasMaxLength(50)
//                    .HasColumnName("BUDGET_TIMING");

//                entity.Property(e => e.Budgeted).HasColumnName("BUDGETED");

//                entity.Property(e => e.Classification)
//                    .HasMaxLength(50)
//                    .HasColumnName("CLASSIFICATION");

//                entity.Property(e => e.CopyOfARProjectType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of A_R_PROJECT_TYPE");

//                entity.Property(e => e.CopyOfBudgetClass)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of BUDGET_CLASS");

//                entity.Property(e => e.CopyOfBudgetLine)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of BUDGET_LINE");

//                entity.Property(e => e.CopyOfBudgetTiming)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of BUDGET_TIMING");

//                entity.Property(e => e.CopyOfClassification)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of CLASSIFICATION");

//                entity.Property(e => e.CopyOfCostCenter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of COST_CENTER");

//                entity.Property(e => e.CopyOfDocumentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of DOCUMENT_ID");

//                entity.Property(e => e.CopyOfETiPipelineClassification)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of E_TI_PIPELINE_CLASSIFICATION");

//                entity.Property(e => e.CopyOfExcludeFromExport)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of EXCLUDE_FROM_EXPORT");

//                entity.Property(e => e.CopyOfGeneralCombo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of GENERAL_COMBO");

//                entity.Property(e => e.CopyOfLandPurchaser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of LAND_PURCHASER");

//                entity.Property(e => e.CopyOfLandVendor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of LAND_VENDOR");

//                entity.Property(e => e.CopyOfProvince)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of PROVINCE");

//                entity.Property(e => e.CopyOfRaisedOnBehalfOf)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of RAISED_ON_BEHALF_OF");

//                entity.Property(e => e.CopyOfTaxDesignation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of TAX_DESIGNATION");

//                entity.Property(e => e.CopyOfUnitName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of UNIT_NAME");

//                entity.Property(e => e.CopyOfUnitOrNonUnit)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of UNIT_OR_NON_UNIT");

//                entity.Property(e => e.CopyOfWellName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of WELL_NAME");

//                entity.Property(e => e.CostCenter)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_CENTER");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("DOCUMENT_ID");

//                entity.Property(e => e.ETiPipelineClassification)
//                    .HasMaxLength(50)
//                    .HasColumnName("E_TI_PIPELINE_CLASSIFICATION");

//                entity.Property(e => e.ExcludeFromExport)
//                    .HasMaxLength(50)
//                    .HasColumnName("EXCLUDE_FROM_EXPORT");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .HasColumnName("FACILITY");

//                entity.Property(e => e.FormLetterP1)
//                    .HasMaxLength(2000)
//                    .HasColumnName("FORM_LETTER_P1");

//                entity.Property(e => e.FormSupplementP1)
//                    .HasMaxLength(2000)
//                    .HasColumnName("FORM_SUPPLEMENT_P1");

//                entity.Property(e => e.GeneralCombo)
//                    .HasMaxLength(50)
//                    .HasColumnName("GENERAL_COMBO");

//                entity.Property(e => e.LandClosingDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAND_CLOSING_DATE");

//                entity.Property(e => e.LandEffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAND_EFFECTIVE_DATE");

//                entity.Property(e => e.LandPurchaser)
//                    .HasMaxLength(30)
//                    .HasColumnName("LAND_PURCHASER");

//                entity.Property(e => e.LandVendor)
//                    .HasMaxLength(30)
//                    .HasColumnName("LAND_VENDOR");

//                entity.Property(e => e.Operated)
//                    .HasMaxLength(50)
//                    .HasColumnName("OPERATED");

//                entity.Property(e => e.OwaFlag)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWA_FLAG");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.RaisedOnBehalfOf)
//                    .HasMaxLength(50)
//                    .HasColumnName("RAISED_ON_BEHALF_OF");

//                entity.Property(e => e.TaxDesignation)
//                    .HasMaxLength(50)
//                    .HasColumnName("TAX_DESIGNATION");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(50)
//                    .HasColumnName("UNIT_NAME");

//                entity.Property(e => e.UnitOrNonUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("UNIT_OR_NON_UNIT");

//                entity.Property(e => e.Version).HasColumnName("VERSION");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(200)
//                    .HasColumnName("WELL_NAME");
//            });

//            modelBuilder.Entity<TAfenavAfenumber>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_afenumber", "stage");

//                entity.Property(e => e.Afenumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afenumber");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("document_id");

//                entity.Property(e => e.Version).HasColumnName("version");
//            });

//            modelBuilder.Entity<TAfenavFieldcostAmount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_fieldcost_amounts", "stage");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(50)
//                    .HasColumnName("ACCOUNT");

//                entity.Property(e => e.AmountDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("AMOUNT_DATE");

//                entity.Property(e => e.AmountLocked).HasColumnName("AMOUNT_LOCKED");

//                entity.Property(e => e.CalcGross).HasColumnName("CALC_GROSS");

//                entity.Property(e => e.CalcNet).HasColumnName("CALC_NET");

//                entity.Property(e => e.CopyOfAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of ACCOUNT");

//                entity.Property(e => e.CopyOfDocumentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of DOCUMENT_ID");

//                entity.Property(e => e.CopyOfListitemId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Copy of LISTITEM_ID");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("DOCUMENT_ID");

//                entity.Property(e => e.GrossAmount)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("GROSS_AMOUNT");

//                entity.Property(e => e.ListitemId)
//                    .HasMaxLength(50)
//                    .HasColumnName("LISTITEM_ID");

//                entity.Property(e => e.NetAmount)
//                    .HasColumnType("numeric(28, 14)")
//                    .HasColumnName("NET_AMOUNT");

//                entity.Property(e => e.Phase)
//                    .HasMaxLength(50)
//                    .HasColumnName("PHASE");

//                entity.Property(e => e.Version).HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<TAfenavLutAfeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_lut_afe_type", "stage");

//                entity.Property(e => e.Active).HasColumnName("ACTIVE");

//                entity.Property(e => e.CodeNum).HasColumnName("CODE_NUM");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("DOCUMENT_ID");

//                entity.Property(e => e.OtherValue1)
//                    .HasMaxLength(50)
//                    .HasColumnName("OTHER_VALUE1");

//                entity.Property(e => e.OtherValue2)
//                    .HasMaxLength(50)
//                    .HasColumnName("OTHER_VALUE2");

//                entity.Property(e => e.Value)
//                    .HasMaxLength(50)
//                    .HasColumnName("VALUE");

//                entity.Property(e => e.Version).HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<TAfenavPartner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_afenav_partners", "stage");

//                entity.Property(e => e.Active).HasColumnName("ACTIVE");

//                entity.Property(e => e.Affiliate).HasColumnName("AFFILIATE");

//                entity.Property(e => e.Areacode)
//                    .HasMaxLength(100)
//                    .HasColumnName("AREACODE");

//                entity.Property(e => e.City)
//                    .HasMaxLength(100)
//                    .HasColumnName("CITY");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(50)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.Comname)
//                    .HasMaxLength(500)
//                    .HasColumnName("COMNAME");

//                entity.Property(e => e.Comnameshort)
//                    .HasMaxLength(100)
//                    .HasColumnName("COMNAMESHORT");

//                entity.Property(e => e.Contact)
//                    .HasMaxLength(100)
//                    .HasColumnName("CONTACT");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(100)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.DocumentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("DOCUMENT_ID");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(100)
//                    .HasColumnName("EMAIL");

//                entity.Property(e => e.Fax)
//                    .HasMaxLength(100)
//                    .HasColumnName("FAX");

//                entity.Property(e => e.Partnerid).HasColumnName("PARTNERID");

//                entity.Property(e => e.Phone)
//                    .HasMaxLength(100)
//                    .HasColumnName("PHONE");

//                entity.Property(e => e.PostcodeZip)
//                    .HasMaxLength(100)
//                    .HasColumnName("POSTCODE_ZIP");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(100)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Straddress)
//                    .HasMaxLength(200)
//                    .HasColumnName("STRADDRESS");

//                entity.Property(e => e.Version).HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<TApUser>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ap_users", "openinvoice");

//                entity.Property(e => e.ApUser)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ap_user");

//                entity.Property(e => e.Id)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("id");

//                entity.Property(e => e.VendorEndLetter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_end_letter");

//                entity.Property(e => e.VendorStartLetter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_start_letter");
//            });

//            modelBuilder.Entity<TArea>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("T_AREA", "stage_csx_csland");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUMBER");

//                entity.Property(e => e.AiStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AI_STATUS");

//                entity.Property(e => e.BrCorner)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BR_CORNER");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.CodeInUse)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("CODE_IN_USE");

//                entity.Property(e => e.CostCenter)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTER");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DIVISION")
//                    .IsFixedLength();

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.PlatScale)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PLAT_SCALE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE")
//                    .IsFixedLength();

//                entity.Property(e => e.Reserved)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("RESERVED");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.TlCorner)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TL_CORNER");
//            });

//            modelBuilder.Entity<TAvocetOntreamDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_avocet_ontream_dates", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ONSTREAM_DATE");

//                entity.Property(e => e.OnstreamYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ONSTREAM_YEAR");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_ID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TBasedeclineCodeLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_code_lookup", "stage_valnav");

//                entity.Property(e => e.CodeType)
//                    .HasMaxLength(50)
//                    .HasColumnName("CODE_TYPE");

//                entity.Property(e => e.CodeValue).HasColumnName("CODE_VALUE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");
//            });

//            modelBuilder.Entity<TBasedeclineCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_custom_field_def", "stage_valnav");

//                entity.Property(e => e.DefType).HasColumnName("DEF_TYPE");

//                entity.Property(e => e.DefaultListValue)
//                    .HasMaxLength(4000)
//                    .HasColumnName("DEFAULT_LIST_VALUE");

//                entity.Property(e => e.EnforceValues).HasColumnName("ENFORCE_VALUES");

//                entity.Property(e => e.Format)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORMAT");

//                entity.Property(e => e.ImperialUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("IMPERIAL_UNIT");

//                entity.Property(e => e.MetricUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("METRIC_UNIT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.Precision).HasColumnName("PRECISION");

//                entity.Property(e => e.SecurityEnabled).HasColumnName("SECURITY_ENABLED");

//                entity.Property(e => e.UsageType).HasColumnName("USAGE_TYPE");
//            });

//            modelBuilder.Entity<TBasedeclineEntCustomField>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_ent_custom_field", "stage_valnav");

//                entity.Property(e => e.DateValue).HasColumnName("DATE_VALUE");

//                entity.Property(e => e.NumericValue).HasColumnName("NUMERIC_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(50)
//                    .HasColumnName("STRING_VALUE");

//                entity.Property(e => e.UserFieldId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_FIELD_ID");
//            });

//            modelBuilder.Entity<TBasedeclineEntDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_ent_detail", "stage_valnav");

//                entity.Property(e => e.BottomholeLatitude).HasColumnName("BOTTOMHOLE_LATITUDE");

//                entity.Property(e => e.BottomholeLongitude).HasColumnName("BOTTOMHOLE_LONGITUDE");

//                entity.Property(e => e.ChangeReasonDetailId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_DETAIL_ID");

//                entity.Property(e => e.ChangeReasonEntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_ENTITY_ID");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.CrossPlotDistribution).HasColumnName("CROSS_PLOT_DISTRIBUTION");

//                entity.Property(e => e.CrossPlotIpCalc)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_IP_CALC");

//                entity.Property(e => e.CrossPlotNormlzBase)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_BASE");

//                entity.Property(e => e.CrossPlotNormlzEnabled).HasColumnName("CROSS_PLOT_NORMLZ_ENABLED");

//                entity.Property(e => e.CrossPlotNormlzField)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_FIELD");

//                entity.Property(e => e.CrossPlotNumMonths).HasColumnName("CROSS_PLOT_NUM_MONTHS");

//                entity.Property(e => e.CrossPlotProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_PRODUCT_ID");

//                entity.Property(e => e.CrossPlotProductType).HasColumnName("CROSS_PLOT_PRODUCT_TYPE");

//                entity.Property(e => e.CrossPlotUseInitRate).HasColumnName("CROSS_PLOT_USE_INIT_RATE");

//                entity.Property(e => e.CurrentMonth).HasColumnName("CURRENT_MONTH");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(100)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.FactorId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FACTOR_ID");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(100)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FieldCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("FIELD_CODE");

//                entity.Property(e => e.FirstInjMonth).HasColumnName("FIRST_INJ_MONTH");

//                entity.Property(e => e.FirstMonthWithDaily).HasColumnName("FIRST_MONTH_WITH_DAILY");

//                entity.Property(e => e.FirstProdMonth).HasColumnName("FIRST_PROD_MONTH");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.IncludeInReserves).HasColumnName("INCLUDE_IN_RESERVES");

//                entity.Property(e => e.IsGrouped).HasColumnName("IS_GROUPED");

//                entity.Property(e => e.LastInjMonth).HasColumnName("LAST_INJ_MONTH");

//                entity.Property(e => e.LastMonthWithDaily).HasColumnName("LAST_MONTH_WITH_DAILY");

//                entity.Property(e => e.LastProdMonth).HasColumnName("LAST_PROD_MONTH");

//                entity.Property(e => e.LastUpdateDate).HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.License)
//                    .HasMaxLength(20)
//                    .HasColumnName("LICENSE");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(100)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.OilDensity).HasColumnName("OIL_DENSITY");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(100)
//                    .HasColumnName("POOL");

//                entity.Property(e => e.PoolCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("POOL_CODE");

//                entity.Property(e => e.PrimaryApi)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRIMARY_API");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.ProductListId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_LIST_ID");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReviewState).HasColumnName("REVIEW_STATE");

//                entity.Property(e => e.RigReleaseDate).HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.RootGroupId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ROOT_GROUP_ID");

//                entity.Property(e => e.SuppressDefaultCalcSetup).HasColumnName("SUPPRESS_DEFAULT_CALC_SETUP");

//                entity.Property(e => e.SurfaceLatitude).HasColumnName("SURFACE_LATITUDE");

//                entity.Property(e => e.SurfaceLongitude).HasColumnName("SURFACE_LONGITUDE");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIT");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellProfileType).HasColumnName("WELL_PROFILE_TYPE");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(20)
//                    .HasColumnName("WELL_TYPE");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(50)
//                    .HasColumnName("ZONE");
//            });

//            modelBuilder.Entity<TBasedeclineEntReservesCache>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_ent_reserves_cache", "stage_valnav");

//                entity.Property(e => e.ActualForecastStart).HasColumnName("ACTUAL_FORECAST_START");

//                entity.Property(e => e.CachedOnTimeType).HasColumnName("CACHED_ON_TIME_TYPE");

//                entity.Property(e => e.EnergyContent).HasColumnName("ENERGY_CONTENT");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastStartDate).HasColumnName("FORECAST_START_DATE");

//                entity.Property(e => e.FuelLoss).HasColumnName("FUEL_LOSS");

//                entity.Property(e => e.HasVolumetrics).HasColumnName("HAS_VOLUMETRICS");

//                entity.Property(e => e.OnTime).HasColumnName("ON_TIME");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ProcessLoss).HasColumnName("PROCESS_LOSS");

//                entity.Property(e => e.RemainingSalesGas).HasColumnName("REMAINING_SALES_GAS");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.Rgip).HasColumnName("RGIP");

//                entity.Property(e => e.SurfaceLoss).HasColumnName("SURFACE_LOSS");

//                entity.Property(e => e.TechnicalWi).HasColumnName("TECHNICAL_WI");

//                entity.Property(e => e.TotalGasLoss).HasColumnName("TOTAL_GAS_LOSS");
//            });

//            modelBuilder.Entity<TBasedeclineEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_entity", "stage_valnav");

//                entity.Property(e => e.EntityType).HasColumnName("ENTITY_TYPE");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("FORMATTED_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.SortingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("SORTING_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<TBasedeclineFiscReservesProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_fisc_reserves_product", "stage_valnav");

//                entity.Property(e => e.AssociatedProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("ASSOCIATED_PRODUCT");

//                entity.Property(e => e.IncludeInRecon).HasColumnName("INCLUDE_IN_RECON");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.QueryNameFragment)
//                    .HasMaxLength(50)
//                    .HasColumnName("QUERY_NAME_FRAGMENT");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");
//            });

//            modelBuilder.Entity<TBasedeclineFiscScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_fisc_scenario", "stage_valnav");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastChangeDate).HasColumnName("LAST_CHANGE_DATE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(205)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OverridePlanParameters).HasColumnName("OVERRIDE_PLAN_PARAMETERS");

//                entity.Property(e => e.OwnedBy)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWNED_BY");

//                entity.Property(e => e.ScenarioType).HasColumnName("SCENARIO_TYPE");
//            });

//            modelBuilder.Entity<TBasedeclineFiscScenarioParam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_fisc_scenario_params", "stage_valnav");

//                entity.Property(e => e.AllowNegWedge).HasColumnName("ALLOW_NEG_WEDGE");

//                entity.Property(e => e.CapActEconCalcOpt).HasColumnName("CAP_ACT_ECON_CALC_OPT");

//                entity.Property(e => e.CapCostFactor).HasColumnName("CAP_COST_FACTOR");

//                entity.Property(e => e.CapCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CAP_COST_TEMPLATE_ID");

//                entity.Property(e => e.CooOverride).HasColumnName("COO_OVERRIDE");

//                entity.Property(e => e.CosOverride).HasColumnName("COS_OVERRIDE");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EconLimitCalcType).HasColumnName("ECON_LIMIT_CALC_TYPE");

//                entity.Property(e => e.EconLimitDelay).HasColumnName("ECON_LIMIT_DELAY");

//                entity.Property(e => e.EconLimitDiscount).HasColumnName("ECON_LIMIT_DISCOUNT");

//                entity.Property(e => e.EnableAbandonment).HasColumnName("ENABLE_ABANDONMENT");

//                entity.Property(e => e.EnableEconLimit).HasColumnName("ENABLE_ECON_LIMIT");

//                entity.Property(e => e.EnableSaskSurcharge).HasColumnName("ENABLE_SASK_SURCHARGE");

//                entity.Property(e => e.EnableSharedCalculation).HasColumnName("ENABLE_SHARED_CALCULATION");

//                entity.Property(e => e.EscalatePrice).HasColumnName("ESCALATE_PRICE");

//                entity.Property(e => e.InflationOverride).HasColumnName("INFLATION_OVERRIDE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostFactor).HasColumnName("OP_COST_FACTOR");

//                entity.Property(e => e.OpCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OP_COST_TEMPLATE_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_ID");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.PriceFactor).HasColumnName("PRICE_FACTOR");

//                entity.Property(e => e.PriceTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_TEMPLATE_ID");

//                entity.Property(e => e.ProductionFactor).HasColumnName("PRODUCTION_FACTOR");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.UseOverlappingHistory).HasColumnName("USE_OVERLAPPING_HISTORY");
//            });

//            modelBuilder.Entity<TBasedeclineResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<TBasedeclineResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<TBasedeclineResultsBtaxInterm>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_results_btax_interm", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<TBasedeclineResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<TBasedeclineResultsBtaxProductInterm>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_results_btax_product_interm", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<TBasedeclineResultsLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_basedecline_results_lookup", "stage_valnav");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.ResultType).HasColumnName("RESULT_TYPE");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SCENARIO_ID");
//            });

//            modelBuilder.Entity<TBudgetCodeLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_code_lookup", "stage_valnav");

//                entity.Property(e => e.CodeType)
//                    .HasMaxLength(50)
//                    .HasColumnName("CODE_TYPE");

//                entity.Property(e => e.CodeValue).HasColumnName("CODE_VALUE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");
//            });

//            modelBuilder.Entity<TBudgetCompany>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_company", "stage_valnav");

//                entity.Property(e => e.DefaultWorkingInterest).HasColumnName("DEFAULT_WORKING_INTEREST");

//                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.UseInNewCaseInterests).HasColumnName("USE_IN_NEW_CASE_INTERESTS");
//            });

//            modelBuilder.Entity<TBudgetCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_custom_field_def", "stage_valnav");

//                entity.Property(e => e.DefType).HasColumnName("DEF_TYPE");

//                entity.Property(e => e.DefaultListValue)
//                    .HasMaxLength(4000)
//                    .HasColumnName("DEFAULT_LIST_VALUE");

//                entity.Property(e => e.EnforceValues).HasColumnName("ENFORCE_VALUES");

//                entity.Property(e => e.Format)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORMAT");

//                entity.Property(e => e.ImperialUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("IMPERIAL_UNIT");

//                entity.Property(e => e.MetricUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("METRIC_UNIT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.Precision).HasColumnName("PRECISION");

//                entity.Property(e => e.SecurityEnabled).HasColumnName("SECURITY_ENABLED");

//                entity.Property(e => e.UsageType).HasColumnName("USAGE_TYPE");
//            });

//            modelBuilder.Entity<TBudgetEntCapitalActual>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_capital_actual", "stage_valnav");

//                entity.Property(e => e.AfeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("AFE_ID");

//                entity.Property(e => e.CostDate).HasColumnName("COST_DATE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Value).HasColumnName("VALUE");
//            });

//            modelBuilder.Entity<TBudgetEntCapitalEstimate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_capital_estimate", "stage_valnav");

//                entity.Property(e => e.AfeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("AFE_ID");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(100)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.ApprovedEstimate).HasColumnName("APPROVED_ESTIMATE");

//                entity.Property(e => e.CostType)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_TYPE");

//                entity.Property(e => e.EndDate).HasColumnName("END_DATE");

//                entity.Property(e => e.IncurredTotal).HasColumnName("INCURRED_TOTAL");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.RevisedEstimate).HasColumnName("REVISED_ESTIMATE");
//            });

//            modelBuilder.Entity<TBudgetEntCompanyInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_company_interest", "stage_valnav");

//                entity.Property(e => e.CompanyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COMPANY_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntCustomField>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_custom_field", "stage_valnav");

//                entity.Property(e => e.DateValue).HasColumnName("DATE_VALUE");

//                entity.Property(e => e.NumericValue).HasColumnName("NUMERIC_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(50)
//                    .HasColumnName("STRING_VALUE");

//                entity.Property(e => e.UserFieldId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_FIELD_ID");
//            });

//            modelBuilder.Entity<TBudgetEntDecline>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_decline", "stage_valnav");

//                entity.Property(e => e.FitEndDate).HasColumnName("FIT_END_DATE");

//                entity.Property(e => e.FitError).HasColumnName("FIT_ERROR");

//                entity.Property(e => e.FitExponent).HasColumnName("FIT_EXPONENT");

//                entity.Property(e => e.FitFinalRate).HasColumnName("FIT_FINAL_RATE");

//                entity.Property(e => e.FitInitialRate).HasColumnName("FIT_INITIAL_RATE");

//                entity.Property(e => e.FitInitialSlope).HasColumnName("FIT_INITIAL_SLOPE");

//                entity.Property(e => e.FitMethod).HasColumnName("FIT_METHOD");

//                entity.Property(e => e.FitStartDate).HasColumnName("FIT_START_DATE");

//                entity.Property(e => e.IncEndCumPercent).HasColumnName("INC_END_CUM_PERCENT");

//                entity.Property(e => e.IncEndCumType).HasColumnName("INC_END_CUM_TYPE");

//                entity.Property(e => e.IncEndCumValue).HasColumnName("INC_END_CUM_VALUE");

//                entity.Property(e => e.IncFinalRatePercent).HasColumnName("INC_FINAL_RATE_PERCENT");

//                entity.Property(e => e.IncFinalRateType).HasColumnName("INC_FINAL_RATE_TYPE");

//                entity.Property(e => e.IncFinalRateValue).HasColumnName("INC_FINAL_RATE_VALUE");

//                entity.Property(e => e.IncInitialRatePercent).HasColumnName("INC_INITIAL_RATE_PERCENT");

//                entity.Property(e => e.IncInitialRateType).HasColumnName("INC_INITIAL_RATE_TYPE");

//                entity.Property(e => e.IncInitialRateValue).HasColumnName("INC_INITIAL_RATE_VALUE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.SlopeType).HasColumnName("SLOPE_TYPE");
//            });

//            modelBuilder.Entity<TBudgetEntDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_detail", "stage_valnav");

//                entity.Property(e => e.BottomholeLatitude).HasColumnName("BOTTOMHOLE_LATITUDE");

//                entity.Property(e => e.BottomholeLongitude).HasColumnName("BOTTOMHOLE_LONGITUDE");

//                entity.Property(e => e.ChangeReasonDetailId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_DETAIL_ID");

//                entity.Property(e => e.ChangeReasonEntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_ENTITY_ID");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.CrossPlotDistribution).HasColumnName("CROSS_PLOT_DISTRIBUTION");

//                entity.Property(e => e.CrossPlotIpCalc)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_IP_CALC");

//                entity.Property(e => e.CrossPlotNormlzBase)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_BASE");

//                entity.Property(e => e.CrossPlotNormlzEnabled).HasColumnName("CROSS_PLOT_NORMLZ_ENABLED");

//                entity.Property(e => e.CrossPlotNormlzField)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_FIELD");

//                entity.Property(e => e.CrossPlotNumMonths).HasColumnName("CROSS_PLOT_NUM_MONTHS");

//                entity.Property(e => e.CrossPlotProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_PRODUCT_ID");

//                entity.Property(e => e.CrossPlotProductType).HasColumnName("CROSS_PLOT_PRODUCT_TYPE");

//                entity.Property(e => e.CrossPlotUseInitRate).HasColumnName("CROSS_PLOT_USE_INIT_RATE");

//                entity.Property(e => e.CurrentMonth).HasColumnName("CURRENT_MONTH");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(100)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.FactorId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FACTOR_ID");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(100)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FieldCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("FIELD_CODE");

//                entity.Property(e => e.FirstInjMonth).HasColumnName("FIRST_INJ_MONTH");

//                entity.Property(e => e.FirstMonthWithDaily).HasColumnName("FIRST_MONTH_WITH_DAILY");

//                entity.Property(e => e.FirstProdMonth).HasColumnName("FIRST_PROD_MONTH");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.IncludeInReserves).HasColumnName("INCLUDE_IN_RESERVES");

//                entity.Property(e => e.IsGrouped).HasColumnName("IS_GROUPED");

//                entity.Property(e => e.LastInjMonth).HasColumnName("LAST_INJ_MONTH");

//                entity.Property(e => e.LastMonthWithDaily).HasColumnName("LAST_MONTH_WITH_DAILY");

//                entity.Property(e => e.LastProdMonth).HasColumnName("LAST_PROD_MONTH");

//                entity.Property(e => e.LastUpdateDate).HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.License)
//                    .HasMaxLength(20)
//                    .HasColumnName("LICENSE");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(100)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.OilDensity).HasColumnName("OIL_DENSITY");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(100)
//                    .HasColumnName("POOL");

//                entity.Property(e => e.PoolCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("POOL_CODE");

//                entity.Property(e => e.PrimaryApi)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRIMARY_API");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.ProductListId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_LIST_ID");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReviewState).HasColumnName("REVIEW_STATE");

//                entity.Property(e => e.RigReleaseDate).HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.RootGroupId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ROOT_GROUP_ID");

//                entity.Property(e => e.SuppressDefaultCalcSetup).HasColumnName("SUPPRESS_DEFAULT_CALC_SETUP");

//                entity.Property(e => e.SurfaceLatitude).HasColumnName("SURFACE_LATITUDE");

//                entity.Property(e => e.SurfaceLongitude).HasColumnName("SURFACE_LONGITUDE");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIT");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellProfileType).HasColumnName("WELL_PROFILE_TYPE");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(20)
//                    .HasColumnName("WELL_TYPE");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(50)
//                    .HasColumnName("ZONE");
//            });

//            modelBuilder.Entity<TBudgetEntForecastInput>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_forecast_input", "stage_valnav");

//                entity.Property(e => e.ConstantForecastType).HasColumnName("CONSTANT_FORECAST_TYPE");

//                entity.Property(e => e.ConstantValue).HasColumnName("CONSTANT_VALUE");

//                entity.Property(e => e.ForecastProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_PRODUCT_ID");

//                entity.Property(e => e.IsActive).HasColumnName("IS_ACTIVE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntForecastInput1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_forecast_inputs", "stage_valnav");

//                entity.Property(e => e.BasedOn).HasColumnName("BASED_ON");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.ForecastChangeUserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_CHANGE_USER_ID");

//                entity.Property(e => e.ForecastCreateDate).HasColumnName("FORECAST_CREATE_DATE");

//                entity.Property(e => e.ForecastCreateUserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_CREATE_USER_ID");

//                entity.Property(e => e.ForecastSourceFactor).HasColumnName("FORECAST_SOURCE_FACTOR");

//                entity.Property(e => e.ForecastSourceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_SOURCE_ID");

//                entity.Property(e => e.HasError).HasColumnName("HAS_ERROR");

//                entity.Property(e => e.HistoryCutoff).HasColumnName("HISTORY_CUTOFF");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReservesCategoryId).HasColumnName("RESERVES_CATEGORY_ID");
//            });

//            modelBuilder.Entity<TBudgetEntImportId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_import_id", "stage_valnav");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(50)
//                    .HasColumnName("VENDOR_ID");
//            });

//            modelBuilder.Entity<TBudgetEntLeaseInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_lease_interest", "stage_valnav");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntManualForecast>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_manual_forecast", "stage_valnav");

//                entity.Property(e => e.ForecastType).HasColumnName("FORECAST_TYPE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntManualForecastValue>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_manual_forecast_value", "stage_valnav");

//                entity.Property(e => e.ManualDate).HasColumnName("MANUAL_DATE");

//                entity.Property(e => e.ManualValue).HasColumnName("MANUAL_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntOtherForecast>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_other_forecast", "stage_valnav");

//                entity.Property(e => e.ForecastDate).HasColumnName("FORECAST_DATE");

//                entity.Property(e => e.ForecastType).HasColumnName("FORECAST_TYPE");

//                entity.Property(e => e.ForecastValue).HasColumnName("FORECAST_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TBudgetEntPlan>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_plan", "stage_valnav");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.LastModifiedDate).HasColumnName("LAST_MODIFIED_DATE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReviewState).HasColumnName("REVIEW_STATE");
//            });

//            modelBuilder.Entity<TBudgetEntProductInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_product_interest", "stage_valnav");

//                entity.Property(e => e.AffectedByCalcDate).HasColumnName("AFFECTED_BY_CALC_DATE");

//                entity.Property(e => e.CustomData)
//                    .HasMaxLength(4000)
//                    .HasColumnName("CUSTOM_DATA");

//                entity.Property(e => e.EndDate).HasColumnName("END_DATE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.StartDate).HasColumnName("START_DATE");

//                entity.Property(e => e.UseManualRoyalty).HasColumnName("USE_MANUAL_ROYALTY");
//            });

//            modelBuilder.Entity<TBudgetEntReservesCategory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_reserves_category", "stage_valnav");

//                entity.Property(e => e.AbandonmentDelay).HasColumnName("ABANDONMENT_DELAY");

//                entity.Property(e => e.AbandonmentValue).HasColumnName("ABANDONMENT_VALUE");

//                entity.Property(e => e.AutocalcProcessLoss).HasColumnName("AUTOCALC_PROCESS_LOSS");

//                entity.Property(e => e.CalculationDate).HasColumnName("CALCULATION_DATE");

//                entity.Property(e => e.ChanceOfOccurrence).HasColumnName("CHANCE_OF_OCCURRENCE");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("CHANCE_OF_SUCCESS");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.EconomicLimitApply).HasColumnName("ECONOMIC_LIMIT_APPLY");

//                entity.Property(e => e.EconomicLimitDelay).HasColumnName("ECONOMIC_LIMIT_DELAY");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.ForecastChangeUserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_CHANGE_USER_ID");

//                entity.Property(e => e.HasEconomicResults).HasColumnName("HAS_ECONOMIC_RESULTS");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.PriceSetId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_SET_ID");

//                entity.Property(e => e.ProjectStart).HasColumnName("PROJECT_START");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.SalvageDelay).HasColumnName("SALVAGE_DELAY");

//                entity.Property(e => e.SalvageValue).HasColumnName("SALVAGE_VALUE");

//                entity.Property(e => e.TerminationDate).HasColumnName("TERMINATION_DATE");
//            });

//            modelBuilder.Entity<TBudgetEntReversionInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_reversion_interest", "stage_valnav");

//                entity.Property(e => e.CapCostInterest).HasColumnName("CAP_COST_INTEREST");

//                entity.Property(e => e.FacilityInterest).HasColumnName("FACILITY_INTEREST");

//                entity.Property(e => e.FreeholdInterestReceivable).HasColumnName("FREEHOLD_INTEREST_RECEIVABLE");

//                entity.Property(e => e.GorDeductionPayable).HasColumnName("GOR_DEDUCTION_PAYABLE");

//                entity.Property(e => e.GorDeductionReceivable).HasColumnName("GOR_DEDUCTION_RECEIVABLE");

//                entity.Property(e => e.GorPayable).HasColumnName("GOR_PAYABLE");

//                entity.Property(e => e.GorReceivable).HasColumnName("GOR_RECEIVABLE");

//                entity.Property(e => e.NorPayable).HasColumnName("NOR_PAYABLE");

//                entity.Property(e => e.NorReceivable).HasColumnName("NOR_RECEIVABLE");

//                entity.Property(e => e.NpiPayable).HasColumnName("NPI_PAYABLE");

//                entity.Property(e => e.NpiReceivable).HasColumnName("NPI_RECEIVABLE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostInterest).HasColumnName("OP_COST_INTEREST");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PoolingFactor).HasColumnName("POOLING_FACTOR");

//                entity.Property(e => e.ReversionDate).HasColumnName("REVERSION_DATE");

//                entity.Property(e => e.ReversionType).HasColumnName("REVERSION_TYPE");

//                entity.Property(e => e.ReversionValue).HasColumnName("REVERSION_VALUE");

//                entity.Property(e => e.RoyaltyDeduction).HasColumnName("ROYALTY_DEDUCTION");

//                entity.Property(e => e.RoyaltyFactor).HasColumnName("ROYALTY_FACTOR");

//                entity.Property(e => e.SortIndex).HasColumnName("SORT_INDEX");

//                entity.Property(e => e.TractFactor).HasColumnName("TRACT_FACTOR");

//                entity.Property(e => e.WorkingInterest).HasColumnName("WORKING_INTEREST");
//            });

//            modelBuilder.Entity<TBudgetEntSegment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_segment", "stage_valnav");

//                entity.Property(e => e.DenominatorEndCum).HasColumnName("DENOMINATOR_END_CUM");

//                entity.Property(e => e.DenominatorStartCum).HasColumnName("DENOMINATOR_START_CUM");

//                entity.Property(e => e.DenominatorVolumeCalculated).HasColumnName("DENOMINATOR_VOLUME_CALCULATED");

//                entity.Property(e => e.Df).HasColumnName("DF");

//                entity.Property(e => e.DfCalculated).HasColumnName("DF_CALCULATED");

//                entity.Property(e => e.Di).HasColumnName("DI");

//                entity.Property(e => e.DiCalculated).HasColumnName("DI_CALCULATED");

//                entity.Property(e => e.DiLinked).HasColumnName("DI_LINKED");

//                entity.Property(e => e.Ei).HasColumnName("EI");

//                entity.Property(e => e.EndCum).HasColumnName("END_CUM");

//                entity.Property(e => e.EndDate).HasColumnName("END_DATE");

//                entity.Property(e => e.EndTime).HasColumnName("END_TIME");

//                entity.Property(e => e.ErrorType).HasColumnName("ERROR_TYPE");

//                entity.Property(e => e.FinalVolume).HasColumnName("FINAL_VOLUME");

//                entity.Property(e => e.FinalVolumeCalculated).HasColumnName("FINAL_VOLUME_CALCULATED");

//                entity.Property(e => e.FinalVolumeLinked).HasColumnName("FINAL_VOLUME_LINKED");

//                entity.Property(e => e.MaxRate).HasColumnName("MAX_RATE");

//                entity.Property(e => e.MaxRateLinked).HasColumnName("MAX_RATE_LINKED");

//                entity.Property(e => e.NLinked).HasColumnName("N_LINKED");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Qf).HasColumnName("QF");

//                entity.Property(e => e.QfCalculated).HasColumnName("QF_CALCULATED");

//                entity.Property(e => e.QfLinked).HasColumnName("QF_LINKED");

//                entity.Property(e => e.Qi).HasColumnName("QI");

//                entity.Property(e => e.QiLinked).HasColumnName("QI_LINKED");

//                entity.Property(e => e.SegmentIndex).HasColumnName("SEGMENT_INDEX");

//                entity.Property(e => e.StartCum).HasColumnName("START_CUM");

//                entity.Property(e => e.StartDate).HasColumnName("START_DATE");

//                entity.Property(e => e.StartDateLinked).HasColumnName("START_DATE_LINKED");

//                entity.Property(e => e.StartTime).HasColumnName("START_TIME");

//                entity.Property(e => e.TimeCalculated).HasColumnName("TIME_CALCULATED");

//                entity.Property(e => e.VolumeCalculated).HasColumnName("VOLUME_CALCULATED");
//            });

//            modelBuilder.Entity<TBudgetEntSharedPlanDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_ent_shared_plan_data", "stage_valnav");

//                entity.Property(e => e.AcidConcentration).HasColumnName("ACID_CONCENTRATION");

//                entity.Property(e => e.AcidFractureVolume).HasColumnName("ACID_FRACTURE_VOLUME");

//                entity.Property(e => e.AllowNegativeWedge).HasColumnName("ALLOW_NEGATIVE_WEDGE");

//                entity.Property(e => e.ApplyTerminationToChildren).HasColumnName("APPLY_TERMINATION_TO_CHILDREN");

//                entity.Property(e => e.CasingFlange).HasColumnName("CASING_FLANGE");

//                entity.Property(e => e.CompletionType).HasColumnName("COMPLETION_TYPE");

//                entity.Property(e => e.CurrencyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CURRENCY_ID");

//                entity.Property(e => e.ForecastMode).HasColumnName("FORECAST_MODE");

//                entity.Property(e => e.FormationTemperature).HasColumnName("FORMATION_TEMPERATURE");

//                entity.Property(e => e.GasProductType)
//                    .HasMaxLength(50)
//                    .HasColumnName("GAS_PRODUCT_TYPE");

//                entity.Property(e => e.GrossCompInterval).HasColumnName("GROSS_COMP_INTERVAL");

//                entity.Property(e => e.HonorChildLimit).HasColumnName("HONOR_CHILD_LIMIT");

//                entity.Property(e => e.KellyBushing).HasColumnName("KELLY_BUSHING");

//                entity.Property(e => e.LateralLength).HasColumnName("LATERAL_LENGTH");

//                entity.Property(e => e.MeasuredDepth).HasColumnName("MEASURED_DEPTH");

//                entity.Property(e => e.MidPointPerf).HasColumnName("MID_POINT_PERF");

//                entity.Property(e => e.OilProductType)
//                    .HasMaxLength(50)
//                    .HasColumnName("OIL_PRODUCT_TYPE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PerfBottom).HasColumnName("PERF_BOTTOM");

//                entity.Property(e => e.PerfTop).HasColumnName("PERF_TOP");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.PoolDatum).HasColumnName("POOL_DATUM");

//                entity.Property(e => e.PoolDatumCorrection).HasColumnName("POOL_DATUM_CORRECTION");

//                entity.Property(e => e.RingFenceCalculationId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RING_FENCE_CALCULATION_ID");

//                entity.Property(e => e.RingFenceRegimeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RING_FENCE_REGIME_ID");

//                entity.Property(e => e.SpudDate).HasColumnName("SPUD_DATE");

//                entity.Property(e => e.TotalLateralLength).HasColumnName("TOTAL_LATERAL_LENGTH");

//                entity.Property(e => e.TotalMeasuredDepth).HasColumnName("TOTAL_MEASURED_DEPTH");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("TOTAL_PROPPANT_PLACED");

//                entity.Property(e => e.TrueVerticalDepth).HasColumnName("TRUE_VERTICAL_DEPTH");

//                entity.Property(e => e.TrueVerticalDepthAvg).HasColumnName("TRUE_VERTICAL_DEPTH_AVG");

//                entity.Property(e => e.TrueVerticalDepthMax).HasColumnName("TRUE_VERTICAL_DEPTH_MAX");

//                entity.Property(e => e.UseUneconomicAbanRules).HasColumnName("USE_UNECONOMIC_ABAN_RULES");

//                entity.Property(e => e.WellDatum).HasColumnName("WELL_DATUM");
//            });

//            modelBuilder.Entity<TBudgetEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_entity", "stage_valnav");

//                entity.Property(e => e.EntityType).HasColumnName("ENTITY_TYPE");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("FORMATTED_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.SortingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("SORTING_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<TBudgetFiscCapCost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_cap_cost", "stage_valnav");

//                entity.Property(e => e.CalcBehaviour).HasColumnName("CALC_BEHAVIOUR");

//                entity.Property(e => e.CapCostCategory).HasColumnName("CAP_COST_CATEGORY");

//                entity.Property(e => e.CostType).HasColumnName("COST_TYPE");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.FailureTaxPoolId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FAILURE_TAX_POOL_ID");

//                entity.Property(e => e.IncludeInGcaCalc).HasColumnName("INCLUDE_IN_GCA_CALC");

//                entity.Property(e => e.IncludeInReversionCalc).HasColumnName("INCLUDE_IN_REVERSION_CALC");

//                entity.Property(e => e.InterestType).HasColumnName("INTEREST_TYPE");

//                entity.Property(e => e.IsInternational).HasColumnName("IS_INTERNATIONAL");

//                entity.Property(e => e.IsVisible).HasColumnName("IS_VISIBLE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OverridesId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OVERRIDES_ID");

//                entity.Property(e => e.SortIndex).HasColumnName("SORT_INDEX");

//                entity.Property(e => e.SuccessTaxPoolId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SUCCESS_TAX_POOL_ID");
//            });

//            modelBuilder.Entity<TBudgetFiscOpCost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_op_cost", "stage_valnav");

//                entity.Property(e => e.CalcBehaviour).HasColumnName("CALC_BEHAVIOUR");

//                entity.Property(e => e.CostType).HasColumnName("COST_TYPE");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.IncludeInGcaCalc).HasColumnName("INCLUDE_IN_GCA_CALC");

//                entity.Property(e => e.InterestType).HasColumnName("INTEREST_TYPE");

//                entity.Property(e => e.IsInternational).HasColumnName("IS_INTERNATIONAL");

//                entity.Property(e => e.IsVisible).HasColumnName("IS_VISIBLE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostType).HasColumnName("OP_COST_TYPE");

//                entity.Property(e => e.OverridesId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OVERRIDES_ID");

//                entity.Property(e => e.ProductListType).HasColumnName("PRODUCT_LIST_TYPE");

//                entity.Property(e => e.SeparateMajorProducts).HasColumnName("SEPARATE_MAJOR_PRODUCTS");

//                entity.Property(e => e.SortIndex).HasColumnName("SORT_INDEX");
//            });

//            modelBuilder.Entity<TBudgetFiscProductListValue>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_product_list_value", "stage_valnav");

//                entity.Property(e => e.IsPrimary).HasColumnName("IS_PRIMARY");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.ProductClass).HasColumnName("PRODUCT_CLASS");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.ProductIndex).HasColumnName("PRODUCT_INDEX");
//            });

//            modelBuilder.Entity<TBudgetFiscReservesProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_reserves_product", "stage_valnav");

//                entity.Property(e => e.AssociatedProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("ASSOCIATED_PRODUCT");

//                entity.Property(e => e.IncludeInRecon).HasColumnName("INCLUDE_IN_RECON");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.QueryNameFragment)
//                    .HasMaxLength(50)
//                    .HasColumnName("QUERY_NAME_FRAGMENT");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");
//            });

//            modelBuilder.Entity<TBudgetFiscScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_scenario", "stage_valnav");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastChangeDate).HasColumnName("LAST_CHANGE_DATE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(205)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OverridePlanParameters).HasColumnName("OVERRIDE_PLAN_PARAMETERS");

//                entity.Property(e => e.OwnedBy)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWNED_BY");

//                entity.Property(e => e.ScenarioType).HasColumnName("SCENARIO_TYPE");
//            });

//            modelBuilder.Entity<TBudgetFiscScenarioParam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_fisc_scenario_params", "stage_valnav");

//                entity.Property(e => e.AllowNegWedge).HasColumnName("ALLOW_NEG_WEDGE");

//                entity.Property(e => e.CapActEconCalcOpt).HasColumnName("CAP_ACT_ECON_CALC_OPT");

//                entity.Property(e => e.CapCostFactor).HasColumnName("CAP_COST_FACTOR");

//                entity.Property(e => e.CapCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CAP_COST_TEMPLATE_ID");

//                entity.Property(e => e.CooOverride).HasColumnName("COO_OVERRIDE");

//                entity.Property(e => e.CosOverride).HasColumnName("COS_OVERRIDE");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EconLimitCalcType).HasColumnName("ECON_LIMIT_CALC_TYPE");

//                entity.Property(e => e.EconLimitDelay).HasColumnName("ECON_LIMIT_DELAY");

//                entity.Property(e => e.EconLimitDiscount).HasColumnName("ECON_LIMIT_DISCOUNT");

//                entity.Property(e => e.EnableAbandonment).HasColumnName("ENABLE_ABANDONMENT");

//                entity.Property(e => e.EnableEconLimit).HasColumnName("ENABLE_ECON_LIMIT");

//                entity.Property(e => e.EnableSaskSurcharge).HasColumnName("ENABLE_SASK_SURCHARGE");

//                entity.Property(e => e.EnableSharedCalculation).HasColumnName("ENABLE_SHARED_CALCULATION");

//                entity.Property(e => e.EscalatePrice).HasColumnName("ESCALATE_PRICE");

//                entity.Property(e => e.InflationOverride).HasColumnName("INFLATION_OVERRIDE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostFactor).HasColumnName("OP_COST_FACTOR");

//                entity.Property(e => e.OpCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OP_COST_TEMPLATE_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_ID");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.PriceFactor).HasColumnName("PRICE_FACTOR");

//                entity.Property(e => e.PriceTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_TEMPLATE_ID");

//                entity.Property(e => e.ProductionFactor).HasColumnName("PRODUCTION_FACTOR");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.UseOverlappingHistory).HasColumnName("USE_OVERLAPPING_HISTORY");
//            });

//            modelBuilder.Entity<TBudgetResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<TBudgetResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<TBudgetResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<TBudgetResultsCost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_cost", "stage_valnav");

//                entity.Property(e => e.CapGrAbandonment).HasColumnName("CAP_GR_ABANDONMENT");

//                entity.Property(e => e.CapGrCanAllowance).HasColumnName("CAP_GR_CAN_ALLOWANCE");

//                entity.Property(e => e.CapGrCanDevelopment).HasColumnName("CAP_GR_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapGrCanExploration).HasColumnName("CAP_GR_CAN_EXPLORATION");

//                entity.Property(e => e.CapGrCanProperty).HasColumnName("CAP_GR_CAN_PROPERTY");

//                entity.Property(e => e.CapGrOther).HasColumnName("CAP_GR_OTHER");

//                entity.Property(e => e.CapGrSalvage).HasColumnName("CAP_GR_SALVAGE");

//                entity.Property(e => e.CapGrUsGg).HasColumnName("CAP_GR_US_GG");

//                entity.Property(e => e.CapGrUsIntangible).HasColumnName("CAP_GR_US_INTANGIBLE");

//                entity.Property(e => e.CapGrUsPropLease).HasColumnName("CAP_GR_US_PROP_LEASE");

//                entity.Property(e => e.CapGrUsTangible).HasColumnName("CAP_GR_US_TANGIBLE");

//                entity.Property(e => e.CapUnriskedAbandonment).HasColumnName("CAP_UNRISKED_ABANDONMENT");

//                entity.Property(e => e.CapUnriskedCanAllowance).HasColumnName("CAP_UNRISKED_CAN_ALLOWANCE");

//                entity.Property(e => e.CapUnriskedCanDevelopment).HasColumnName("CAP_UNRISKED_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapUnriskedCanExploration).HasColumnName("CAP_UNRISKED_CAN_EXPLORATION");

//                entity.Property(e => e.CapUnriskedCanProperty).HasColumnName("CAP_UNRISKED_CAN_PROPERTY");

//                entity.Property(e => e.CapUnriskedSalvage).HasColumnName("CAP_UNRISKED_SALVAGE");

//                entity.Property(e => e.CapUnriskedUsGg).HasColumnName("CAP_UNRISKED_US_GG");

//                entity.Property(e => e.CapUnriskedUsIntangible).HasColumnName("CAP_UNRISKED_US_INTANGIBLE");

//                entity.Property(e => e.CapUnriskedUsPropLease).HasColumnName("CAP_UNRISKED_US_PROP_LEASE");

//                entity.Property(e => e.CapUnriskedUsTangible).HasColumnName("CAP_UNRISKED_US_TANGIBLE");

//                entity.Property(e => e.CapWiAbandonment).HasColumnName("CAP_WI_ABANDONMENT");

//                entity.Property(e => e.CapWiCanAllowance).HasColumnName("CAP_WI_CAN_ALLOWANCE");

//                entity.Property(e => e.CapWiCanDevelopment).HasColumnName("CAP_WI_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapWiCanExploration).HasColumnName("CAP_WI_CAN_EXPLORATION");

//                entity.Property(e => e.CapWiCanProperty).HasColumnName("CAP_WI_CAN_PROPERTY");

//                entity.Property(e => e.CapWiOther).HasColumnName("CAP_WI_OTHER");

//                entity.Property(e => e.CapWiSalvage).HasColumnName("CAP_WI_SALVAGE");

//                entity.Property(e => e.CapWiUsGg).HasColumnName("CAP_WI_US_GG");

//                entity.Property(e => e.CapWiUsIntangible).HasColumnName("CAP_WI_US_INTANGIBLE");

//                entity.Property(e => e.CapWiUsPropLease).HasColumnName("CAP_WI_US_PROP_LEASE");

//                entity.Property(e => e.CapWiUsTangible).HasColumnName("CAP_WI_US_TANGIBLE");

//                entity.Property(e => e.OpFiGrFixed).HasColumnName("OP_FI_GR_FIXED");

//                entity.Property(e => e.OpFiGrVariable).HasColumnName("OP_FI_GR_VARIABLE");

//                entity.Property(e => e.OpFiWiFixed).HasColumnName("OP_FI_WI_FIXED");

//                entity.Property(e => e.OpFiWiVariable).HasColumnName("OP_FI_WI_VARIABLE");

//                entity.Property(e => e.OpGrOtherRevenue).HasColumnName("OP_GR_OTHER_REVENUE");

//                entity.Property(e => e.OpWiGrFixed).HasColumnName("OP_WI_GR_FIXED");

//                entity.Property(e => e.OpWiGrVariable).HasColumnName("OP_WI_GR_VARIABLE");

//                entity.Property(e => e.OpWiOtherRevenue).HasColumnName("OP_WI_OTHER_REVENUE");

//                entity.Property(e => e.OpWiWiFixed).HasColumnName("OP_WI_WI_FIXED");

//                entity.Property(e => e.OpWiWiVariable).HasColumnName("OP_WI_WI_VARIABLE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");
//            });

//            modelBuilder.Entity<TBudgetResultsCostDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_cost_detail", "stage_valnav");

//                entity.Property(e => e.CostDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_DEFINITION_ID");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("FAILURE_GROSS_VALUE");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("FAILURE_INTEREST_VALUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("SUCCESS_GROSS_VALUE");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("SUCCESS_INTEREST_VALUE");
//            });

//            modelBuilder.Entity<TBudgetResultsLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_lookup", "stage_valnav");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.ResultType).HasColumnName("RESULT_TYPE");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SCENARIO_ID");
//            });

//            modelBuilder.Entity<TBudgetResultsRegime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_regime", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.AdValoremBasis).HasColumnName("AD_VALOREM_BASIS");

//                entity.Property(e => e.BasicTax).HasColumnName("BASIC_TAX");

//                entity.Property(e => e.Bonus).HasColumnName("BONUS");

//                entity.Property(e => e.CostRecovery).HasColumnName("COST_RECOVERY");

//                entity.Property(e => e.Credits).HasColumnName("CREDITS");

//                entity.Property(e => e.Dda).HasColumnName("DDA");

//                entity.Property(e => e.DesignatedRor).HasColumnName("DESIGNATED_ROR");

//                entity.Property(e => e.Dmo).HasColumnName("DMO");

//                entity.Property(e => e.Expense).HasColumnName("EXPENSE");

//                entity.Property(e => e.Income).HasColumnName("INCOME");

//                entity.Property(e => e.InvestmentCredits).HasColumnName("INVESTMENT_CREDITS");

//                entity.Property(e => e.ProfitRevenue).HasColumnName("PROFIT_REVENUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.Royalty).HasColumnName("ROYALTY");

//                entity.Property(e => e.ServiceFee).HasColumnName("SERVICE_FEE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.Tranche).HasColumnName("TRANCHE");

//                entity.Property(e => e.Uplift).HasColumnName("UPLIFT");
//            });

//            modelBuilder.Entity<TBudgetResultsSummary>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_budget_results_summary", "stage_valnav");

//                entity.Property(e => e.AbandonDate).HasColumnName("ABANDON_DATE");

//                entity.Property(e => e.AtaxNetRevenue).HasColumnName("ATAX_NET_REVENUE");

//                entity.Property(e => e.AtaxNpv1).HasColumnName("ATAX_NPV1");

//                entity.Property(e => e.AtaxNpv2).HasColumnName("ATAX_NPV2");

//                entity.Property(e => e.AtaxNpv3).HasColumnName("ATAX_NPV3");

//                entity.Property(e => e.AtaxNpv4).HasColumnName("ATAX_NPV4");

//                entity.Property(e => e.AtaxNpv5).HasColumnName("ATAX_NPV5");

//                entity.Property(e => e.AtaxPayout).HasColumnName("ATAX_PAYOUT");

//                entity.Property(e => e.AtaxProfitRatio).HasColumnName("ATAX_PROFIT_RATIO");

//                entity.Property(e => e.AtaxProfitRatioNpv1).HasColumnName("ATAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.AtaxProfitRatioNpv2).HasColumnName("ATAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.AtaxProfitRatioNpv3).HasColumnName("ATAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.AtaxProfitRatioNpv4).HasColumnName("ATAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.AtaxProfitRatioNpv5).HasColumnName("ATAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.AtaxRor).HasColumnName("ATAX_ROR");

//                entity.Property(e => e.BtaxNetRevenue).HasColumnName("BTAX_NET_REVENUE");

//                entity.Property(e => e.BtaxNpv1).HasColumnName("BTAX_NPV1");

//                entity.Property(e => e.BtaxNpv2).HasColumnName("BTAX_NPV2");

//                entity.Property(e => e.BtaxNpv3).HasColumnName("BTAX_NPV3");

//                entity.Property(e => e.BtaxNpv4).HasColumnName("BTAX_NPV4");

//                entity.Property(e => e.BtaxNpv5).HasColumnName("BTAX_NPV5");

//                entity.Property(e => e.BtaxPayout).HasColumnName("BTAX_PAYOUT");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("BTAX_PROFIT_RATIO");

//                entity.Property(e => e.BtaxProfitRatioNpv1).HasColumnName("BTAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.BtaxProfitRatioNpv2).HasColumnName("BTAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.BtaxProfitRatioNpv3).HasColumnName("BTAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.BtaxProfitRatioNpv4).HasColumnName("BTAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.BtaxProfitRatioNpv5).HasColumnName("BTAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.BtaxRor).HasColumnName("BTAX_ROR");

//                entity.Property(e => e.CalculationApplyEconLimit).HasColumnName("CALCULATION_APPLY_ECON_LIMIT");

//                entity.Property(e => e.CalculationCoo).HasColumnName("CALCULATION_COO");

//                entity.Property(e => e.CalculationCos).HasColumnName("CALCULATION_COS");

//                entity.Property(e => e.CalculationType).HasColumnName("CALCULATION_TYPE");

//                entity.Property(e => e.CapCoshareBoe).HasColumnName("CAP_COSHARE_BOE");

//                entity.Property(e => e.CapNetBoe).HasColumnName("CAP_NET_BOE");

//                entity.Property(e => e.CapWiBoe).HasColumnName("CAP_WI_BOE");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EntityCurrencyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_CURRENCY_ID");

//                entity.Property(e => e.EntityList)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_LIST");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("ENTITY_NAME");

//                entity.Property(e => e.ExplorerTypeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("EXPLORER_TYPE_ID");

//                entity.Property(e => e.ForecastEnd).HasColumnName("FORECAST_END");

//                entity.Property(e => e.ForecastStart).HasColumnName("FORECAST_START");

//                entity.Property(e => e.HasReportValue).HasColumnName("HAS_REPORT_VALUE");

//                entity.Property(e => e.HierarchyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("HIERARCHY_ID");

//                entity.Property(e => e.InitialGenWi).HasColumnName("INITIAL_GEN_WI");

//                entity.Property(e => e.InputPrimaryProduct).HasColumnName("INPUT_PRIMARY_PRODUCT");

//                entity.Property(e => e.OpCoshareBoe).HasColumnName("OP_COSHARE_BOE");

//                entity.Property(e => e.OpNetBoe).HasColumnName("OP_NET_BOE");

//                entity.Property(e => e.OpWiBoe).HasColumnName("OP_WI_BOE");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.ProductionStart).HasColumnName("PRODUCTION_START");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.RegimeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("REGIME_ID");

//                entity.Property(e => e.ResultDelta).HasColumnName("RESULT_DELTA");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.TaxCalculationId)
//                    .HasMaxLength(50)
//                    .HasColumnName("TAX_CALCULATION_ID");

//                entity.Property(e => e.TaxEnd).HasColumnName("TAX_END");

//                entity.Property(e => e.TaxPaid).HasColumnName("TAX_PAID");

//                entity.Property(e => e.TerminationDate).HasColumnName("TERMINATION_DATE");

//                entity.Property(e => e.UserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_ID");
//            });

//            modelBuilder.Entity<TBuildDimAccountFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_build_dim_account_finance", "stage");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula");

//                entity.Property(e => e.AccountLevel04FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula_property");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula");

//                entity.Property(e => e.AccountLevel05FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula_property");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula");

//                entity.Property(e => e.AccountLevel06FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula_property");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula");

//                entity.Property(e => e.AccountLevel07FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula_property");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula");

//                entity.Property(e => e.AccountLevel08FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula_property");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula");

//                entity.Property(e => e.AccountLevel09FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula_property");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula");

//                entity.Property(e => e.AccountLevel10FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula_property");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TBuildDimAccountHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_build_dim_account_hierarchy", "stage");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountKey).HasColumnName("account_key");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ParentKey).HasColumnName("parent_key");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<TCcNumWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_cc_num_working_interest", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<TCcUwiMasterSource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_cc_uwi_master_source", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("data_source");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");
//            });

//            modelBuilder.Entity<TCostCentreHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_cost_centre_hierarchy", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TCtrlAccountsXref>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_accounts_xref", "stage");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("account");

//                entity.Property(e => e.IsActive)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_active");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.SourceApp)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_app");

//                entity.Property(e => e.SourceColumn)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_column");

//                entity.Property(e => e.SourceDesc)
//                    .HasMaxLength(150)
//                    .IsUnicode(false)
//                    .HasColumnName("source_desc");

//                entity.Property(e => e.SourceMajorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("source_major_acct");

//                entity.Property(e => e.SourceMinorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("source_minor_acct");

//                entity.Property(e => e.SourceTable)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_table");

//                entity.Property(e => e.TargetAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_account");

//                entity.Property(e => e.TargetApp)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("target_app");

//                entity.Property(e => e.TargetMajorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("target_major_acct");

//                entity.Property(e => e.TargetMinorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("target_minor_acct");

//                entity.Property(e => e.TargetParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_parent");
//            });

//            modelBuilder.Entity<TCtrlDimDescTextExcption>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_dim_desc_text_excptions", "stage");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.Information)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("INFORMATION");

//                entity.Property(e => e.IsActive)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("IS_ACTIVE");

//                entity.Property(e => e.ReplacementString)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("REPLACEMENT_STRING");

//                entity.Property(e => e.String)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("STRING");
//            });

//            modelBuilder.Entity<TCtrlEtlVariable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_etl_variables", "OLAPControl");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.DimensionMember)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_MEMBER");

//                entity.Property(e => e.DimensionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_NAME");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.Target1Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET1_NAME");

//                entity.Property(e => e.Target2Value)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET2_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlEtlVariable1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_etl_variables", "stage");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.DimensionMember)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_MEMBER");

//                entity.Property(e => e.DimensionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_NAME");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.Target1Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET1_NAME");

//                entity.Property(e => e.Target2Value)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET2_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlEtlVariable2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_etl_variables", "Stage_CashReceipts");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlEtlVariables2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_etl_variables_2", "stage");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.DimensionMember)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_MEMBER");

//                entity.Property(e => e.DimensionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_NAME");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.Target1Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET1_NAME");

//                entity.Property(e => e.Target2Value)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET2_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlEtlVariables20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_etl_variables_20220513", "stage");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.DimensionMember)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_MEMBER");

//                entity.Property(e => e.DimensionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_NAME");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.Target1Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET1_NAME");

//                entity.Property(e => e.Target2Value)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET2_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlEwfPrimaryProductXref>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_ewf_primary_product_xref", "stage");

//                entity.Property(e => e.EwfPrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ewf_primary_product");

//                entity.Property(e => e.IhsPrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ihs_primary_product");
//            });

//            modelBuilder.Entity<TCtrlFixedVarOpex>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_fixed_var_opex", "stage");

//                entity.Property(e => e.EconFixedPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ECON_FIXED_PERCENT");

//                entity.Property(e => e.EconVariableGasPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ECON_VARIABLE_GAS_PERCENT");

//                entity.Property(e => e.EconVariableOilPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ECON_VARIABLE_OIL_PERCENT");

//                entity.Property(e => e.FixedOpexPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FIXED_OPEX_PERCENT");

//                entity.Property(e => e.QbyteMinorDescription)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("QBYTE_MINOR_DESCRIPTION");

//                entity.Property(e => e.QbyteNetMajorMinor)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("QBYTE_NET_MAJOR_MINOR");

//                entity.Property(e => e.TotalEconPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TOTAL_ECON_PERCENT");

//                entity.Property(e => e.TotalOpexPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TOTAL_OPEX_PERCENT");

//                entity.Property(e => e.VariableOpexPercent)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VARIABLE_OPEX_PERCENT");
//            });

//            modelBuilder.Entity<TCtrlMarketingEtlVariable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_marketing_etl_variables", "datamart_marketing");

//                entity.Property(e => e.EntryId).HasColumnName("entry_id");

//                entity.Property(e => e.EtlType)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_type");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesDispositionPointIdrec)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point_idrec");

//                entity.Property(e => e.SourceMeter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source_meter");

//                entity.Property(e => e.SourceMeter2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source_meter2");
//            });

//            modelBuilder.Entity<TCtrlMetrixEtlVariable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_metrix_etl_variables", "STAGE_METRIX");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.CubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CUBE_NAME");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DATE_VALUE");

//                entity.Property(e => e.DimensionMember)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_MEMBER");

//                entity.Property(e => e.DimensionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DIMENSION_NAME");

//                entity.Property(e => e.IntValue).HasColumnName("INT_VALUE");

//                entity.Property(e => e.Target1Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET1_NAME");

//                entity.Property(e => e.Target2Value)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET2_VALUE");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_NAME");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("VARIABLE_VALUE");
//            });

//            modelBuilder.Entity<TCtrlMetrixProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_metrix_products", "STAGE_METRIX");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("BOE_THERMAL");

//                entity.Property(e => e.M3Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("M3_THERMAL");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("MCFE6_THERMAL");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_NAME");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("SI_TO_IMP_CONV_FACTOR");
//            });

//            modelBuilder.Entity<TCtrlProdviewDuplicate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_prodview_duplicates", "stage");

//                entity.Property(e => e.CreatedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("created_date");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<TCtrlProdviewDuplicates20220118>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_prodview_duplicates_20220118", "stage");

//                entity.Property(e => e.CreatedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("created_date");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<TCtrlQbyteConversionFactor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_qbyte_conversion_factors", "stage");

//                entity.Property(e => e.GasBoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("gas_boe_thermal");

//                entity.Property(e => e.GasMcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("gas_mcfe6_thermal");

//                entity.Property(e => e.GasSiToImpConvFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("gas_si_to_imp_conv_factor");

//                entity.Property(e => e.LiquidBoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("liquid_boe_thermal");

//                entity.Property(e => e.LiquidMcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("liquid_mcfe6_thermal");

//                entity.Property(e => e.LiquidSiToImpConvFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("liquid_si_to_imp_conv_factor");
//            });

//            modelBuilder.Entity<TCtrlRevisedAccountDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_Revised_account_description", "stage");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountDescriptionRevised)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description_Revised");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.RowId).HasColumnName("row_id");
//            });

//            modelBuilder.Entity<TCtrlSpecialAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_special_accounts", "stage");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.HierarchyPathDesc)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path_desc");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance).HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.QbyteMajorMinor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_major_minor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TCtrlValnavAccountXref>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_account_xref", "stage");

//                entity.Property(e => e.CostDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_definition_id");

//                entity.Property(e => e.CostDefinitionName)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_definition_name");

//                entity.Property(e => e.CostType)
//                    .HasMaxLength(3)
//                    .HasColumnName("cost_type");

//                entity.Property(e => e.PreviousCostDetailType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("previous_cost_detail_type");

//                entity.Property(e => e.SignFlip)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("sign_flip");
//            });

//            modelBuilder.Entity<TCtrlValnavCustomDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_custom_data", "stage");

//                entity.Property(e => e.CalculationName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);

//                entity.Property(e => e.CustomDataId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CustomDataID");

//                entity.Property(e => e.CustomDataName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.DisplayName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<TCtrlValnavEtlVariable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_etl_variables", "stage");

//                entity.Property(e => e.ArchiveScenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("archive_scenario");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("comments");

//                entity.Property(e => e.CubeChildMember)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child_member");

//                entity.Property(e => e.CubeDimension)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_dimension");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("date_value");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("description");

//                entity.Property(e => e.IntValue).HasColumnName("int_value");

//                entity.Property(e => e.SignFlipFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("sign_flip_flag");

//                entity.Property(e => e.Text1)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT1");

//                entity.Property(e => e.Text2)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT2");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_name");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_value");
//            });

//            modelBuilder.Entity<TCtrlValnavEtlVariables20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_etl_variables_20220513", "stage");

//                entity.Property(e => e.ArchiveScenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("archive_scenario");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("comments");

//                entity.Property(e => e.CubeChildMember)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child_member");

//                entity.Property(e => e.CubeDimension)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_dimension");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("date_value");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("description");

//                entity.Property(e => e.IntValue).HasColumnName("int_value");

//                entity.Property(e => e.SignFlipFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("sign_flip_flag");

//                entity.Property(e => e.Text1)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT1");

//                entity.Property(e => e.Text2)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT2");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_name");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_value");
//            });

//            modelBuilder.Entity<TCtrlValnavEtlVariables20220513b>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_etl_variables_20220513b", "stage");

//                entity.Property(e => e.ArchiveScenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("archive_scenario");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("comments");

//                entity.Property(e => e.CubeChildMember)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child_member");

//                entity.Property(e => e.CubeDimension)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_dimension");

//                entity.Property(e => e.DateValue)
//                    .HasColumnType("datetime")
//                    .HasColumnName("date_value");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("description");

//                entity.Property(e => e.IntValue).HasColumnName("int_value");

//                entity.Property(e => e.SignFlipFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("sign_flip_flag");

//                entity.Property(e => e.Text1)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT1");

//                entity.Property(e => e.Text2)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("TEXT2");

//                entity.Property(e => e.VariableName)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_name");

//                entity.Property(e => e.VariableValue)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_value");
//            });

//            modelBuilder.Entity<TCtrlValnavProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_valnav_products", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");
//            });

//            modelBuilder.Entity<TCtrlVolumesValnavTimePeriod>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_volumes_valnav_time_period", "stage");

//                entity.Property(e => e.Dates)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dates");

//                entity.Property(e => e.YearMonth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("year_month");
//            });

//            modelBuilder.Entity<TCtrlVolumesValnavTimePeriod20220112>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ctrl_volumes_valnav_time_period_20220112", "stage");

//                entity.Property(e => e.Dates)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dates");

//                entity.Property(e => e.YearMonth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("year_month");
//            });

//            modelBuilder.Entity<TDimAccountCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_capital", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4204)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(201)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.Id).HasColumnName("ID");

//                entity.Property(e => e.LastUpdatedDtm).HasColumnType("datetime");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountCapitalClean>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_capital_clean", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4204)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(201)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.Id).HasColumnName("id");

//                entity.Property(e => e.LastUpdatedDtm).HasColumnType("datetime");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_finance", "data_mart");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula");

//                entity.Property(e => e.AccountLevel04FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula_property");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula");

//                entity.Property(e => e.AccountLevel05FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula_property");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula");

//                entity.Property(e => e.AccountLevel06FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula_property");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula");

//                entity.Property(e => e.AccountLevel07FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula_property");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula");

//                entity.Property(e => e.AccountLevel08FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula_property");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula");

//                entity.Property(e => e.AccountLevel09FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula_property");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula");

//                entity.Property(e => e.AccountLevel10FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula_property");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountFinance20200622>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_finance_20200622", "data_mart");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_group");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_class_code_description");

//                entity.Property(e => e.DepGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_gl_account");

//                entity.Property(e => e.DepGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_gl_account_description");

//                entity.Property(e => e.DepLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.DepMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_major_account");

//                entity.Property(e => e.DepMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_major_account_description");

//                entity.Property(e => e.DepMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_major_class_code");

//                entity.Property(e => e.DepMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_minor_account");

//                entity.Property(e => e.DepUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_unary_operator");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_group");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_class_code_description");

//                entity.Property(e => e.EstmaGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_gl_account");

//                entity.Property(e => e.EstmaGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_gl_account_description");

//                entity.Property(e => e.EstmaLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.EstmaMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_major_account");

//                entity.Property(e => e.EstmaMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_major_account_description");

//                entity.Property(e => e.EstmaMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_major_class_code");

//                entity.Property(e => e.EstmaMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_minor_account");

//                entity.Property(e => e.EstmaUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_unary_operator");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_group");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_class_code_description");

//                entity.Property(e => e.GcartGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_gl_account");

//                entity.Property(e => e.GcartGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_gl_account_description");

//                entity.Property(e => e.GcartLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GcartMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_major_account");

//                entity.Property(e => e.GcartMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_major_account_description");

//                entity.Property(e => e.GcartMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_major_class_code");

//                entity.Property(e => e.GcartMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_minor_account");

//                entity.Property(e => e.GcartUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_unary_operator");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_group");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_class_code_description");

//                entity.Property(e => e.TaxopGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_gl_account");

//                entity.Property(e => e.TaxopGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_gl_account_description");

//                entity.Property(e => e.TaxopLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.TaxopMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_major_account");

//                entity.Property(e => e.TaxopMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_major_account_description");

//                entity.Property(e => e.TaxopMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_major_class_code");

//                entity.Property(e => e.TaxopMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_minor_account");

//                entity.Property(e => e.TaxopUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_unary_operator");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountFinance20220307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_finance_2022_03_07", "data_mart");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula");

//                entity.Property(e => e.AccountLevel04FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula_property");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula");

//                entity.Property(e => e.AccountLevel05FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula_property");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula");

//                entity.Property(e => e.AccountLevel06FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula_property");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula");

//                entity.Property(e => e.AccountLevel07FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula_property");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula");

//                entity.Property(e => e.AccountLevel08FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula_property");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula");

//                entity.Property(e => e.AccountLevel09FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula_property");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula");

//                entity.Property(e => e.AccountLevel10FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula_property");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountFinance22020307>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_finance_2202_03_07", "data_mart");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula");

//                entity.Property(e => e.AccountLevel04FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula_property");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula");

//                entity.Property(e => e.AccountLevel05FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula_property");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula");

//                entity.Property(e => e.AccountLevel06FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula_property");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula");

//                entity.Property(e => e.AccountLevel07FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula_property");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula");

//                entity.Property(e => e.AccountLevel08FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula_property");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula");

//                entity.Property(e => e.AccountLevel09FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula_property");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula");

//                entity.Property(e => e.AccountLevel10FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula_property");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimAccountHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_account_hierarchy", "data_mart");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountKey).HasColumnName("account_key");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ParentKey).HasColumnName("parent_key");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<TDimArContract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_ar_contract", "data_mart_metrix");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<TDimAuthorizationForExpenditure>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_authorization_for_expenditure", "data_mart");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("accrual_flag");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClassCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_class_code");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeGcaFcc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_GCA_FCC");

//                entity.Property(e => e.AfeKey)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatusCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_code");

//                entity.Property(e => e.AfeStatusDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_description");

//                entity.Property(e => e.AfeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_code");

//                entity.Property(e => e.AfeTypeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_description");

//                entity.Property(e => e.AfeTypeGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group");

//                entity.Property(e => e.AfeTypeGroupDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group_desc");

//                entity.Property(e => e.AfeUdf1Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_1_code");

//                entity.Property(e => e.AfeUdf20Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_20_code");

//                entity.Property(e => e.AfeUdf5Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_5_code");

//                entity.Property(e => e.AfeUdf7Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_7_code");

//                entity.Property(e => e.AllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("alloc_amt");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("allow_other_orgs_code");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetActivityYear)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_activity_year");

//                entity.Property(e => e.BudgetActivityYearDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_activity_year_desc");

//                entity.Property(e => e.CapitalAccrualCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_cc_num");

//                entity.Property(e => e.CapitalAccrualMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_method_code");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_exp_code");

//                entity.Property(e => e.CcList)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_list");

//                entity.Property(e => e.CipTransferFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cip_transfer_flag");

//                entity.Property(e => e.ClientId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("client_id");

//                entity.Property(e => e.ClientName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("client_name");

//                entity.Property(e => e.CommitmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("commitment_date");

//                entity.Property(e => e.CorpCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_code");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("country_code");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("curr_code");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("default_gl_sub_code");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DoiTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type_code");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("due_date");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EquipComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("equip_component_amt");

//                entity.Property(e => e.ExtrapolatedBudgetYear).HasColumnName("extrapolated_budget_year");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.GeologistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geologist_assigned");

//                entity.Property(e => e.GeophysicistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geophysicist_assigned");

//                entity.Property(e => e.InternalApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("internal_approver");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_flag");

//                entity.Property(e => e.JobEndDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("job_end_date");

//                entity.Property(e => e.JobStartDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("job_start_date");

//                entity.Property(e => e.LastAccruedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_accrued_date");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_date");

//                entity.Property(e => e.LastUpdtStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_status_date");

//                entity.Property(e => e.LastUpdtStatusUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_status_user");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_user");

//                entity.Property(e => e.ManagerName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("manager_name");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("managing_org_id");

//                entity.Property(e => e.NetEstimatePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_estimate_pct");

//                entity.Property(e => e.NumberOfCcs).HasColumnName("Number_of_CCs");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.OriginalAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("original_alloc_amt");

//                entity.Property(e => e.OverheadEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_end_date");

//                entity.Property(e => e.OverheadStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_start_date");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ownership_org_id");

//                entity.Property(e => e.PrimaryLocation)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_location");

//                entity.Property(e => e.PrimaryUwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_uwi");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectJustificationComments)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("project_justification_comments");

//                entity.Property(e => e.ProposalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("proposal_date");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.RefOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ref_org_id");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportingAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("reporting_alloc_amt");

//                entity.Property(e => e.RigName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_name");

//                entity.Property(e => e.RigNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_number");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.SuccessEffortTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("success_effort_type_code");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("term_date");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("term_user");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("translation_rate");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("use_jibe_edits_flag");

//                entity.Property(e => e.UwiAlias)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_alias");

//                entity.Property(e => e.UwiSortElement1)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_1");

//                entity.Property(e => e.UwiSortElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_2");

//                entity.Property(e => e.UwiSortElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_3");

//                entity.Property(e => e.UwiSortElement4)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_4");

//                entity.Property(e => e.UwiSortElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_5");

//                entity.Property(e => e.UwiSortElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_6");

//                entity.Property(e => e.UwiSortElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_7");

//                entity.Property(e => e.UwiSortElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_8");

//                entity.Property(e => e.UwiSortElement9)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_9");

//                entity.Property(e => e.WellviewHorizontalDepth).HasColumnName("wellview_horizontal_depth");

//                entity.Property(e => e.WellviewIntermediateCasingDepth).HasColumnName("wellview_intermediate_casing_depth");

//                entity.Property(e => e.WellviewRigReleaseDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_rig_release_date");

//                entity.Property(e => e.WellviewSpudDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_spud_date");

//                entity.Property(e => e.WellviewTotalDepth).HasColumnName("wellview_total_depth");

//                entity.Property(e => e.WrhseComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("wrhse_component_amt");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimChargeFormula>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_charge_formula", "data_mart_metrix");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FormulaDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formula_description");

//                entity.Property(e => e.RetrievalCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_code");

//                entity.Property(e => e.RetrievalDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_description");
//            });

//            modelBuilder.Entity<TDimChargeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_charge_type", "data_mart_metrix");

//                entity.Property(e => e.ChargeType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type");

//                entity.Property(e => e.ChargeTypeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_description");

//                entity.Property(e => e.ChargeTypeName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_name");

//                entity.Property(e => e.ChargeTypeShort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_short");

//                entity.Property(e => e.ChargeTypeSpecificCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_specific_code");

//                entity.Property(e => e.IsActive)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_active");
//            });

//            modelBuilder.Entity<TDimControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_control_group", "data_mart_metrix");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.ControlGroupName)
//                    .HasMaxLength(150)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_name");

//                entity.Property(e => e.ControlGroupPaResponsibleUser)
//                    .HasMaxLength(250)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_pa_responsible_user");

//                entity.Property(e => e.ControlGroupRegion)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_region");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pa_responsible_user_id");
//            });

//            modelBuilder.Entity<TDimDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_date", "data_mart_metrix");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.CalendarYearNumber).HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<TDimDeliverySequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_delivery_sequence", "data_mart_metrix");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");
//            });

//            modelBuilder.Entity<TDimEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_entity", "data_mart");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimEntity1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_entity", "data_mart_metrix");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimEntity20210721>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_entity_20210721", "data_mart");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimEntity20220105>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_entity_20220105", "data_mart");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimEntity20220510>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_entity_2022_05_10", "data_mart");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_facility", "data_mart_metrix");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_cost_centre_code");

//                entity.Property(e => e.FacilityGovernmentCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_government_code");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_id");

//                entity.Property(e => e.FacilityOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_name");

//                entity.Property(e => e.FacilityPaResponsibleUser)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user");

//                entity.Property(e => e.FacilityPaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user_id");

//                entity.Property(e => e.FacilityProductionStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_production_status");

//                entity.Property(e => e.FacilityProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_province");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("facility_sys_id");

//                entity.Property(e => e.FacilityTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_code");

//                entity.Property(e => e.FacilityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_desc");
//            });

//            modelBuilder.Entity<TDimGrossNet>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_gross_net", "data_mart");

//                entity.Property(e => e.GrossNetAlias)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_alias");

//                entity.Property(e => e.GrossNetId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_id");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.GrossNetProperty)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_property");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<TDimNormalizedTime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_normalized_time", "data_mart");

//                entity.Property(e => e.DayName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name");

//                entity.Property(e => e.DayName2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name2");

//                entity.Property(e => e.DayNumber).HasColumnName("day_number");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.WeekName)
//                    .HasMaxLength(22)
//                    .IsUnicode(false)
//                    .HasColumnName("week_name");

//                entity.Property(e => e.WeekNumber).HasColumnName("week_number");
//            });

//            modelBuilder.Entity<TDimNormalizedTime1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_normalized_time", "OLAPControl");

//                entity.Property(e => e.DayName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name");

//                entity.Property(e => e.DayName2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name2");

//                entity.Property(e => e.DayNumber).HasColumnName("day_number");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.WeekName)
//                    .HasMaxLength(22)
//                    .IsUnicode(false)
//                    .HasColumnName("week_name");

//                entity.Property(e => e.WeekNumber).HasColumnName("week_number");
//            });

//            modelBuilder.Entity<TDimOrganization>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_organization", "data_mart");

//                entity.Property(e => e.AdminCostCentre)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("admin_cost_centre");

//                entity.Property(e => e.CashCallDrawDownFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cash_call_draw_down_flag");

//                entity.Property(e => e.CountryForTaxation).HasColumnName("country_for_taxation");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.FiscalYearEnd).HasColumnName("fiscal_year_end");

//                entity.Property(e => e.GstRegistrationNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("gst_registration_number");

//                entity.Property(e => e.IsBaMatchingEntry)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_ba_matching_entry");

//                entity.Property(e => e.JibInvoiceOrgId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_invoice_org_id");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_update_user");

//                entity.Property(e => e.MultiTierJibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("multi_tier_jib_flag");

//                entity.Property(e => e.NonStandardVolumeEntryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("non_standard_volume_entry_flag");

//                entity.Property(e => e.OperatingCurrencyCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("operating_currency_code");

//                entity.Property(e => e.OrganizationId).HasColumnName("organization_id");

//                entity.Property(e => e.OrganizationName)
//                    .HasMaxLength(53)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_name");

//                entity.Property(e => e.OrganizationTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_type_code");

//                entity.Property(e => e.ProfileGroupCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("profile_group_code");

//                entity.Property(e => e.ReportingCurrencyCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_currency_code");

//                entity.Property(e => e.SelfSustainingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("self_sustaining_flag");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.TerminationUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("termination_user");
//            });

//            modelBuilder.Entity<TDimOwner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_owner", "data_mart_metrix");

//                entity.Property(e => e.OwnerGovtCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Govt_Code");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_ID");

//                entity.Property(e => e.OwnerName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Name");

//                entity.Property(e => e.OwnerProvince)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Province");
//            });

//            modelBuilder.Entity<TDimProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_product", "data_mart_metrix");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.ProductGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group");

//                entity.Property(e => e.ProductGroupSort).HasColumnName("product_group_sort");

//                entity.Property(e => e.ProductGroupTotal)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group_total");

//                entity.Property(e => e.ProductGroupTotalSort).HasColumnName("product_group_total_sort");

//                entity.Property(e => e.ProductSortOrder).HasColumnName("product_sort_order");
//            });

//            modelBuilder.Entity<TDimProduct20210225>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_product_20210225", "data_mart_metrix");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.ProductGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group");

//                entity.Property(e => e.ProductGroupSort).HasColumnName("product_group_sort");

//                entity.Property(e => e.ProductGroupTotal)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group_total");

//                entity.Property(e => e.ProductGroupTotalSort).HasColumnName("product_group_total_sort");

//                entity.Property(e => e.ProductSortOrder).HasColumnName("product_sort_order");
//            });

//            modelBuilder.Entity<TDimPurchaser>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_purchaser", "data_mart_metrix");

//                entity.Property(e => e.PurchaserGrouping)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_grouping");

//                entity.Property(e => e.PurchaserId).HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_name");
//            });

//            modelBuilder.Entity<TDimPurchaser20210105>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_purchaser_20210105", "data_mart_metrix");

//                entity.Property(e => e.PurchaserGrouping)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_grouping");

//                entity.Property(e => e.PurchaserId).HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_name");
//            });

//            modelBuilder.Entity<TDimPurchaserSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_purchaser_sequence", "data_mart_metrix");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");
//            });

//            modelBuilder.Entity<TDimRoyaltyObligationSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_royalty_obligation_sequence", "data_mart_metrix");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");
//            });

//            modelBuilder.Entity<TDimSalesType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_sales_type", "data_mart_metrix");

//                entity.Property(e => e.IsRoyalty).HasColumnName("is_royalty");

//                entity.Property(e => e.IsSales).HasColumnName("is_sales");

//                entity.Property(e => e.OpNonOp)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("op_non_op");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type_code");

//                entity.Property(e => e.SalesTypeSortKey).HasColumnName("sales_type_sort_key");
//            });

//            modelBuilder.Entity<TDimScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_scenario", "data_mart");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimScenario20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_scenario_20220513", "data_mart");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimScenarioFdcDowntime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_scenario_fdc_downtime", "data_mart");

//                entity.Property(e => e.ScenarioDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_desc");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_id");

//                entity.Property(e => e.ScenarioKey).HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<TDimScenarioTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_scenario_typecurves", "data_mart");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimSourceEntityValnavEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_source_entity_valnav_entities", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(29)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Incentive_Type");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength).HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TDimTargetFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_target_facility", "data_mart_metrix");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_code");

//                entity.Property(e => e.FacilityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_desc");

//                entity.Property(e => e.TargetFacilityGovernmentCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_government_code");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TargetFacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_name");

//                entity.Property(e => e.TargetFacilityOperatorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_operator_id");

//                entity.Property(e => e.TargetFacilityOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_operator_name");

//                entity.Property(e => e.TargetFacilityProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_province");
//            });

//            modelBuilder.Entity<TDimValnavGrossNet>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_valnav_gross_net", "data_mart");

//                entity.Property(e => e.GrossNetAlias)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_alias");

//                entity.Property(e => e.GrossNetId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_id");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimValnavNormalizedTime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_valnav_normalized_time", "data_mart");

//                entity.Property(e => e.DayName)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name");

//                entity.Property(e => e.DayNumber).HasColumnName("day_number");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.WeekName)
//                    .HasMaxLength(22)
//                    .IsUnicode(false)
//                    .HasColumnName("week_name");

//                entity.Property(e => e.WeekNumber).HasColumnName("week_number");
//            });

//            modelBuilder.Entity<TDimValnavReserveCategory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_valnav_reserve_category", "data_mart");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ReserveCategoryAlias)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_alias");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TDimVendor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_vendor", "data_mart");

//                entity.Property(e => e.Aboriginal)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("aboriginal");

//                entity.Property(e => e.ApCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ap_credit_days");

//                entity.Property(e => e.ArCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_credit_days");

//                entity.Property(e => e.BaCreditStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_credit_status");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_type_code");

//                entity.Property(e => e.EncanaBaNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("encana_ba_number");

//                entity.Property(e => e.GovtEntity)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_entity");

//                entity.Property(e => e.GovtParent)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_parent");

//                entity.Property(e => e.HoldDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hold_date");

//                entity.Property(e => e.InactiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("inactive_date");

//                entity.Property(e => e.InvoiceId)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_id");

//                entity.Property(e => e.ParentId).HasColumnName("parent_id");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_code");

//                entity.Property(e => e.VendorAlias)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_alias");

//                entity.Property(e => e.VendorGrouping)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_grouping");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VendorSort)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_sort");
//            });

//            modelBuilder.Entity<TDimWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_dim_well", "data_mart_metrix");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Cost_Centre_Code");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrownRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("crown_royalty_percent");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("federal_percent");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Formatted_UWI");

//                entity.Property(e => e.FreeholdRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("freehold_royalty_percent");

//                entity.Property(e => e.OilRoyaltyEntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Oil_Royalty_Entity_ID");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("Primary_Product");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Status");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportLiquidAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("Report_Liquid_as_Condensate");

//                entity.Property(e => e.ReserveCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Reserve_Code");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyEntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Royalty_Entity_ID");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.UniqueIdentifier)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unique_Identifier");

//                entity.Property(e => e.UnitCostCentreCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Cost_Centre_Code");

//                entity.Property(e => e.UnitGovtCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Govt_Code");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_ID");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Name");

//                entity.Property(e => e.UnitProvince)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Province");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellFacilityId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Facility_id");

//                entity.Property(e => e.WellPaResponsibleUser)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User");

//                entity.Property(e => e.WellPaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User_ID");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_ID");

//                entity.Property(e => e.WellTractName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Name");

//                entity.Property(e => e.WellTractProvince)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Province");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("Well_Tract_Sys_ID");

//                entity.Property(e => e.WellTractType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type");

//                entity.Property(e => e.WellTractTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type_Code");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<TFactAccumap>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_accumap", "stage_ihs");

//                entity.Property(e => e.ActivityDate).HasColumnName("activity_date");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DayCounter).HasColumnName("day_counter");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("License_Number");

//                entity.Property(e => e.NormalizedDaysKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_days_key");

//                entity.Property(e => e.OilBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("oil_metric_volume");

//                entity.Property(e => e.OnProdDateKey).HasColumnName("on_prod_date_key");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.PHours).HasColumnName("p_hours");

//                entity.Property(e => e.ProdmthDayCounter)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("prodmth_day_counter");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactAfe>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_afe", "data_mart");

//                entity.Property(e => e.AccountingPeriodId).HasColumnName("accounting_period_id");

//                entity.Property(e => e.ActivityPeriodId).HasColumnName("activity_period_id");

//                entity.Property(e => e.AfeId).HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("afe_job_status");

//                entity.Property(e => e.AfeJobType)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(150)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BudgetWedgeId)
//                    .HasMaxLength(80)
//                    .HasColumnName("budget_wedge_id");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(20)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.CdnDollars).HasColumnName("cdn_dollars");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .HasColumnName("data_source");

//                entity.Property(e => e.DurationOfWork).HasColumnName("duration_of_work");

//                entity.Property(e => e.EntityId).HasColumnName("entity_id");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(1)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GrossNetIndicator)
//                    .HasMaxLength(20)
//                    .HasColumnName("gross_net_indicator");

//                entity.Property(e => e.HeadCount).HasColumnName("head_count");

//                entity.Property(e => e.NetWorkingInterest).HasColumnName("net_working_interest");

//                entity.Property(e => e.NumberOfPermits).HasColumnName("number_of_permits");

//                entity.Property(e => e.NumberOfReports).HasColumnName("number_of_reports");

//                entity.Property(e => e.OrgBaId)
//                    .HasMaxLength(50)
//                    .HasColumnName("org_ba_id");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.TransactionLastLoadDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("transaction_last_load_date");

//                entity.Property(e => e.TransactionLastLoadId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("transaction_last_load_id");

//                entity.Property(e => e.TransactionPk)
//                    .HasMaxLength(200)
//                    .HasColumnName("transaction_pk");

//                entity.Property(e => e.UsDollars).HasColumnName("us_dollars");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(75)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorBaId)
//                    .HasMaxLength(50)
//                    .HasColumnName("vendor_ba_id");
//            });

//            modelBuilder.Entity<TFactApAr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_ap_ar", "data_mart");

//                entity.Property(e => e.AccountingMonth).HasColumnName("accounting_month");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.Cad)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("cad");

//                entity.Property(e => e.DueDate).HasColumnName("due_date");

//                entity.Property(e => e.InvcId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_type_code");

//                entity.Property(e => e.InvoiceAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invoice_amount");

//                entity.Property(e => e.InvoiceDate).HasColumnName("invoice_date");

//                entity.Property(e => e.LiTypeCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("li_type_code");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<TFactApArOpen>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_ap_ar_open", "data_mart");

//                entity.Property(e => e.AccountingMonth).HasColumnName("accounting_month");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.CadOpen)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("cad_open");

//                entity.Property(e => e.DueDate).HasColumnName("due_date");

//                entity.Property(e => e.InvcId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_type_code");

//                entity.Property(e => e.InvoiceAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invoice_amount");

//                entity.Property(e => e.InvoiceDate).HasColumnName("invoice_date");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<TFactFdc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_fdc", "data_mart");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_C02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProducedWater).HasColumnName("injected_produced_water");

//                entity.Property(e => e.InjectedSourceWater).HasColumnName("injected_source_water");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.StrokesPerMinute).HasColumnName("strokes_per_minute");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactFinanceBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_finance_budgets", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.CdnDollars).HasColumnName("cdn_dollars");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey).HasColumnName("organization_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<TFactGl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_gl", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance).HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey).HasColumnName("organization_key");

//                entity.Property(e => e.QbBoeVolume).HasColumnName("qb_boe_volume");

//                entity.Property(e => e.QbCad).HasColumnName("qb_cad");

//                entity.Property(e => e.QbImperialVolume).HasColumnName("qb_imperial_volume");

//                entity.Property(e => e.QbMcfeVolume).HasColumnName("qb_mcfe_volume");

//                entity.Property(e => e.QbMetricVolume).HasColumnName("qb_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<TFactLeaseopsOpexAccrual>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_leaseops_opex_accruals", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactMarketing>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_marketing", "datamart_marketing");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityYearMonth)
//                    .HasMaxLength(62)
//                    .IsUnicode(false)
//                    .HasColumnName("activity_year_month");

//                entity.Property(e => e.AllocatedVolume).HasColumnName("allocated_volume");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.MeterName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_name");

//                entity.Property(e => e.PartnerName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_name");

//                entity.Property(e => e.RawVolume).HasColumnName("raw_volume");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(153)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesVolume).HasColumnName("sales_volume");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.UwiName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_name");
//            });

//            modelBuilder.Entity<TFactMetrix>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactMetrix20210225>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_20210225", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactMetrix20210304>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_20210304", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactMetrixFee>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_fees", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_code");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("EntityID");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(3)
//                    .IsUnicode(false);

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_cost_centre_code");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_doi_sub_used");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_owner_id");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("expense_value");

//                entity.Property(e => e.ExpenseVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_boe");

//                entity.Property(e => e.ExpenseVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_imperial");

//                entity.Property(e => e.ExpenseVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_metric");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("gst_value");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("pst_value");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_cost_centre_code");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_doi_sub_used");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_owner_id");
//            });

//            modelBuilder.Entity<TFactMetrixFeesOp>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_fees_op", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_code");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("EntityID");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(3)
//                    .IsUnicode(false);

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_cost_centre_code");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_doi_sub_used");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_owner_id");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("expense_value");

//                entity.Property(e => e.ExpenseVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_boe");

//                entity.Property(e => e.ExpenseVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_imperial");

//                entity.Property(e => e.ExpenseVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_metric");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("gst_value");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("pst_value");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_cost_centre_code");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_doi_sub_used");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_owner_id");
//            });

//            modelBuilder.Entity<TFactMetrixOp>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_op", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactMetrixRoyalty>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_royalty", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyPayorId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor_id");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_value");

//                entity.Property(e => e.RoyaltyVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_boe");

//                entity.Property(e => e.RoyaltyVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_imperial");

//                entity.Property(e => e.RoyaltyVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_metric");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactMetrixRoyaltyOp>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_metrix_royalty_op", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyPayorId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor_id");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_value");

//                entity.Property(e => e.RoyaltyVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_boe");

//                entity.Property(e => e.RoyaltyVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_imperial");

//                entity.Property(e => e.RoyaltyVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_metric");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<TFactOpexBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_opex_budgets", "archive");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.LastArchiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_archive_date");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactOpexBudget1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_opex_budgets", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactOpexBudgets20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_opex_budgets_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactOpexBudgets20220526>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_opex_budgets_20220526", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactOpexBudgets20220607>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_opex_budgets_2022_06_07", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactSourceAccumapVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_accumap_volumes", "stage_ihs");

//                entity.Property(e => e.Cond).HasColumnName("cond");

//                entity.Property(e => e.Date).HasColumnType("date");

//                entity.Property(e => e.Gas).HasColumnName("gas");

//                entity.Property(e => e.Oil)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("oil");

//                entity.Property(e => e.PHour).HasColumnName("p_hour");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Water).HasColumnName("water");
//            });

//            modelBuilder.Entity<TFactSourceFdcProdview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_fdc_prodview", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactSourceFdcProdviewIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_fdc_prodview_incr", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactSourceFdcValnavGljVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_fdc_valnav_glj_volumes", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactSourceFdcValnavVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_fdc_valnav_volumes", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactSourceFdcValnavVolumesDaily>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_fdc_valnav_volumes_daily", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TFactSourceLeaseopsValnavVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_leaseops_valnav_volumes", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<TFactSourceQbyteWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_source_qbyte_working_interest", "stage");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(16)
//                    .IsUnicode(false);

//                entity.Property(e => e.AccountingPeriod).HasColumnName("accounting_period");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.CcTermDate).HasColumnName("cc_term_date");

//                entity.Property(e => e.CreateDate).HasColumnName("create_date");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.LastProductionDate).HasColumnName("last_production_date");

//                entity.Property(e => e.OnProductionDate).HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.RigReleaseDate).HasColumnName("rig_release_date");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(2)
//                    .IsUnicode(false);

//                entity.Property(e => e.SpudDate).HasColumnName("spud_date");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<TFactValnavFinancial>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Wi).HasColumnName("WI");
//            });

//            modelBuilder.Entity<TFactValnavFinancial20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Wi).HasColumnName("WI");
//            });

//            modelBuilder.Entity<TFactValnavFinancial20220517>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_20220517", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Wi).HasColumnName("WI");
//            });

//            modelBuilder.Entity<TFactValnavFinancialBudget2021Z>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_budget_2021_z", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Wi).HasColumnName("WI");
//            });

//            modelBuilder.Entity<TFactValnavFinancialGlj>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_glj", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavFinancialGlj20220330>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_glj_20220330", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavFinancialTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_typecurves", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavFinancialXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_xls", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavFinancialXls20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_financial_xls_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProduction2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_2", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProduction20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProduction20220517>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_20220517", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProductionBudget2021Z>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_budget_2021_z", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProductionGlj>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_glj", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProductionGlj20220330>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_glj_20220330", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProductionTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_typecurves", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavProductionTypecurvesDaily>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_production_typecurves_daily", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReserves20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReserves20220517>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_20220517", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesBudget2021Z>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_budget_2021_z", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ETL_Status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesGlj>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_glj", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesGlj20220330>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_glj_20220330", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_typecurves", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_xls", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFactValnavReservesXls20220513>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fact_valnav_reserves_xls_20220513", "data_mart");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<TFdcHistoryDataTest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fdc_history_data_TEST", "stage");

//                entity.Property(e => e.Acquisition)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ACQUISITION");

//                entity.Property(e => e.ActvyDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ACTVY_DATE");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_INCR");

//                entity.Property(e => e.BatteryNum)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_NUM");

//                entity.Property(e => e.Cad).HasColumnName("CAD");

//                entity.Property(e => e.CasingPressure).HasColumnName("CASING_PRESSURE");

//                entity.Property(e => e.CcHierarchy)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_HIERARCHY");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_TYPE");

//                entity.Property(e => e.ChokeSize).HasColumnName("CHOKE_SIZE");

//                entity.Property(e => e.CondensateBoeVolDly).HasColumnName("CONDENSATE_BOE_VOL_DLY");

//                entity.Property(e => e.CondensateImpVolDly).HasColumnName("CONDENSATE_IMP_VOL_DLY");

//                entity.Property(e => e.CondensateMcfeVolDly).HasColumnName("CONDENSATE_MCFE_VOL_DLY");

//                entity.Property(e => e.CondensateMetVolDly).HasColumnName("CONDENSATE_MET_VOL_DLY");

//                entity.Property(e => e.ContractOp)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_OP");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_TYPE");

//                entity.Property(e => e.ElectricCurrent).HasColumnName("ELECTRIC_CURRENT");

//                entity.Property(e => e.EssbaseUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ESSBASE_UWI");

//                entity.Property(e => e.GasBoeVolDly).HasColumnName("GAS_BOE_VOL_DLY");

//                entity.Property(e => e.GasImpVolDly).HasColumnName("GAS_IMP_VOL_DLY");

//                entity.Property(e => e.GasMcfeVolDly).HasColumnName("GAS_MCFE_VOL_DLY");

//                entity.Property(e => e.GasMetVolDly).HasColumnName("GAS_MET_VOL_DLY");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET");

//                entity.Property(e => e.HoursDown).HasColumnName("HOURS_DOWN");

//                entity.Property(e => e.HoursOn).HasColumnName("HOURS_ON");

//                entity.Property(e => e.InjectedCo2).HasColumnName("INJECTED_CO2");

//                entity.Property(e => e.InjectedGas).HasColumnName("INJECTED_GAS");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("INJECTED_PROD_WATER");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("INJECTED_SRC_WATER");

//                entity.Property(e => e.InjectionPressure).HasColumnName("INJECTION_PRESSURE");

//                entity.Property(e => e.JointsInHole).HasColumnName("JOINTS_IN_HOLE");

//                entity.Property(e => e.NglBoeVolDly).HasColumnName("NGL_BOE_VOL_DLY");

//                entity.Property(e => e.NglImpVolDly).HasColumnName("NGL_IMP_VOL_DLY");

//                entity.Property(e => e.NglMcfeVolDly).HasColumnName("NGL_MCFE_VOL_DLY");

//                entity.Property(e => e.NglMetVolDly).HasColumnName("NGL_MET_VOL_DLY");

//                entity.Property(e => e.OilBoeVolDly).HasColumnName("OIL_BOE_VOL_DLY");

//                entity.Property(e => e.OilImpVolDly).HasColumnName("OIL_IMP_VOL_DLY");

//                entity.Property(e => e.OilMcfeVolDly).HasColumnName("OIL_MCFE_VOL_DLY");

//                entity.Property(e => e.OilMetVolDly).HasColumnName("OIL_MET_VOL_DLY");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ONSTREAM_DATE");

//                entity.Property(e => e.OnstreamYear)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ONSTREAM_YEAR");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("OP_NONOP");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ORGANIZATIONS");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.Period)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PERIOD");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PLAY");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PRODUCT");

//                entity.Property(e => e.ProductionDaysOn)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DAYS_ON");

//                entity.Property(e => e.ProductionDaysOnId)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_DAYS_ON_ID");

//                entity.Property(e => e.RotarySpeed).HasColumnName("ROTARY_SPEED");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("RUN_ID");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_ID");

//                entity.Property(e => e.SiteType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_TYPE");

//                entity.Property(e => e.StrokeSpeed).HasColumnName("STROKE_SPEED");

//                entity.Property(e => e.SwbWheadBswCut).HasColumnName("SWB_WHEAD_BSW_CUT");

//                entity.Property(e => e.SwbWheadSandCut).HasColumnName("SWB_WHEAD_SAND_CUT");

//                entity.Property(e => e.TotalBoeVolDly).HasColumnName("TOTAL_BOE_VOL_DLY");

//                entity.Property(e => e.TubingPressure).HasColumnName("TUBING_PRESSURE");

//                entity.Property(e => e.Usd).HasColumnName("USD");

//                entity.Property(e => e.WaterBoeVolDly).HasColumnName("WATER_BOE_VOL_DLY");

//                entity.Property(e => e.WaterImpVolDly).HasColumnName("WATER_IMP_VOL_DLY");

//                entity.Property(e => e.WaterMcfeVolDly).HasColumnName("WATER_MCFE_VOL_DLY");

//                entity.Property(e => e.WaterMetVolDly).HasColumnName("WATER_MET_VOL_DLY");

//                entity.Property(e => e.WellHeadPressure).HasColumnName("WELL_HEAD_PRESSURE");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.Years)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("YEARS");
//            });

//            modelBuilder.Entity<TFdcHistoryDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fdc_history_data", "stage");

//                entity.Property(e => e.Acquisition)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ACQUISITION");

//                entity.Property(e => e.ActvyDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ACTVY_DATE");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_INCR");

//                entity.Property(e => e.BatteryNum)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_NUM");

//                entity.Property(e => e.Cad).HasColumnName("CAD");

//                entity.Property(e => e.CasingPressure).HasColumnName("CASING_PRESSURE");

//                entity.Property(e => e.CcHierarchy)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_HIERARCHY");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_TYPE");

//                entity.Property(e => e.ChokeSize).HasColumnName("CHOKE_SIZE");

//                entity.Property(e => e.CondensateBoeVolDly).HasColumnName("CONDENSATE_BOE_VOL_DLY");

//                entity.Property(e => e.CondensateImpVolDly).HasColumnName("CONDENSATE_IMP_VOL_DLY");

//                entity.Property(e => e.CondensateMcfeVolDly).HasColumnName("CONDENSATE_MCFE_VOL_DLY");

//                entity.Property(e => e.CondensateMetVolDly).HasColumnName("CONDENSATE_MET_VOL_DLY");

//                entity.Property(e => e.ContractOp)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_OP");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_TYPE");

//                entity.Property(e => e.ElectricCurrent).HasColumnName("ELECTRIC_CURRENT");

//                entity.Property(e => e.EssbaseUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ESSBASE_UWI");

//                entity.Property(e => e.GasBoeVolDly).HasColumnName("GAS_BOE_VOL_DLY");

//                entity.Property(e => e.GasImpVolDly).HasColumnName("GAS_IMP_VOL_DLY");

//                entity.Property(e => e.GasMcfeVolDly).HasColumnName("GAS_MCFE_VOL_DLY");

//                entity.Property(e => e.GasMetVolDly).HasColumnName("GAS_MET_VOL_DLY");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET");

//                entity.Property(e => e.HoursDown).HasColumnName("HOURS_DOWN");

//                entity.Property(e => e.HoursOn).HasColumnName("HOURS_ON");

//                entity.Property(e => e.InjectedCo2).HasColumnName("INJECTED_CO2");

//                entity.Property(e => e.InjectedGas).HasColumnName("INJECTED_GAS");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("INJECTED_PROD_WATER");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("INJECTED_SRC_WATER");

//                entity.Property(e => e.InjectionPressure).HasColumnName("INJECTION_PRESSURE");

//                entity.Property(e => e.JointsInHole).HasColumnName("JOINTS_IN_HOLE");

//                entity.Property(e => e.NglBoeVolDly).HasColumnName("NGL_BOE_VOL_DLY");

//                entity.Property(e => e.NglImpVolDly).HasColumnName("NGL_IMP_VOL_DLY");

//                entity.Property(e => e.NglMcfeVolDly).HasColumnName("NGL_MCFE_VOL_DLY");

//                entity.Property(e => e.NglMetVolDly).HasColumnName("NGL_MET_VOL_DLY");

//                entity.Property(e => e.OilBoeVolDly).HasColumnName("OIL_BOE_VOL_DLY");

//                entity.Property(e => e.OilImpVolDly).HasColumnName("OIL_IMP_VOL_DLY");

//                entity.Property(e => e.OilMcfeVolDly).HasColumnName("OIL_MCFE_VOL_DLY");

//                entity.Property(e => e.OilMetVolDly).HasColumnName("OIL_MET_VOL_DLY");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ONSTREAM_DATE");

//                entity.Property(e => e.OnstreamYear)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ONSTREAM_YEAR");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("OP_NONOP");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ORGANIZATIONS");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.Period)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PERIOD");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PLAY");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PRODUCT");

//                entity.Property(e => e.ProductionDaysOn)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DAYS_ON");

//                entity.Property(e => e.ProductionDaysOnId)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_DAYS_ON_ID");

//                entity.Property(e => e.RotarySpeed).HasColumnName("ROTARY_SPEED");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("RUN_ID");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_ID");

//                entity.Property(e => e.SiteType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_TYPE");

//                entity.Property(e => e.StrokeSpeed).HasColumnName("STROKE_SPEED");

//                entity.Property(e => e.SwbWheadBswCut).HasColumnName("SWB_WHEAD_BSW_CUT");

//                entity.Property(e => e.SwbWheadSandCut).HasColumnName("SWB_WHEAD_SAND_CUT");

//                entity.Property(e => e.TotalBoeVolDly).HasColumnName("TOTAL_BOE_VOL_DLY");

//                entity.Property(e => e.TubingPressure).HasColumnName("TUBING_PRESSURE");

//                entity.Property(e => e.Usd).HasColumnName("USD");

//                entity.Property(e => e.WaterBoeVolDly).HasColumnName("WATER_BOE_VOL_DLY");

//                entity.Property(e => e.WaterImpVolDly).HasColumnName("WATER_IMP_VOL_DLY");

//                entity.Property(e => e.WaterMcfeVolDly).HasColumnName("WATER_MCFE_VOL_DLY");

//                entity.Property(e => e.WaterMetVolDly).HasColumnName("WATER_MET_VOL_DLY");

//                entity.Property(e => e.WellHeadPressure).HasColumnName("WELL_HEAD_PRESSURE");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.Years)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("YEARS");
//            });

//            modelBuilder.Entity<TFieldticketsFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fieldtickets_facts", "openinvoice");

//                entity.Property(e => e.ApproverName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("approver_name");

//                entity.Property(e => e.BuyerDuns)
//                    .HasMaxLength(500)
//                    .HasColumnName("buyer_DUNS");

//                entity.Property(e => e.BuyerName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("buyer_name");

//                entity.Property(e => e.CadDollars).HasColumnName("cad_dollars");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(4000)
//                    .HasColumnName("description");

//                entity.Property(e => e.Driver)
//                    .HasMaxLength(1000)
//                    .HasColumnName("driver");

//                entity.Property(e => e.InvoicedStatus)
//                    .HasMaxLength(1000)
//                    .HasColumnName("invoiced_status");

//                entity.Property(e => e.ItemId)
//                    .HasMaxLength(100)
//                    .HasColumnName("item_id");

//                entity.Property(e => e.LastActionDatetime).HasColumnName("last_action_datetime");

//                entity.Property(e => e.LineitemDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_description");

//                entity.Property(e => e.LineitemNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("lineitem_number");

//                entity.Property(e => e.LineitemPayload)
//                    .HasMaxLength(1000)
//                    .HasColumnName("lineitem_payload");

//                entity.Property(e => e.LineitemProductServiceCode)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_product_service_code");

//                entity.Property(e => e.LineitemProductServiceId)
//                    .HasMaxLength(500)
//                    .HasColumnName("lineitem_product_service_id");

//                entity.Property(e => e.M3Volumes).HasColumnName("m3_volumes");

//                entity.Property(e => e.Major)
//                    .HasMaxLength(100)
//                    .HasColumnName("major");

//                entity.Property(e => e.MajorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("major_description");

//                entity.Property(e => e.Minor)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor");

//                entity.Property(e => e.MinorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("minor_description");

//                entity.Property(e => e.OrderedbyUserid)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_userid");

//                entity.Property(e => e.OrderedbyUsername)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_username");

//                entity.Property(e => e.ReferencingInvoiceNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("referencing_invoice_number");

//                entity.Property(e => e.ServiceDate)
//                    .HasColumnType("date")
//                    .HasColumnName("service_date");

//                entity.Property(e => e.SupplierName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_name");

//                entity.Property(e => e.SupplierNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("supplier_number");

//                entity.Property(e => e.SupplierSitename)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_sitename");

//                entity.Property(e => e.TicketNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_number");

//                entity.Property(e => e.TicketStatus)
//                    .HasMaxLength(500)
//                    .HasColumnName("ticket_status");

//                entity.Property(e => e.TicketType)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_type");

//                entity.Property(e => e.TotalAmount).HasColumnName("total_amount");

//                entity.Property(e => e.TruckNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("truckNumber");
//            });

//            modelBuilder.Entity<TFieldticketsFacts20220414>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_fieldtickets_facts_2022_04_14", "openinvoice");

//                entity.Property(e => e.ApproverName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("approver_name");

//                entity.Property(e => e.BuyerDuns)
//                    .HasMaxLength(500)
//                    .HasColumnName("buyer_DUNS");

//                entity.Property(e => e.BuyerName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("buyer_name");

//                entity.Property(e => e.CadDollars).HasColumnName("cad_dollars");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(4000)
//                    .HasColumnName("description");

//                entity.Property(e => e.Driver)
//                    .HasMaxLength(1000)
//                    .HasColumnName("driver");

//                entity.Property(e => e.InvoicedStatus)
//                    .HasMaxLength(1000)
//                    .HasColumnName("invoiced_status");

//                entity.Property(e => e.ItemId)
//                    .HasMaxLength(100)
//                    .HasColumnName("item_id");

//                entity.Property(e => e.LineitemProductServiceCode)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_product_service_code");

//                entity.Property(e => e.LineitemProductServiceId)
//                    .HasMaxLength(500)
//                    .HasColumnName("lineitem_product_service_id");

//                entity.Property(e => e.M3Volumes).HasColumnName("m3_volumes");

//                entity.Property(e => e.Major)
//                    .HasMaxLength(100)
//                    .HasColumnName("major");

//                entity.Property(e => e.MajorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("major_description");

//                entity.Property(e => e.Minor)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor");

//                entity.Property(e => e.MinorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("minor_description");

//                entity.Property(e => e.OrderedbyUserid)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_userid");

//                entity.Property(e => e.OrderedbyUsername)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_username");

//                entity.Property(e => e.ReferencingInvoiceNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("referencing_invoice_number");

//                entity.Property(e => e.ServiceDate)
//                    .HasColumnType("date")
//                    .HasColumnName("service_date");

//                entity.Property(e => e.SupplierName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_name");

//                entity.Property(e => e.SupplierNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("supplier_number");

//                entity.Property(e => e.SupplierSitename)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_sitename");

//                entity.Property(e => e.TicketNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_number");

//                entity.Property(e => e.TicketStatus)
//                    .HasMaxLength(500)
//                    .HasColumnName("ticket_status");

//                entity.Property(e => e.TicketType)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_type");

//                entity.Property(e => e.TotalAmount).HasColumnName("total_amount");

//                entity.Property(e => e.TruckNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("truckNumber");
//            });

//            modelBuilder.Entity<TIhsAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_attributes", "stage");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.LastProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("province_state");

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("datetime")
//                    .HasColumnName("rig_release");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");
//            });

//            modelBuilder.Entity<TIhsBusinessAssociate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_business_associate", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.BaAbbreviation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_ABBREVIATION");

//                entity.Property(e => e.BaCategory)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_CATEGORY");

//                entity.Property(e => e.BaCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_CODE");

//                entity.Property(e => e.BaGroup)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_GROUP");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_NAME");

//                entity.Property(e => e.BaShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_SHORT_NAME");

//                entity.Property(e => e.BaType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_TYPE");

//                entity.Property(e => e.BusinessAssociate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BUSINESS_ASSOCIATE");

//                entity.Property(e => e.CreditCheckDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREDIT_CHECK_DATE");

//                entity.Property(e => e.CreditCheckInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CREDIT_CHECK_IND");

//                entity.Property(e => e.CreditCheckSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CREDIT_CHECK_SOURCE");

//                entity.Property(e => e.CreditRating)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CREDIT_RATING");

//                entity.Property(e => e.CreditRatingSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CREDIT_RATING_SOURCE");

//                entity.Property(e => e.CurrentStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_STATUS");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("FIRST_NAME");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_NAME");

//                entity.Property(e => e.MainEmailAddress)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAIN_EMAIL_ADDRESS");

//                entity.Property(e => e.MainFaxNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAIN_FAX_NUM");

//                entity.Property(e => e.MainPhoneNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAIN_PHONE_NUM");

//                entity.Property(e => e.MainWebUrl)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAIN_WEB_URL");

//                entity.Property(e => e.MiddleInitial)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("MIDDLE_INITIAL");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");
//            });

//            modelBuilder.Entity<TIhsField>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_field", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.DiscoveryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DISCOVERY_DATE");

//                entity.Property(e => e.District)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FieldAbbreviation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_ABBREVIATION");

//                entity.Property(e => e.FieldId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_ID");

//                entity.Property(e => e.FieldName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_NAME");

//                entity.Property(e => e.FieldType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_TYPE");

//                entity.Property(e => e.GroupFieldId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GROUP_FIELD_ID");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");
//            });

//            modelBuilder.Entity<TIhsPden>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.CurrentOperator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_OPERATOR");

//                entity.Property(e => e.CurrentProdStrName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_PROD_STR_NAME");

//                entity.Property(e => e.CurrentStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURRENT_STATUS_DATE");

//                entity.Property(e => e.CurrentWellStrNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_WELL_STR_NUMBER");

//                entity.Property(e => e.District)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.EnhancedRecoveryType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENHANCED_RECOVERY_TYPE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.FieldId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_ID");

//                entity.Property(e => e.GeographicRegion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOGRAPHIC_REGION");

//                entity.Property(e => e.GeologicProvince)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOLOGIC_PROVINCE");

//                entity.Property(e => e.LastInjectionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_INJECTION_DATE");

//                entity.Property(e => e.LastProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_PRODUCTION_DATE");

//                entity.Property(e => e.LastReportedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_REPORTED_DATE");

//                entity.Property(e => e.LocationDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_DESC");

//                entity.Property(e => e.LocationDescType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_DESC_TYPE");

//                entity.Property(e => e.OnInjectionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ON_INJECTION_DATE");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ON_PRODUCTION_DATE");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_NAME");

//                entity.Property(e => e.PdenShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SHORT_NAME");

//                entity.Property(e => e.PdenStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_STATUS");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PlotName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_NAME");

//                entity.Property(e => e.PlotSymbol)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_SYMBOL");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PRODUCT");

//                entity.Property(e => e.ProductionMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_METHOD");

//                entity.Property(e => e.ProprietaryInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROPRIETARY_IND");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StateOrFederalWaters)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATE_OR_FEDERAL_WATERS");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_UNIT_ID");

//                entity.Property(e => e.StringSerialNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRING_SERIAL_NUMBER");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.XAllowType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ALLOW_TYPE");

//                entity.Property(e => e.XBaseDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_BASE_DEPTH");

//                entity.Property(e => e.XBatteryId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_BATTERY_ID");

//                entity.Property(e => e.XBlockId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_BLOCK_ID");

//                entity.Property(e => e.XCommingled)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_COMMINGLED");

//                entity.Property(e => e.XControlWellInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CONTROL_WELL_IND");

//                entity.Property(e => e.XDispInjApproval)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_DISP_INJ_APPROVAL");

//                entity.Property(e => e.XDispInjApprovalNumber)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("X_DISP_INJ_APPROVAL_NUMBER");

//                entity.Property(e => e.XFacilityId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_FACILITY_ID");

//                entity.Property(e => e.XOffTarget)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OFF_TARGET");

//                entity.Property(e => e.XOilDensity)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OIL_DENSITY");

//                entity.Property(e => e.XOnprodGas)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_GAS");

//                entity.Property(e => e.XOnprodOil)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_OIL");

//                entity.Property(e => e.XOnprodWater)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_WATER");

//                entity.Property(e => e.XPenaltyRelief)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PENALTY_RELIEF");

//                entity.Property(e => e.XPendS4Ind)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PEND_S4_IND");

//                entity.Property(e => e.XProdFreq)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROD_FREQ");

//                entity.Property(e => e.XProdSpacingUnit)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROD_SPACING_UNIT");

//                entity.Property(e => e.XProjectId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROJECT_ID");

//                entity.Property(e => e.XPsuSurplusInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PSU_SURPLUS_IND");

//                entity.Property(e => e.XSetGor)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("X_SET_GOR");

//                entity.Property(e => e.XSetGorDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_SET_GOR_DATE");

//                entity.Property(e => e.XSpecialPenaltyRelief)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SPECIAL_PENALTY_RELIEF");

//                entity.Property(e => e.XSpecialPsuSurplus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SPECIAL_PSU_SURPLUS");

//                entity.Property(e => e.XTopDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_TOP_DEPTH");

//                entity.Property(e => e.XUnitGasInterest)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("X_UNIT_GAS_INTEREST");

//                entity.Property(e => e.XUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UNIT_ID");

//                entity.Property(e => e.XUnitOilInterest)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("X_UNIT_OIL_INTEREST");

//                entity.Property(e => e.XWellheadPress)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("X_WELLHEAD_PRESS");
//            });

//            modelBuilder.Entity<TIhsPden1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.CurrentOperator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_OPERATOR");

//                entity.Property(e => e.CurrentProdStrName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_PROD_STR_NAME");

//                entity.Property(e => e.CurrentStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURRENT_STATUS_DATE");

//                entity.Property(e => e.CurrentWellStrNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_WELL_STR_NUMBER");

//                entity.Property(e => e.District)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.EnhancedRecoveryType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENHANCED_RECOVERY_TYPE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FacilityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_TYPE");

//                entity.Property(e => e.FieldId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_ID");

//                entity.Property(e => e.GeographicRegion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOGRAPHIC_REGION");

//                entity.Property(e => e.GeologicProvince)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOLOGIC_PROVINCE");

//                entity.Property(e => e.LastInjectionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_INJECTION_DATE");

//                entity.Property(e => e.LastProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_PRODUCTION_DATE");

//                entity.Property(e => e.LastReportedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_REPORTED_DATE");

//                entity.Property(e => e.LocationDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_DESC");

//                entity.Property(e => e.LocationDescType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_DESC_TYPE");

//                entity.Property(e => e.OnInjectionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ON_INJECTION_DATE");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ON_PRODUCTION_DATE");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_NAME");

//                entity.Property(e => e.PdenShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SHORT_NAME");

//                entity.Property(e => e.PdenStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_STATUS");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PlotName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_NAME");

//                entity.Property(e => e.PlotSymbol)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_SYMBOL");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PRODUCT");

//                entity.Property(e => e.ProductionMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_METHOD");

//                entity.Property(e => e.ProprietaryInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROPRIETARY_IND");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StateOrFederalWaters)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATE_OR_FEDERAL_WATERS");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_UNIT_ID");

//                entity.Property(e => e.StringSerialNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRING_SERIAL_NUMBER");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.XAllowType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ALLOW_TYPE");

//                entity.Property(e => e.XBaseDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_BASE_DEPTH");

//                entity.Property(e => e.XBatteryId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_BATTERY_ID");

//                entity.Property(e => e.XBlockId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_BLOCK_ID");

//                entity.Property(e => e.XCommingled)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_COMMINGLED");

//                entity.Property(e => e.XControlWellInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CONTROL_WELL_IND");

//                entity.Property(e => e.XDispInjApproval)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_DISP_INJ_APPROVAL");

//                entity.Property(e => e.XDispInjApprovalNumber)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("X_DISP_INJ_APPROVAL_NUMBER");

//                entity.Property(e => e.XFacilityId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_FACILITY_ID");

//                entity.Property(e => e.XOffTarget)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OFF_TARGET");

//                entity.Property(e => e.XOilDensity)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OIL_DENSITY");

//                entity.Property(e => e.XOnprodGas)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_GAS");

//                entity.Property(e => e.XOnprodOil)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_OIL");

//                entity.Property(e => e.XOnprodWater)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_WATER");

//                entity.Property(e => e.XPenaltyRelief)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PENALTY_RELIEF");

//                entity.Property(e => e.XPendS4Ind)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PEND_S4_IND");

//                entity.Property(e => e.XProdFreq)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROD_FREQ");

//                entity.Property(e => e.XProdSpacingUnit)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROD_SPACING_UNIT");

//                entity.Property(e => e.XProjectId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PROJECT_ID");

//                entity.Property(e => e.XPsuSurplusInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PSU_SURPLUS_IND");

//                entity.Property(e => e.XSetGor)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("X_SET_GOR");

//                entity.Property(e => e.XSetGorDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_SET_GOR_DATE");

//                entity.Property(e => e.XSpecialPenaltyRelief)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SPECIAL_PENALTY_RELIEF");

//                entity.Property(e => e.XSpecialPsuSurplus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SPECIAL_PSU_SURPLUS");

//                entity.Property(e => e.XTopDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_TOP_DEPTH");

//                entity.Property(e => e.XUnitGasInterest)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("X_UNIT_GAS_INTEREST");

//                entity.Property(e => e.XUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UNIT_ID");

//                entity.Property(e => e.XUnitOilInterest)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("X_UNIT_OIL_INTEREST");

//                entity.Property(e => e.XWellheadPress)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("X_WELLHEAD_PRESS");
//            });

//            modelBuilder.Entity<TIhsPdenProdZone>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_prod_zone", "stage");

//                entity.Property(e => e.BaseDepth)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("BASE_DEPTH");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.CompletionBase)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("COMPLETION_BASE");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("COMPLETION_DATE");

//                entity.Property(e => e.CompletionTop)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("COMPLETION_TOP");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PlugbackDate)
//                    .HasColumnType("date")
//                    .HasColumnName("PLUGBACK_DATE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.StratUnitAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("STRAT_UNIT_AGE");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_UNIT_ID");

//                entity.Property(e => e.TopDepth)
//                    .HasColumnType("numeric(9, 2)")
//                    .HasColumnName("TOP_DEPTH");
//            });

//            modelBuilder.Entity<TIhsPdenProductionMonth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_production_month", "stage");

//                entity.Property(e => e.BrkWater)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("BRK_WATER");

//                entity.Property(e => e.Ccut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("CCUT");

//                entity.Property(e => e.Cgr)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("CGR");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("COND");

//                entity.Property(e => e.CondActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("COND_ACT_DAY");

//                entity.Property(e => e.CondCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("COND_CAL_DAY");

//                entity.Property(e => e.CumCond)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_COND");

//                entity.Property(e => e.CumGas)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_GAS");

//                entity.Property(e => e.CumHours)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_HOURS");

//                entity.Property(e => e.CumOilBt)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_OIL_BT");

//                entity.Property(e => e.CumWater)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_WATER");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GAS");

//                entity.Property(e => e.GasActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GAS_ACT_DAY");

//                entity.Property(e => e.GasCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GAS_CAL_DAY");

//                entity.Property(e => e.GasFluidRatio)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("GAS_FLUID_RATIO");

//                entity.Property(e => e.Gor)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("GOR");

//                entity.Property(e => e.Hours)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("HOURS");

//                entity.Property(e => e.Last3Ccut)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_CCUT");

//                entity.Property(e => e.Last3Cgr)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_CGR");

//                entity.Property(e => e.Last3Fluid)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_FLUID");

//                entity.Property(e => e.Last3Ocut)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_OCUT");

//                entity.Property(e => e.LastProcess)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_PROCESS");

//                entity.Property(e => e.Month)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("MONTH");

//                entity.Property(e => e.Ocut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("OCUT");

//                entity.Property(e => e.OilActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OIL_ACT_DAY");

//                entity.Property(e => e.OilBt)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OIL_BT");

//                entity.Property(e => e.OilCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OIL_CAL_DAY");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.ProdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PROD_DATE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.SrcWater)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("SRC_WATER");

//                entity.Property(e => e.TotalFluid)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("TOTAL_FLUID");

//                entity.Property(e => e.TotalFluidActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_FLUID_ACT_DAY");

//                entity.Property(e => e.TotalFluidCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_FLUID_CAL_DAY");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("WATER");

//                entity.Property(e => e.WaterActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("WATER_ACT_DAY");

//                entity.Property(e => e.WaterCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("WATER_CAL_DAY");

//                entity.Property(e => e.Wcut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WCUT");

//                entity.Property(e => e.Wgr)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WGR");

//                entity.Property(e => e.Wor)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WOR");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");
//            });

//            modelBuilder.Entity<TIhsPdenProductionMonthIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_production_month_incr", "stage");

//                entity.Property(e => e.BrkWater)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("BRK_WATER");

//                entity.Property(e => e.Ccut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("CCUT");

//                entity.Property(e => e.Cgr)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("CGR");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("COND");

//                entity.Property(e => e.CondActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("COND_ACT_DAY");

//                entity.Property(e => e.CondCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("COND_CAL_DAY");

//                entity.Property(e => e.CumCond)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_COND");

//                entity.Property(e => e.CumGas)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_GAS");

//                entity.Property(e => e.CumHours)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_HOURS");

//                entity.Property(e => e.CumOilBt)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_OIL_BT");

//                entity.Property(e => e.CumWater)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("CUM_WATER");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GAS");

//                entity.Property(e => e.GasActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GAS_ACT_DAY");

//                entity.Property(e => e.GasCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GAS_CAL_DAY");

//                entity.Property(e => e.GasFluidRatio)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("GAS_FLUID_RATIO");

//                entity.Property(e => e.Gor)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("GOR");

//                entity.Property(e => e.Hours)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("HOURS");

//                entity.Property(e => e.Last3Ccut)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_CCUT");

//                entity.Property(e => e.Last3Cgr)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_CGR");

//                entity.Property(e => e.Last3Fluid)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_FLUID");

//                entity.Property(e => e.Last3Ocut)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("LAST_3_OCUT");

//                entity.Property(e => e.LastProcess)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_PROCESS");

//                entity.Property(e => e.Month)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("MONTH");

//                entity.Property(e => e.Ocut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("OCUT");

//                entity.Property(e => e.OilActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OIL_ACT_DAY");

//                entity.Property(e => e.OilBt)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OIL_BT");

//                entity.Property(e => e.OilCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OIL_CAL_DAY");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.ProdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PROD_DATE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.SrcWater)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("SRC_WATER");

//                entity.Property(e => e.TotalFluid)
//                    .HasColumnType("numeric(11, 1)")
//                    .HasColumnName("TOTAL_FLUID");

//                entity.Property(e => e.TotalFluidActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_FLUID_ACT_DAY");

//                entity.Property(e => e.TotalFluidCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_FLUID_CAL_DAY");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(8, 1)")
//                    .HasColumnName("WATER");

//                entity.Property(e => e.WaterActDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("WATER_ACT_DAY");

//                entity.Property(e => e.WaterCalDay)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("WATER_CAL_DAY");

//                entity.Property(e => e.Wcut)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WCUT");

//                entity.Property(e => e.Wgr)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WGR");

//                entity.Property(e => e.Wor)
//                    .HasColumnType("numeric(14, 6)")
//                    .HasColumnName("WOR");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");
//            });

//            modelBuilder.Entity<TIhsPdenVolByMonth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_vol_by_month", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.ActivityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVITY_TYPE");

//                entity.Property(e => e.AmendReason)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AMEND_REASON");

//                entity.Property(e => e.AmendmentSeqNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("AMENDMENT_SEQ_NO");

//                entity.Property(e => e.AprVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("APR_VOLUME");

//                entity.Property(e => e.AprVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("APR_VOLUME_QUAL");

//                entity.Property(e => e.AugVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("AUG_VOLUME");

//                entity.Property(e => e.AugVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("AUG_VOLUME_QUAL");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.CumVolume)
//                    .HasColumnType("numeric(16, 4)")
//                    .HasColumnName("CUM_VOLUME");

//                entity.Property(e => e.DecVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("DEC_VOLUME");

//                entity.Property(e => e.DecVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DEC_VOLUME_QUAL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FebVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("FEB_VOLUME");

//                entity.Property(e => e.FebVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FEB_VOLUME_QUAL");

//                entity.Property(e => e.JanVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JAN_VOLUME");

//                entity.Property(e => e.JanVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JAN_VOLUME_QUAL");

//                entity.Property(e => e.JulVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUL_VOLUME");

//                entity.Property(e => e.JulVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUL_VOLUME_QUAL");

//                entity.Property(e => e.JunVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUN_VOLUME");

//                entity.Property(e => e.JunVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUN_VOLUME_QUAL");

//                entity.Property(e => e.MarVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAR_VOLUME");

//                entity.Property(e => e.MarVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAR_VOLUME_QUAL");

//                entity.Property(e => e.MayVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAY_VOLUME");

//                entity.Property(e => e.MayVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAY_VOLUME_QUAL");

//                entity.Property(e => e.NovVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("NOV_VOLUME");

//                entity.Property(e => e.NovVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("NOV_VOLUME_QUAL");

//                entity.Property(e => e.OctVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("OCT_VOLUME");

//                entity.Property(e => e.OctVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("OCT_VOLUME_QUAL");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SOURCE");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PostedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("POSTED_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SepVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("SEP_VOLUME");

//                entity.Property(e => e.SepVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEP_VOLUME_QUAL");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.VolumeEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_END_DATE");

//                entity.Property(e => e.VolumeMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_METHOD");

//                entity.Property(e => e.VolumeOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_OUOM");

//                entity.Property(e => e.VolumeQualityOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_QUALITY_OUOM");

//                entity.Property(e => e.VolumeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_START_DATE");

//                entity.Property(e => e.VolumeUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_UOM");

//                entity.Property(e => e.XStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_STRAT_UNIT_ID");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");

//                entity.Property(e => e.YtdVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("YTD_VOLUME");
//            });

//            modelBuilder.Entity<TIhsPdenVolByMonth1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_vol_by_month", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.ActivityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVITY_TYPE");

//                entity.Property(e => e.AmendReason)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AMEND_REASON");

//                entity.Property(e => e.AmendmentSeqNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("AMENDMENT_SEQ_NO");

//                entity.Property(e => e.AprVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("APR_VOLUME");

//                entity.Property(e => e.AprVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("APR_VOLUME_QUAL");

//                entity.Property(e => e.AugVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("AUG_VOLUME");

//                entity.Property(e => e.AugVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("AUG_VOLUME_QUAL");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.CumVolume)
//                    .HasColumnType("numeric(16, 4)")
//                    .HasColumnName("CUM_VOLUME");

//                entity.Property(e => e.DecVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("DEC_VOLUME");

//                entity.Property(e => e.DecVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DEC_VOLUME_QUAL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FebVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("FEB_VOLUME");

//                entity.Property(e => e.FebVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FEB_VOLUME_QUAL");

//                entity.Property(e => e.JanVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JAN_VOLUME");

//                entity.Property(e => e.JanVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JAN_VOLUME_QUAL");

//                entity.Property(e => e.JulVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUL_VOLUME");

//                entity.Property(e => e.JulVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUL_VOLUME_QUAL");

//                entity.Property(e => e.JunVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUN_VOLUME");

//                entity.Property(e => e.JunVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUN_VOLUME_QUAL");

//                entity.Property(e => e.MarVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAR_VOLUME");

//                entity.Property(e => e.MarVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAR_VOLUME_QUAL");

//                entity.Property(e => e.MayVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAY_VOLUME");

//                entity.Property(e => e.MayVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAY_VOLUME_QUAL");

//                entity.Property(e => e.NovVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("NOV_VOLUME");

//                entity.Property(e => e.NovVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("NOV_VOLUME_QUAL");

//                entity.Property(e => e.OctVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("OCT_VOLUME");

//                entity.Property(e => e.OctVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("OCT_VOLUME_QUAL");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SOURCE");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PostedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("POSTED_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SepVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("SEP_VOLUME");

//                entity.Property(e => e.SepVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEP_VOLUME_QUAL");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.VolumeEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_END_DATE");

//                entity.Property(e => e.VolumeMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_METHOD");

//                entity.Property(e => e.VolumeOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_OUOM");

//                entity.Property(e => e.VolumeQualityOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_QUALITY_OUOM");

//                entity.Property(e => e.VolumeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_START_DATE");

//                entity.Property(e => e.VolumeUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_UOM");

//                entity.Property(e => e.XStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_STRAT_UNIT_ID");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");

//                entity.Property(e => e.YtdVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("YTD_VOLUME");
//            });

//            modelBuilder.Entity<TIhsPdenVolByMonthIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_vol_by_month_incr", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.ActivityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVITY_TYPE");

//                entity.Property(e => e.AmendReason)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AMEND_REASON");

//                entity.Property(e => e.AmendmentSeqNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("AMENDMENT_SEQ_NO");

//                entity.Property(e => e.AprVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("APR_VOLUME");

//                entity.Property(e => e.AprVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("APR_VOLUME_QUAL");

//                entity.Property(e => e.AugVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("AUG_VOLUME");

//                entity.Property(e => e.AugVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("AUG_VOLUME_QUAL");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.CumVolume)
//                    .HasColumnType("numeric(16, 4)")
//                    .HasColumnName("CUM_VOLUME");

//                entity.Property(e => e.DecVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("DEC_VOLUME");

//                entity.Property(e => e.DecVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DEC_VOLUME_QUAL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FebVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("FEB_VOLUME");

//                entity.Property(e => e.FebVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FEB_VOLUME_QUAL");

//                entity.Property(e => e.JanVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JAN_VOLUME");

//                entity.Property(e => e.JanVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JAN_VOLUME_QUAL");

//                entity.Property(e => e.JulVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUL_VOLUME");

//                entity.Property(e => e.JulVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUL_VOLUME_QUAL");

//                entity.Property(e => e.JunVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUN_VOLUME");

//                entity.Property(e => e.JunVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUN_VOLUME_QUAL");

//                entity.Property(e => e.MarVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAR_VOLUME");

//                entity.Property(e => e.MarVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAR_VOLUME_QUAL");

//                entity.Property(e => e.MayVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAY_VOLUME");

//                entity.Property(e => e.MayVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAY_VOLUME_QUAL");

//                entity.Property(e => e.NovVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("NOV_VOLUME");

//                entity.Property(e => e.NovVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("NOV_VOLUME_QUAL");

//                entity.Property(e => e.OctVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("OCT_VOLUME");

//                entity.Property(e => e.OctVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("OCT_VOLUME_QUAL");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SOURCE");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PostedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("POSTED_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SepVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("SEP_VOLUME");

//                entity.Property(e => e.SepVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEP_VOLUME_QUAL");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.VolumeEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_END_DATE");

//                entity.Property(e => e.VolumeMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_METHOD");

//                entity.Property(e => e.VolumeOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_OUOM");

//                entity.Property(e => e.VolumeQualityOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_QUALITY_OUOM");

//                entity.Property(e => e.VolumeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_START_DATE");

//                entity.Property(e => e.VolumeUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_UOM");

//                entity.Property(e => e.XStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_STRAT_UNIT_ID");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");

//                entity.Property(e => e.YtdVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("YTD_VOLUME");
//            });

//            modelBuilder.Entity<TIhsPdenVolByMonthIncr1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_pden_vol_by_month_incr", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.ActivityType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVITY_TYPE");

//                entity.Property(e => e.AmendReason)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AMEND_REASON");

//                entity.Property(e => e.AmendmentSeqNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("AMENDMENT_SEQ_NO");

//                entity.Property(e => e.AprVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("APR_VOLUME");

//                entity.Property(e => e.AprVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("APR_VOLUME_QUAL");

//                entity.Property(e => e.AugVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("AUG_VOLUME");

//                entity.Property(e => e.AugVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("AUG_VOLUME_QUAL");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.CumVolume)
//                    .HasColumnType("numeric(16, 4)")
//                    .HasColumnName("CUM_VOLUME");

//                entity.Property(e => e.DecVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("DEC_VOLUME");

//                entity.Property(e => e.DecVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DEC_VOLUME_QUAL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FebVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("FEB_VOLUME");

//                entity.Property(e => e.FebVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FEB_VOLUME_QUAL");

//                entity.Property(e => e.JanVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JAN_VOLUME");

//                entity.Property(e => e.JanVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JAN_VOLUME_QUAL");

//                entity.Property(e => e.JulVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUL_VOLUME");

//                entity.Property(e => e.JulVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUL_VOLUME_QUAL");

//                entity.Property(e => e.JunVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("JUN_VOLUME");

//                entity.Property(e => e.JunVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("JUN_VOLUME_QUAL");

//                entity.Property(e => e.MarVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAR_VOLUME");

//                entity.Property(e => e.MarVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAR_VOLUME_QUAL");

//                entity.Property(e => e.MayVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("MAY_VOLUME");

//                entity.Property(e => e.MayVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("MAY_VOLUME_QUAL");

//                entity.Property(e => e.NovVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("NOV_VOLUME");

//                entity.Property(e => e.NovVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("NOV_VOLUME_QUAL");

//                entity.Property(e => e.OctVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("OCT_VOLUME");

//                entity.Property(e => e.OctVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("OCT_VOLUME_QUAL");

//                entity.Property(e => e.PdenId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_ID");

//                entity.Property(e => e.PdenSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_SOURCE");

//                entity.Property(e => e.PdenType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PDEN_TYPE");

//                entity.Property(e => e.PoolId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_ID");

//                entity.Property(e => e.PostedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("POSTED_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SepVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("SEP_VOLUME");

//                entity.Property(e => e.SepVolumeQual)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEP_VOLUME_QUAL");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.VolumeEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_END_DATE");

//                entity.Property(e => e.VolumeMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_METHOD");

//                entity.Property(e => e.VolumeOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_OUOM");

//                entity.Property(e => e.VolumeQualityOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_QUALITY_OUOM");

//                entity.Property(e => e.VolumeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("VOLUME_START_DATE");

//                entity.Property(e => e.VolumeUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("VOLUME_UOM");

//                entity.Property(e => e.XStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_STRAT_UNIT_ID");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("YEAR");

//                entity.Property(e => e.YtdVolume)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("YTD_VOLUME");
//            });

//            modelBuilder.Entity<TIhsRWellProfileType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_r_well_profile_type", "stage");

//                entity.Property(e => e.Abbreviation)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("ABBREVIATION");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.WellProfileType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_PROFILE_TYPE");
//            });

//            modelBuilder.Entity<TIhsRWellProfileType1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_r_well_profile_type", "stage_ihs");

//                entity.Property(e => e.Abbreviation)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("ABBREVIATION");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.WellProfileType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_PROFILE_TYPE");
//            });

//            modelBuilder.Entity<TIhsRWellStatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_r_well_status", "stage");

//                entity.Property(e => e.Abbreviation)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("ABBREVIATION");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS");

//                entity.Property(e => e.StatusGroup)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS_GROUP");

//                entity.Property(e => e.StatusType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS_TYPE");
//            });

//            modelBuilder.Entity<TIhsWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well", "stage");

//                entity.Property(e => e.AbandonmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ABANDONMENT_DATE");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AssignedField)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNED_FIELD");

//                entity.Property(e => e.BaseNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_NODE_ID");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("BOTTOM_HOLE_LATITUDE");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("BOTTOM_HOLE_LONGITUDE");

//                entity.Property(e => e.CasingFlangeElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("CASING_FLANGE_ELEV");

//                entity.Property(e => e.CasingFlangeElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CASING_FLANGE_ELEV_OUOM");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("COMPLETION_DATE");

//                entity.Property(e => e.ConfidStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CONFID_STRAT_AGE");

//                entity.Property(e => e.ConfidStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFID_STRAT_NAME_SET_ID");

//                entity.Property(e => e.ConfidStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFID_STRAT_UNIT_ID");

//                entity.Property(e => e.ConfidentialDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CONFIDENTIAL_DATE");

//                entity.Property(e => e.ConfidentialDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("CONFIDENTIAL_DEPTH");

//                entity.Property(e => e.ConfidentialDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENTIAL_DEPTH_OUOM");

//                entity.Property(e => e.ConfidentialType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENTIAL_TYPE");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.County)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTY");

//                entity.Property(e => e.CurrentClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_CLASS");

//                entity.Property(e => e.CurrentStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_STATUS");

//                entity.Property(e => e.CurrentStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURRENT_STATUS_DATE");

//                entity.Property(e => e.DeepestDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DEEPEST_DEPTH");

//                entity.Property(e => e.DeepestDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEEPEST_DEPTH_OUOM");

//                entity.Property(e => e.DepthDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEPTH_DATUM");

//                entity.Property(e => e.DepthDatumElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DEPTH_DATUM_ELEV");

//                entity.Property(e => e.DepthDatumElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEPTH_DATUM_ELEV_OUOM");

//                entity.Property(e => e.DerrickFloorElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DERRICK_FLOOR_ELEV");

//                entity.Property(e => e.DerrickFloorElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DERRICK_FLOOR_ELEV_OUOM");

//                entity.Property(e => e.DifferenceLatMsl)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DIFFERENCE_LAT_MSL");

//                entity.Property(e => e.DiscoveryInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISCOVERY_IND");

//                entity.Property(e => e.District)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.DrillTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DRILL_TD");

//                entity.Property(e => e.DrillTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_TD_OUOM");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ElevRefDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ELEV_REF_DATUM");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FaultedInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FAULTED_IND");

//                entity.Property(e => e.FinalDrillDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FINAL_DRILL_DATE");

//                entity.Property(e => e.FinalTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("FINAL_TD");

//                entity.Property(e => e.FinalTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FINAL_TD_OUOM");

//                entity.Property(e => e.GeogCoordSystemId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOG_COORD_SYSTEM_ID");

//                entity.Property(e => e.GeographicRegion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOGRAPHIC_REGION");

//                entity.Property(e => e.GeologicProvince)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOLOGIC_PROVINCE");

//                entity.Property(e => e.GroundElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("GROUND_ELEV");

//                entity.Property(e => e.GroundElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GROUND_ELEV_OUOM");

//                entity.Property(e => e.GroundElevType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GROUND_ELEV_TYPE");

//                entity.Property(e => e.InitialClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INITIAL_CLASS");

//                entity.Property(e => e.KbElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("KB_ELEV");

//                entity.Property(e => e.KbElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("KB_ELEV_OUOM");

//                entity.Property(e => e.LeaseName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LEASE_NAME");

//                entity.Property(e => e.LeaseNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEASE_NUM");

//                entity.Property(e => e.LegalSurveyType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_SURVEY_TYPE");

//                entity.Property(e => e.LocationQualifier)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_QUALIFIER");

//                entity.Property(e => e.LocationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_TYPE");

//                entity.Property(e => e.LogTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("LOG_TD");

//                entity.Property(e => e.LogTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOG_TD_OUOM");

//                entity.Property(e => e.MaxTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("MAX_TVD");

//                entity.Property(e => e.MaxTvdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAX_TVD_OUOM");

//                entity.Property(e => e.NetPay)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("NET_PAY");

//                entity.Property(e => e.NetPayOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NET_PAY_OUOM");

//                entity.Property(e => e.OldestStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OLDEST_STRAT_AGE");

//                entity.Property(e => e.OldestStratNameSetAge)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_NAME_SET_AGE");

//                entity.Property(e => e.OldestStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_NAME_SET_ID");

//                entity.Property(e => e.OldestStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_UNIT_ID");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.ParentRelationshipType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_RELATIONSHIP_TYPE");

//                entity.Property(e => e.ParentUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_UWI");

//                entity.Property(e => e.PlatformId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_ID");

//                entity.Property(e => e.PlatformSfType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_SF_TYPE");

//                entity.Property(e => e.PlotName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_NAME");

//                entity.Property(e => e.PlotSymbol)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_SYMBOL");

//                entity.Property(e => e.PlugbackDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PLUGBACK_DEPTH");

//                entity.Property(e => e.PlugbackDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLUGBACK_DEPTH_OUOM");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PrimarySource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_SOURCE");

//                entity.Property(e => e.ProfileType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROFILE_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RegulatoryAgency)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_AGENCY");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RigOnSiteDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_ON_SITE_DATE");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.RotaryTableElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("ROTARY_TABLE_ELEV");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SourceDocument)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE_DOCUMENT");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SPUD_DATE");

//                entity.Property(e => e.StatusType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS_TYPE");

//                entity.Property(e => e.SubseaElevRefType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBSEA_ELEV_REF_TYPE");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("SURFACE_LATITUDE");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("SURFACE_LONGITUDE");

//                entity.Property(e => e.SurfaceNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURFACE_NODE_ID");

//                entity.Property(e => e.TaxCreditCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_CREDIT_CODE");

//                entity.Property(e => e.TdStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TD_STRAT_AGE");

//                entity.Property(e => e.TdStratNameSetAge)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_NAME_SET_AGE");

//                entity.Property(e => e.TdStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_NAME_SET_ID");

//                entity.Property(e => e.TdStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_UNIT_ID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WaterAcousticVel)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WATER_ACOUSTIC_VEL");

//                entity.Property(e => e.WaterAcousticVelOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_ACOUSTIC_VEL_OUOM");

//                entity.Property(e => e.WaterDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WATER_DEPTH");

//                entity.Property(e => e.WaterDepthDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_DEPTH_DATUM");

//                entity.Property(e => e.WaterDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_DEPTH_OUOM");

//                entity.Property(e => e.WellEventNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_EVENT_NUM");

//                entity.Property(e => e.WellGovernmentId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_GOVERNMENT_ID");

//                entity.Property(e => e.WellIntersectMd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WELL_INTERSECT_MD");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(66)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NUM");

//                entity.Property(e => e.WellNumericId)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("WELL_NUMERIC_ID");

//                entity.Property(e => e.WhipstockDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WHIPSTOCK_DEPTH");

//                entity.Property(e => e.WhipstockDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WHIPSTOCK_DEPTH_OUOM");

//                entity.Property(e => e.XConfidentialPeriod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CONFIDENTIAL_PERIOD");

//                entity.Property(e => e.XCurrentLicensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CURRENT_LICENSEE");

//                entity.Property(e => e.XDigitalLogInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_DIGITAL_LOG_IND");

//                entity.Property(e => e.XEventNum)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("X_EVENT_NUM");

//                entity.Property(e => e.XEventNumMax)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("X_EVENT_NUM_MAX");

//                entity.Property(e => e.XLateralLength)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_LATERAL_LENGTH");

//                entity.Property(e => e.XOffshoreInd)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OFFSHORE_IND");

//                entity.Property(e => e.XOninjectDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONINJECT_DATE");

//                entity.Property(e => e.XOnprodDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_DATE");

//                entity.Property(e => e.XOriginalStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_STATUS");

//                entity.Property(e => e.XOriginalUnit)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_UNIT");

//                entity.Property(e => e.XPlugbackTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_PLUGBACK_TVD");

//                entity.Property(e => e.XPool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_POOL");

//                entity.Property(e => e.XPreviousStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PREVIOUS_STATUS");

//                entity.Property(e => e.XPrimaryBoreholeUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PRIMARY_BOREHOLE_UWI");

//                entity.Property(e => e.XRasterLogInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_RASTER_LOG_IND");

//                entity.Property(e => e.XSurfaceAbandonType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SURFACE_ABANDON_TYPE");

//                entity.Property(e => e.XTdTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_TD_TVD");

//                entity.Property(e => e.XUwiDisplay)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UWI_DISPLAY");

//                entity.Property(e => e.XUwiSort)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UWI_SORT");

//                entity.Property(e => e.XWhipstockTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_WHIPSTOCK_TVD");
//            });

//            modelBuilder.Entity<TIhsWell1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well", "stage_ihs");

//                entity.Property(e => e.AbandonmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ABANDONMENT_DATE");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AssignedField)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSIGNED_FIELD");

//                entity.Property(e => e.BaseNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_NODE_ID");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("BOTTOM_HOLE_LATITUDE");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("BOTTOM_HOLE_LONGITUDE");

//                entity.Property(e => e.CasingFlangeElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("CASING_FLANGE_ELEV");

//                entity.Property(e => e.CasingFlangeElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CASING_FLANGE_ELEV_OUOM");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("COMPLETION_DATE");

//                entity.Property(e => e.ConfidStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CONFID_STRAT_AGE");

//                entity.Property(e => e.ConfidStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFID_STRAT_NAME_SET_ID");

//                entity.Property(e => e.ConfidStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFID_STRAT_UNIT_ID");

//                entity.Property(e => e.ConfidentialDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CONFIDENTIAL_DATE");

//                entity.Property(e => e.ConfidentialDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("CONFIDENTIAL_DEPTH");

//                entity.Property(e => e.ConfidentialDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENTIAL_DEPTH_OUOM");

//                entity.Property(e => e.ConfidentialType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENTIAL_TYPE");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY");

//                entity.Property(e => e.County)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTY");

//                entity.Property(e => e.CurrentClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_CLASS");

//                entity.Property(e => e.CurrentStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_STATUS");

//                entity.Property(e => e.CurrentStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURRENT_STATUS_DATE");

//                entity.Property(e => e.DeepestDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DEEPEST_DEPTH");

//                entity.Property(e => e.DeepestDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEEPEST_DEPTH_OUOM");

//                entity.Property(e => e.DepthDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEPTH_DATUM");

//                entity.Property(e => e.DepthDatumElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DEPTH_DATUM_ELEV");

//                entity.Property(e => e.DepthDatumElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DEPTH_DATUM_ELEV_OUOM");

//                entity.Property(e => e.DerrickFloorElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DERRICK_FLOOR_ELEV");

//                entity.Property(e => e.DerrickFloorElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DERRICK_FLOOR_ELEV_OUOM");

//                entity.Property(e => e.DifferenceLatMsl)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DIFFERENCE_LAT_MSL");

//                entity.Property(e => e.DiscoveryInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISCOVERY_IND");

//                entity.Property(e => e.District)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.DrillTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DRILL_TD");

//                entity.Property(e => e.DrillTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_TD_OUOM");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ElevRefDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ELEV_REF_DATUM");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FaultedInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FAULTED_IND");

//                entity.Property(e => e.FinalDrillDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FINAL_DRILL_DATE");

//                entity.Property(e => e.FinalTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("FINAL_TD");

//                entity.Property(e => e.FinalTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FINAL_TD_OUOM");

//                entity.Property(e => e.GeogCoordSystemId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOG_COORD_SYSTEM_ID");

//                entity.Property(e => e.GeographicRegion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOGRAPHIC_REGION");

//                entity.Property(e => e.GeologicProvince)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOLOGIC_PROVINCE");

//                entity.Property(e => e.GroundElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("GROUND_ELEV");

//                entity.Property(e => e.GroundElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GROUND_ELEV_OUOM");

//                entity.Property(e => e.GroundElevType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GROUND_ELEV_TYPE");

//                entity.Property(e => e.InitialClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INITIAL_CLASS");

//                entity.Property(e => e.KbElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("KB_ELEV");

//                entity.Property(e => e.KbElevOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("KB_ELEV_OUOM");

//                entity.Property(e => e.LeaseName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LEASE_NAME");

//                entity.Property(e => e.LeaseNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEASE_NUM");

//                entity.Property(e => e.LegalSurveyType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_SURVEY_TYPE");

//                entity.Property(e => e.LocationQualifier)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_QUALIFIER");

//                entity.Property(e => e.LocationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_TYPE");

//                entity.Property(e => e.LogTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("LOG_TD");

//                entity.Property(e => e.LogTdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOG_TD_OUOM");

//                entity.Property(e => e.MaxTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("MAX_TVD");

//                entity.Property(e => e.MaxTvdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAX_TVD_OUOM");

//                entity.Property(e => e.NetPay)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("NET_PAY");

//                entity.Property(e => e.NetPayOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NET_PAY_OUOM");

//                entity.Property(e => e.OldestStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OLDEST_STRAT_AGE");

//                entity.Property(e => e.OldestStratNameSetAge)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_NAME_SET_AGE");

//                entity.Property(e => e.OldestStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_NAME_SET_ID");

//                entity.Property(e => e.OldestStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_STRAT_UNIT_ID");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.ParentRelationshipType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_RELATIONSHIP_TYPE");

//                entity.Property(e => e.ParentUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_UWI");

//                entity.Property(e => e.PlatformId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_ID");

//                entity.Property(e => e.PlatformSfType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_SF_TYPE");

//                entity.Property(e => e.PlotName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_NAME");

//                entity.Property(e => e.PlotSymbol)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_SYMBOL");

//                entity.Property(e => e.PlugbackDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PLUGBACK_DEPTH");

//                entity.Property(e => e.PlugbackDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLUGBACK_DEPTH_OUOM");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PrimarySource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_SOURCE");

//                entity.Property(e => e.ProfileType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROFILE_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RegulatoryAgency)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_AGENCY");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RigOnSiteDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_ON_SITE_DATE");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.RotaryTableElev)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("ROTARY_TABLE_ELEV");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SourceDocument)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE_DOCUMENT");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SPUD_DATE");

//                entity.Property(e => e.StatusType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS_TYPE");

//                entity.Property(e => e.SubseaElevRefType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBSEA_ELEV_REF_TYPE");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("SURFACE_LATITUDE");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("SURFACE_LONGITUDE");

//                entity.Property(e => e.SurfaceNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURFACE_NODE_ID");

//                entity.Property(e => e.TaxCreditCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_CREDIT_CODE");

//                entity.Property(e => e.TdStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TD_STRAT_AGE");

//                entity.Property(e => e.TdStratNameSetAge)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_NAME_SET_AGE");

//                entity.Property(e => e.TdStratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_NAME_SET_ID");

//                entity.Property(e => e.TdStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TD_STRAT_UNIT_ID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WaterAcousticVel)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WATER_ACOUSTIC_VEL");

//                entity.Property(e => e.WaterAcousticVelOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_ACOUSTIC_VEL_OUOM");

//                entity.Property(e => e.WaterDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WATER_DEPTH");

//                entity.Property(e => e.WaterDepthDatum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_DEPTH_DATUM");

//                entity.Property(e => e.WaterDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_DEPTH_OUOM");

//                entity.Property(e => e.WellEventNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_EVENT_NUM");

//                entity.Property(e => e.WellGovernmentId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_GOVERNMENT_ID");

//                entity.Property(e => e.WellIntersectMd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WELL_INTERSECT_MD");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(66)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NUM");

//                entity.Property(e => e.WellNumericId)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("WELL_NUMERIC_ID");

//                entity.Property(e => e.WhipstockDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WHIPSTOCK_DEPTH");

//                entity.Property(e => e.WhipstockDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WHIPSTOCK_DEPTH_OUOM");

//                entity.Property(e => e.XConfidentialPeriod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CONFIDENTIAL_PERIOD");

//                entity.Property(e => e.XCurrentLicensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CURRENT_LICENSEE");

//                entity.Property(e => e.XDigitalLogInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_DIGITAL_LOG_IND");

//                entity.Property(e => e.XEventNum)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("X_EVENT_NUM");

//                entity.Property(e => e.XEventNumMax)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("X_EVENT_NUM_MAX");

//                entity.Property(e => e.XLateralLength)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_LATERAL_LENGTH");

//                entity.Property(e => e.XOffshoreInd)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_OFFSHORE_IND");

//                entity.Property(e => e.XOninjectDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONINJECT_DATE");

//                entity.Property(e => e.XOnprodDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_ONPROD_DATE");

//                entity.Property(e => e.XOriginalStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_STATUS");

//                entity.Property(e => e.XOriginalUnit)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_UNIT");

//                entity.Property(e => e.XPlugbackTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_PLUGBACK_TVD");

//                entity.Property(e => e.XPool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_POOL");

//                entity.Property(e => e.XPreviousStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PREVIOUS_STATUS");

//                entity.Property(e => e.XPrimaryBoreholeUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PRIMARY_BOREHOLE_UWI");

//                entity.Property(e => e.XRasterLogInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_RASTER_LOG_IND");

//                entity.Property(e => e.XSurfaceAbandonType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_SURFACE_ABANDON_TYPE");

//                entity.Property(e => e.XTdTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_TD_TVD");

//                entity.Property(e => e.XUwiDisplay)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UWI_DISPLAY");

//                entity.Property(e => e.XUwiSort)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_UWI_SORT");

//                entity.Property(e => e.XWhipstockTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("X_WHIPSTOCK_TVD");
//            });

//            modelBuilder.Entity<TIhsWellCompletion>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_completion", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.BaseDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("BASE_DEPTH");

//                entity.Property(e => e.BaseDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_DEPTH_OUOM");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.BaseStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_STRAT_UNIT_ID");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("COMPLETION_DATE");

//                entity.Property(e => e.CompletionMethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_METHOD");

//                entity.Property(e => e.CompletionObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("COMPLETION_OBS_NO");

//                entity.Property(e => e.CompletionStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_STRAT_UNIT_ID");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_TYPE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TopDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("TOP_DEPTH");

//                entity.Property(e => e.TopDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOP_DEPTH_OUOM");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.TopStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOP_STRAT_UNIT_ID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.XPerfShots)
//                    .HasColumnType("numeric(5, 1)")
//                    .HasColumnName("X_PERF_SHOTS");

//                entity.Property(e => e.XPerfStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_PERF_STATUS");
//            });

//            modelBuilder.Entity<TIhsWellDescription>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_description", "stage");

//                entity.Property(e => e.BaseNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_NODE_ID");

//                entity.Property(e => e.Battery)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY");

//                entity.Property(e => e.Class)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CLASS");

//                entity.Property(e => e.ClassDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CLASS_DESC");

//                entity.Property(e => e.Crstatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CRSTATUS");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CRSTATUS_DESC");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEVIATION_FLAG");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FieldDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_DESC");

//                entity.Property(e => e.FormAtTd)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_AT_TD");

//                entity.Property(e => e.FormAtTdDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_AT_TD_DESC");

//                entity.Property(e => e.FormAtTdTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("FORM_AT_TD_TOP");

//                entity.Property(e => e.GroundElev)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("GROUND_ELEV");

//                entity.Property(e => e.KbElev)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("KB_ELEV");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LICENSE_DATE");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_NO");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.LicenseeDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE_DESC");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION");

//                entity.Property(e => e.NodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_ID");

//                entity.Property(e => e.OldestForm)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_FORM");

//                entity.Property(e => e.OldestFormDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_FORM_DESC");

//                entity.Property(e => e.OldestFormTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OLDEST_FORM_TOP");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.OperatorAbrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_ABREV");

//                entity.Property(e => e.OperatorDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_DESC");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL");

//                entity.Property(e => e.PoolDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_DESC");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_RELEASE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SPUD_DATE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("SURF_LOCATION");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("TOTAL_DEPTH");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("TVD_DEPTH");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT");

//                entity.Property(e => e.UnitDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_DESC");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE");

//                entity.Property(e => e.Zone2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE2");

//                entity.Property(e => e.Zone2Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE2_DESC");

//                entity.Property(e => e.Zone2Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE2_TOP");

//                entity.Property(e => e.Zone3)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE3");

//                entity.Property(e => e.Zone3Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE3_DESC");

//                entity.Property(e => e.Zone3Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE3_TOP");

//                entity.Property(e => e.Zone4)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE4");

//                entity.Property(e => e.Zone4Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE4_DESC");

//                entity.Property(e => e.Zone4Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE4_TOP");

//                entity.Property(e => e.Zone5)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE5");

//                entity.Property(e => e.Zone5Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE5_DESC");

//                entity.Property(e => e.Zone5Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE5_TOP");

//                entity.Property(e => e.Zone6)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE6");

//                entity.Property(e => e.Zone6Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE6_DESC");

//                entity.Property(e => e.Zone6Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE6_TOP");

//                entity.Property(e => e.Zone7)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE7");

//                entity.Property(e => e.Zone7Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE7_DESC");

//                entity.Property(e => e.Zone7Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE7_TOP");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE_DESC");

//                entity.Property(e => e.ZoneTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE_TOP");
//            });

//            modelBuilder.Entity<TIhsWellDescription1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_description", "stage_ihs");

//                entity.Property(e => e.BaseNodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_NODE_ID");

//                entity.Property(e => e.Battery)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY");

//                entity.Property(e => e.Class)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CLASS");

//                entity.Property(e => e.ClassDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CLASS_DESC");

//                entity.Property(e => e.Crstatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CRSTATUS");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("CRSTATUS_DESC");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEVIATION_FLAG");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FieldDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_DESC");

//                entity.Property(e => e.FormAtTd)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_AT_TD");

//                entity.Property(e => e.FormAtTdDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_AT_TD_DESC");

//                entity.Property(e => e.FormAtTdTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("FORM_AT_TD_TOP");

//                entity.Property(e => e.GroundElev)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("GROUND_ELEV");

//                entity.Property(e => e.KbElev)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("KB_ELEV");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LICENSE_DATE");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_NO");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.LicenseeDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE_DESC");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION");

//                entity.Property(e => e.NodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_ID");

//                entity.Property(e => e.OldestForm)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_FORM");

//                entity.Property(e => e.OldestFormDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("OLDEST_FORM_DESC");

//                entity.Property(e => e.OldestFormTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OLDEST_FORM_TOP");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.OperatorAbrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_ABREV");

//                entity.Property(e => e.OperatorDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_DESC");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL");

//                entity.Property(e => e.PoolDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_DESC");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RIG_RELEASE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SPUD_DATE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("SURF_LOCATION");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("TOTAL_DEPTH");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("TVD_DEPTH");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT");

//                entity.Property(e => e.UnitDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_DESC");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE");

//                entity.Property(e => e.Zone2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE2");

//                entity.Property(e => e.Zone2Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE2_DESC");

//                entity.Property(e => e.Zone2Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE2_TOP");

//                entity.Property(e => e.Zone3)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE3");

//                entity.Property(e => e.Zone3Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE3_DESC");

//                entity.Property(e => e.Zone3Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE3_TOP");

//                entity.Property(e => e.Zone4)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE4");

//                entity.Property(e => e.Zone4Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE4_DESC");

//                entity.Property(e => e.Zone4Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE4_TOP");

//                entity.Property(e => e.Zone5)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE5");

//                entity.Property(e => e.Zone5Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE5_DESC");

//                entity.Property(e => e.Zone5Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE5_TOP");

//                entity.Property(e => e.Zone6)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE6");

//                entity.Property(e => e.Zone6Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE6_DESC");

//                entity.Property(e => e.Zone6Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE6_TOP");

//                entity.Property(e => e.Zone7)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE7");

//                entity.Property(e => e.Zone7Desc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE7_DESC");

//                entity.Property(e => e.Zone7Top)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE7_TOP");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE_DESC");

//                entity.Property(e => e.ZoneTop)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ZONE_TOP");
//            });

//            modelBuilder.Entity<TIhsWellFracCalculation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_frac_calculation", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.CalculationAttribute)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_ATTRIBUTE");

//                entity.Property(e => e.CalculationFormula)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_FORMULA");

//                entity.Property(e => e.CalculationObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("CALCULATION_OBS_NO");

//                entity.Property(e => e.CalculationPoint)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_POINT");

//                entity.Property(e => e.CalculationRank)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("CALCULATION_RANK");

//                entity.Property(e => e.CalculationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_TYPE");

//                entity.Property(e => e.CalculationValue)
//                    .HasColumnType("numeric(15, 5)")
//                    .HasColumnName("CALCULATION_VALUE");

//                entity.Property(e => e.CalculationValueUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_VALUE_UOM");

//                entity.Property(e => e.CompletionObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("COMPLETION_OBS_NO");

//                entity.Property(e => e.CompletionSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_SOURCE");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.IngredientObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("INGREDIENT_OBS_NO");

//                entity.Property(e => e.MaterialObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("MATERIAL_OBS_NO");

//                entity.Property(e => e.MaterialSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_SOURCE");

//                entity.Property(e => e.PerforationObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("PERFORATION_OBS_NO");

//                entity.Property(e => e.PerforationSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PERFORATION_SOURCE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StageNo)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_NO");

//                entity.Property(e => e.StimulationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STIMULATION_TYPE");

//                entity.Property(e => e.TreatmentObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("TREATMENT_OBS_NO");

//                entity.Property(e => e.TreatmentSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_SOURCE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TIhsWellLicense>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_license", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.Agent)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AGENT");

//                entity.Property(e => e.ApplicationId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("APPLICATION_ID");

//                entity.Property(e => e.AuthorizedStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTHORIZED_STRAT_UNIT_ID");

//                entity.Property(e => e.BiddingRoundNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BIDDING_ROUND_NUM");

//                entity.Property(e => e.Contractor)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACTOR");

//                entity.Property(e => e.DirectionToLoc)
//                    .HasColumnType("numeric(5, 2)")
//                    .HasColumnName("DIRECTION_TO_LOC");

//                entity.Property(e => e.DirectionToLocOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DIRECTION_TO_LOC_OUOM");

//                entity.Property(e => e.DistanceRefPoint)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTANCE_REF_POINT");

//                entity.Property(e => e.DistanceToLoc)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("DISTANCE_TO_LOC");

//                entity.Property(e => e.DistanceToLocOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTANCE_TO_LOC_OUOM");

//                entity.Property(e => e.DrillRigNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_RIG_NUM");

//                entity.Property(e => e.DrillSlotNo)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DRILL_SLOT_NO");

//                entity.Property(e => e.DrillTool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_TOOL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExceptionGranted)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCEPTION_GRANTED");

//                entity.Property(e => e.ExceptionRequested)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCEPTION_REQUESTED");

//                entity.Property(e => e.ExpiredInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPIRED_IND");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FeesPaidInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FEES_PAID_IND");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LICENSE_DATE");

//                entity.Property(e => e.LicenseId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_ID");

//                entity.Property(e => e.LicenseNum)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_NUM");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.LicenseeContactId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE_CONTACT_ID");

//                entity.Property(e => e.NoOfWells)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("NO_OF_WELLS");

//                entity.Property(e => e.OffshoreCompletionType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OFFSHORE_COMPLETION_TYPE");

//                entity.Property(e => e.PermitReferenceNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PERMIT_REFERENCE_NUM");

//                entity.Property(e => e.PermitReissueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PERMIT_REISSUE_DATE");

//                entity.Property(e => e.PermitType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PERMIT_TYPE");

//                entity.Property(e => e.PlatformName)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_NAME");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProjectedDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PROJECTED_DEPTH");

//                entity.Property(e => e.ProjectedDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_DEPTH_OUOM");

//                entity.Property(e => e.ProjectedStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("PROJECTED_STRAT_AGE");

//                entity.Property(e => e.ProjectedStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_STRAT_UNIT_ID");

//                entity.Property(e => e.ProjectedTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PROJECTED_TVD");

//                entity.Property(e => e.ProjectedTvdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_TVD_OUOM");

//                entity.Property(e => e.ProposedSpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PROPOSED_SPUD_DATE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Purpose)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("PURPOSE");

//                entity.Property(e => e.RateScheduleId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RATE_SCHEDULE_ID");

//                entity.Property(e => e.Regulation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATION");

//                entity.Property(e => e.RegulatoryAgency)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_AGENCY");

//                entity.Property(e => e.RegulatoryContactId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_CONTACT_ID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RigCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_CODE");

//                entity.Property(e => e.RigSubstrHeight)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("RIG_SUBSTR_HEIGHT");

//                entity.Property(e => e.RigSubstrHeightOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_SUBSTR_HEIGHT_OUOM");

//                entity.Property(e => e.RigType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_TYPE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SectionOfRegulation)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("SECTION_OF_REGULATION");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.Surveyor)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEYOR");

//                entity.Property(e => e.TargetObjectiveFluid)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET_OBJECTIVE_FLUID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.XOriginalLicensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_LICENSEE");

//                entity.Property(e => e.XWellObjective)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_WELL_OBJECTIVE");

//                entity.Property(e => e.XWellType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_WELL_TYPE");
//            });

//            modelBuilder.Entity<TIhsWellLicenseIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_license_incr", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.Agent)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AGENT");

//                entity.Property(e => e.ApplicationId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("APPLICATION_ID");

//                entity.Property(e => e.AuthorizedStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTHORIZED_STRAT_UNIT_ID");

//                entity.Property(e => e.BiddingRoundNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BIDDING_ROUND_NUM");

//                entity.Property(e => e.Contractor)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACTOR");

//                entity.Property(e => e.DirectionToLoc)
//                    .HasColumnType("numeric(5, 2)")
//                    .HasColumnName("DIRECTION_TO_LOC");

//                entity.Property(e => e.DirectionToLocOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DIRECTION_TO_LOC_OUOM");

//                entity.Property(e => e.DistanceRefPoint)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTANCE_REF_POINT");

//                entity.Property(e => e.DistanceToLoc)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("DISTANCE_TO_LOC");

//                entity.Property(e => e.DistanceToLocOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTANCE_TO_LOC_OUOM");

//                entity.Property(e => e.DrillRigNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_RIG_NUM");

//                entity.Property(e => e.DrillSlotNo)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DRILL_SLOT_NO");

//                entity.Property(e => e.DrillTool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_TOOL");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExceptionGranted)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCEPTION_GRANTED");

//                entity.Property(e => e.ExceptionRequested)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCEPTION_REQUESTED");

//                entity.Property(e => e.ExpiredInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPIRED_IND");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FeesPaidInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FEES_PAID_IND");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LICENSE_DATE");

//                entity.Property(e => e.LicenseId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_ID");

//                entity.Property(e => e.LicenseNum)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_NUM");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.LicenseeContactId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE_CONTACT_ID");

//                entity.Property(e => e.NoOfWells)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("NO_OF_WELLS");

//                entity.Property(e => e.OffshoreCompletionType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OFFSHORE_COMPLETION_TYPE");

//                entity.Property(e => e.PermitReferenceNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PERMIT_REFERENCE_NUM");

//                entity.Property(e => e.PermitReissueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PERMIT_REISSUE_DATE");

//                entity.Property(e => e.PermitType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PERMIT_TYPE");

//                entity.Property(e => e.PlatformName)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_NAME");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProjectedDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PROJECTED_DEPTH");

//                entity.Property(e => e.ProjectedDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_DEPTH_OUOM");

//                entity.Property(e => e.ProjectedStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("PROJECTED_STRAT_AGE");

//                entity.Property(e => e.ProjectedStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_STRAT_UNIT_ID");

//                entity.Property(e => e.ProjectedTvd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PROJECTED_TVD");

//                entity.Property(e => e.ProjectedTvdOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROJECTED_TVD_OUOM");

//                entity.Property(e => e.ProposedSpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PROPOSED_SPUD_DATE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Purpose)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("PURPOSE");

//                entity.Property(e => e.RateScheduleId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RATE_SCHEDULE_ID");

//                entity.Property(e => e.Regulation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATION");

//                entity.Property(e => e.RegulatoryAgency)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_AGENCY");

//                entity.Property(e => e.RegulatoryContactId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REGULATORY_CONTACT_ID");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RigCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_CODE");

//                entity.Property(e => e.RigSubstrHeight)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("RIG_SUBSTR_HEIGHT");

//                entity.Property(e => e.RigSubstrHeightOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_SUBSTR_HEIGHT_OUOM");

//                entity.Property(e => e.RigType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RIG_TYPE");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SectionOfRegulation)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("SECTION_OF_REGULATION");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.Surveyor)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEYOR");

//                entity.Property(e => e.TargetObjectiveFluid)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET_OBJECTIVE_FLUID");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.XOriginalLicensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_ORIGINAL_LICENSEE");

//                entity.Property(e => e.XWellObjective)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_WELL_OBJECTIVE");

//                entity.Property(e => e.XWellType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_WELL_TYPE");
//            });

//            modelBuilder.Entity<TIhsWellLicenseStatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_license_status", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AreaOffice)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA_OFFICE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FinalDrillDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FINAL_DRILL_DATE");

//                entity.Property(e => e.LicenseId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_ID");

//                entity.Property(e => e.LicenseSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_SOURCE");

//                entity.Property(e => e.LicenseStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_STATUS");

//                entity.Property(e => e.LicenseStatusType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSE_STATUS_TYPE");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StatusId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STATUS_ID");

//                entity.Property(e => e.SurfaceLoc)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURFACE_LOC");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.XComplianceStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_COMPLIANCE_STATUS");

//                entity.Property(e => e.XDeemedRiskClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_DEEMED_RISK_CLASS");

//                entity.Property(e => e.XInactiveStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_INACTIVE_STATUS_DATE");

//                entity.Property(e => e.XIwcp)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_IWCP");

//                entity.Property(e => e.XLastVolActivityDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_LAST_VOL_ACTIVITY_DATE");

//                entity.Property(e => e.XNextInspectionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_NEXT_INSPECTION_DATE");

//                entity.Property(e => e.XReportedRiskClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_REPORTED_RISK_CLASS");

//                entity.Property(e => e.XReportedSuspDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_REPORTED_SUSP_DATE");
//            });

//            modelBuilder.Entity<TIhsWellNode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_node", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.CoordSystemId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COORD_SYSTEM_ID");

//                entity.Property(e => e.CoordinateQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COORDINATE_QUALITY");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.Latitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("LATITUDE");

//                entity.Property(e => e.LegalSurveyType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_SURVEY_TYPE");

//                entity.Property(e => e.LocationQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_QUALITY");

//                entity.Property(e => e.LocationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_TYPE");

//                entity.Property(e => e.Longitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("LONGITUDE");

//                entity.Property(e => e.NodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_ID");

//                entity.Property(e => e.NodeNumericId)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("NODE_NUMERIC_ID");

//                entity.Property(e => e.NodePosition)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_POSITION");

//                entity.Property(e => e.OriginalObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("ORIGINAL_OBS_NO");

//                entity.Property(e => e.OriginalXyUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_XY_UOM");

//                entity.Property(e => e.PlatformId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_ID");

//                entity.Property(e => e.PlatformSfType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_SF_TYPE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PreferredInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PREFERRED_IND");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SelectedObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("SELECTED_OBS_NO");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TIhsWellNodeIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_node_incr", "stage");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.CoordSystemId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COORD_SYSTEM_ID");

//                entity.Property(e => e.CoordinateQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COORDINATE_QUALITY");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.Latitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("LATITUDE");

//                entity.Property(e => e.LegalSurveyType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_SURVEY_TYPE");

//                entity.Property(e => e.LocationQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_QUALITY");

//                entity.Property(e => e.LocationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_TYPE");

//                entity.Property(e => e.Longitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("LONGITUDE");

//                entity.Property(e => e.NodeId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_ID");

//                entity.Property(e => e.NodeNumericId)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("NODE_NUMERIC_ID");

//                entity.Property(e => e.NodePosition)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("NODE_POSITION");

//                entity.Property(e => e.OriginalObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("ORIGINAL_OBS_NO");

//                entity.Property(e => e.OriginalXyUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_XY_UOM");

//                entity.Property(e => e.PlatformId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_ID");

//                entity.Property(e => e.PlatformSfType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("PLATFORM_SF_TYPE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PreferredInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PREFERRED_IND");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.SelectedObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("SELECTED_OBS_NO");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TIhsWellStimulation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_stimulation", "stage_ihs");

//                entity.Property(e => e.AcidSpearhead)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("ACID_SPEARHEAD");

//                entity.Property(e => e.AcidSpearheadUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACID_SPEARHEAD_UOM");

//                entity.Property(e => e.AcidType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ACID_TYPE");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AverageHydraulicPower)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("AVERAGE_HYDRAULIC_POWER");

//                entity.Property(e => e.AverageInjRateUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AVERAGE_INJ_RATE_UOM");

//                entity.Property(e => e.AverageInjectionRate)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("AVERAGE_INJECTION_RATE");

//                entity.Property(e => e.AveragePowerUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AVERAGE_POWER_UOM");

//                entity.Property(e => e.AveragePressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("AVERAGE_PRESSURE");

//                entity.Property(e => e.AveragePressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AVERAGE_PRESSURE_UOM");

//                entity.Property(e => e.BaseFluid)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_FLUID");

//                entity.Property(e => e.ChemicalTraceType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CHEMICAL_TRACE_TYPE");

//                entity.Property(e => e.CleanInjRateUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CLEAN_INJ_RATE_UOM");

//                entity.Property(e => e.CleanInjectionRate)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("CLEAN_INJECTION_RATE");

//                entity.Property(e => e.CompletionDesign)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_DESIGN");

//                entity.Property(e => e.CompletionObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("COMPLETION_OBS_NO");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.Energizer)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGIZER");

//                entity.Property(e => e.EnergizerType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGIZER_TYPE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FormBreakPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("FORM_BREAK_PRESSURE");

//                entity.Property(e => e.FormBreakPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_BREAK_PRESSURE_UOM");

//                entity.Property(e => e.FracGradient)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("FRAC_GRADIENT");

//                entity.Property(e => e.FracGradientUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FRAC_GRADIENT_UOM");

//                entity.Property(e => e.FractureType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FRACTURE_TYPE");

//                entity.Property(e => e.GelType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GEL_TYPE");

//                entity.Property(e => e.InstantSiPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("INSTANT_SI_PRESSURE");

//                entity.Property(e => e.InstantSiPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INSTANT_SI_PRESSURE_UOM");

//                entity.Property(e => e.MaxHydraulicPower)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("MAX_HYDRAULIC_POWER");

//                entity.Property(e => e.MaxInjRateUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAX_INJ_RATE_UOM");

//                entity.Property(e => e.MaxInjectionRate)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("MAX_INJECTION_RATE");

//                entity.Property(e => e.MaxPowerUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAX_POWER_UOM");

//                entity.Property(e => e.MaxPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("MAX_PRESSURE");

//                entity.Property(e => e.MaxPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MAX_PRESSURE_UOM");

//                entity.Property(e => e.MilledInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MILLED_IND");

//                entity.Property(e => e.MinHydraulicPower)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("MIN_HYDRAULIC_POWER");

//                entity.Property(e => e.MinPowerUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MIN_POWER_UOM");

//                entity.Property(e => e.MinPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("MIN_PRESSURE");

//                entity.Property(e => e.MinPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MIN_PRESSURE_UOM");

//                entity.Property(e => e.PlugbackTd)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PLUGBACK_TD");

//                entity.Property(e => e.PlugbackTdUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PLUGBACK_TD_UOM");

//                entity.Property(e => e.PortDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PORT_DEPTH");

//                entity.Property(e => e.PortDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PORT_DEPTH_UOM");

//                entity.Property(e => e.PortTvdDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("PORT_TVD_DEPTH");

//                entity.Property(e => e.PortTvdUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PORT_TVD_UOM");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProblemDesc)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("PROBLEM_DESC");

//                entity.Property(e => e.ProblemType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROBLEM_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RadioactiveTraceType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RADIOACTIVE_TRACE_TYPE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.ReportedInjRateUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTED_INJ_RATE_UOM");

//                entity.Property(e => e.ReportedInjectionRate)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("REPORTED_INJECTION_RATE");

//                entity.Property(e => e.ReportedPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("REPORTED_PRESSURE");

//                entity.Property(e => e.ReportedPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTED_PRESSURE_UOM");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.ScreenoutInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SCREENOUT_IND");

//                entity.Property(e => e.ServiceCompany)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SERVICE_COMPANY");

//                entity.Property(e => e.SlurryInjRateUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SLURRY_INJ_RATE_UOM");

//                entity.Property(e => e.SlurryInjectionRate)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("SLURRY_INJECTION_RATE");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StageAttemptedNo)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("STAGE_ATTEMPTED_NO");

//                entity.Property(e => e.StageBaseDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("STAGE_BASE_DEPTH");

//                entity.Property(e => e.StageBaseDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_BASE_DEPTH_UOM");

//                entity.Property(e => e.StageBaseTvdDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("STAGE_BASE_TVD_DEPTH");

//                entity.Property(e => e.StageBaseTvdDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_BASE_TVD_DEPTH_UOM");

//                entity.Property(e => e.StageDuration)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("STAGE_DURATION");

//                entity.Property(e => e.StageDurationUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_DURATION_UOM");

//                entity.Property(e => e.StageEndTime)
//                    .HasColumnType("datetime")
//                    .HasColumnName("STAGE_END_TIME");

//                entity.Property(e => e.StageNo)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_NO");

//                entity.Property(e => e.StageOccurrenceNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("STAGE_OCCURRENCE_NO");

//                entity.Property(e => e.StageStartTime)
//                    .HasColumnType("datetime")
//                    .HasColumnName("STAGE_START_TIME");

//                entity.Property(e => e.StageTimeZone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TIME_ZONE");

//                entity.Property(e => e.StageTopDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("STAGE_TOP_DEPTH");

//                entity.Property(e => e.StageTopDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TOP_DEPTH_UOM");

//                entity.Property(e => e.StageTopTvdDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("STAGE_TOP_TVD_DEPTH");

//                entity.Property(e => e.StageTopTvdDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TOP_TVD_DEPTH_UOM");

//                entity.Property(e => e.StageType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TYPE");

//                entity.Property(e => e.StimulationType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STIMULATION_TYPE");

//                entity.Property(e => e.TotalCleanFluidPumped)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_CLEAN_FLUID_PUMPED");

//                entity.Property(e => e.TotalCleanFluidUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_CLEAN_FLUID_UOM");

//                entity.Property(e => e.TotalCo2Pumped)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_CO2_PUMPED");

//                entity.Property(e => e.TotalCo2PumpedUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_CO2_PUMPED_UOM");

//                entity.Property(e => e.TotalCo2TempUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_CO2_TEMP_UOM");

//                entity.Property(e => e.TotalCo2Temperature)
//                    .HasColumnType("numeric(5, 2)")
//                    .HasColumnName("TOTAL_CO2_TEMPERATURE");

//                entity.Property(e => e.TotalFluidPumped)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_FLUID_PUMPED");

//                entity.Property(e => e.TotalFluidUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_FLUID_UOM");

//                entity.Property(e => e.TotalN2Pumped)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_N2_PUMPED");

//                entity.Property(e => e.TotalN2PumpedUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_N2_PUMPED_UOM");

//                entity.Property(e => e.TotalN2TempUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_N2_TEMP_UOM");

//                entity.Property(e => e.TotalN2Temperature)
//                    .HasColumnType("numeric(5, 2)")
//                    .HasColumnName("TOTAL_N2_TEMPERATURE");

//                entity.Property(e => e.TotalRecoveredFluid)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_RECOVERED_FLUID");

//                entity.Property(e => e.TotalRecoveredFluidUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_RECOVERED_FLUID_UOM");

//                entity.Property(e => e.TotalSlurryFluidPumped)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("TOTAL_SLURRY_FLUID_PUMPED");

//                entity.Property(e => e.TotalSlurryFluidUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_SLURRY_FLUID_UOM");

//                entity.Property(e => e.TreatmentObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("TREATMENT_OBS_NO");

//                entity.Property(e => e.TreatmentTemperature)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("TREATMENT_TEMPERATURE");

//                entity.Property(e => e.TreatmentTemperatureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_TEMPERATURE_UOM");

//                entity.Property(e => e.TubingFlowPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("TUBING_FLOW_PRESSURE");

//                entity.Property(e => e.TubingFlowPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TUBING_FLOW_PRESSURE_UOM");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WaterVolume)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("WATER_VOLUME");

//                entity.Property(e => e.WaterVolumeUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_VOLUME_UOM");

//                entity.Property(e => e.WellTestNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_NUM");

//                entity.Property(e => e.WellTestRunNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_RUN_NUM");

//                entity.Property(e => e.WellTestSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_SOURCE");

//                entity.Property(e => e.WellTestType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_TYPE");
//            });

//            modelBuilder.Entity<TIhsWellTreatment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_treatment", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AdditiveType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDITIVE_TYPE");

//                entity.Property(e => e.BaseDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("BASE_DEPTH");

//                entity.Property(e => e.BaseDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_DEPTH_OUOM");

//                entity.Property(e => e.BaseStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("BASE_STRAT_AGE");

//                entity.Property(e => e.BaseStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_STRAT_UNIT_ID");

//                entity.Property(e => e.BaseTvdDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("BASE_TVD_DEPTH");

//                entity.Property(e => e.BaseTvdDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BASE_TVD_DEPTH_UOM");

//                entity.Property(e => e.CompletionDesign)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_DESIGN");

//                entity.Property(e => e.CompletionObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("COMPLETION_OBS_NO");

//                entity.Property(e => e.CompletionSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPLETION_SOURCE");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.EstimatedEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ESTIMATED_END_DATE");

//                entity.Property(e => e.EstimatedStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ESTIMATED_START_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FormBreakPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("FORM_BREAK_PRESSURE");

//                entity.Property(e => e.FormBreakPressureOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FORM_BREAK_PRESSURE_OUOM");

//                entity.Property(e => e.InjectionRate)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("INJECTION_RATE");

//                entity.Property(e => e.InjectionRateOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_RATE_OUOM");

//                entity.Property(e => e.InstantSiPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("INSTANT_SI_PRESSURE");

//                entity.Property(e => e.InstantSiPressureOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INSTANT_SI_PRESSURE_OUOM");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.PressurePumpBaId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRESSURE_PUMP_BA_ID");

//                entity.Property(e => e.ProppantAgentAmount)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("PROPPANT_AGENT_AMOUNT");

//                entity.Property(e => e.ProppantAgentAmountOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROPPANT_AGENT_AMOUNT_OUOM");

//                entity.Property(e => e.ProppantAgentAmountUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROPPANT_AGENT_AMOUNT_UOM");

//                entity.Property(e => e.ProppantAgentMeshSize)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("PROPPANT_AGENT_MESH_SIZE");

//                entity.Property(e => e.ProppantAgentType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROPPANT_AGENT_TYPE");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.RefracReasonDesc)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("REFRAC_REASON_DESC");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.RunNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("RUN_NUM");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StageNo)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_NO");

//                entity.Property(e => e.StageType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TYPE");

//                entity.Property(e => e.StratNameSetId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STRAT_NAME_SET_ID");

//                entity.Property(e => e.TestNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TEST_NUM");

//                entity.Property(e => e.TestType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TEST_TYPE");

//                entity.Property(e => e.TopDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("TOP_DEPTH");

//                entity.Property(e => e.TopDepthOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOP_DEPTH_OUOM");

//                entity.Property(e => e.TopStratAge)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("TOP_STRAT_AGE");

//                entity.Property(e => e.TopStratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOP_STRAT_UNIT_ID");

//                entity.Property(e => e.TopTvdDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("TOP_TVD_DEPTH");

//                entity.Property(e => e.TopTvdDepthUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TOP_TVD_DEPTH_UOM");

//                entity.Property(e => e.TreatmentAmount)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("TREATMENT_AMOUNT");

//                entity.Property(e => e.TreatmentAmountOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_AMOUNT_OUOM");

//                entity.Property(e => e.TreatmentAmountUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_AMOUNT_UOM");

//                entity.Property(e => e.TreatmentBaId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_BA_ID");

//                entity.Property(e => e.TreatmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TREATMENT_DATE");

//                entity.Property(e => e.TreatmentFluidType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_FLUID_TYPE");

//                entity.Property(e => e.TreatmentObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("TREATMENT_OBS_NO");

//                entity.Property(e => e.TreatmentPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("TREATMENT_PRESSURE");

//                entity.Property(e => e.TreatmentPressureOuom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_PRESSURE_OUOM");

//                entity.Property(e => e.TreatmentStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_STATUS");

//                entity.Property(e => e.TreatmentStatusType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_STATUS_TYPE");

//                entity.Property(e => e.TreatmentType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TREATMENT_TYPE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellTestSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_SOURCE");

//                entity.Property(e => e.XCasingIndType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_CASING_IND_TYPE");

//                entity.Property(e => e.XFracGradient)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("X_FRAC_GRADIENT");

//                entity.Property(e => e.XFracGradientUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_FRAC_GRADIENT_UOM");

//                entity.Property(e => e.XLinerInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("X_LINER_IND");

//                entity.Property(e => e.XMaxInjectionRate)
//                    .HasColumnType("numeric(5, 1)")
//                    .HasColumnName("X_MAX_INJECTION_RATE");

//                entity.Property(e => e.XMaxInjectionUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_MAX_INJECTION_UOM");

//                entity.Property(e => e.XMaxPressureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_MAX_PRESSURE_UOM");

//                entity.Property(e => e.XMaxTreatmentPressure)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("X_MAX_TREATMENT_PRESSURE");

//                entity.Property(e => e.XTemperatureUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_TEMPERATURE_UOM");

//                entity.Property(e => e.XTotalNumberStages)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("X_TOTAL_NUMBER_STAGES");

//                entity.Property(e => e.XTotalWaterUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("X_TOTAL_WATER_UOM");

//                entity.Property(e => e.XTotalWaterVolume)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("X_TOTAL_WATER_VOLUME");

//                entity.Property(e => e.XTreatmentEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("X_TREATMENT_END_DATE");

//                entity.Property(e => e.XTreatmentTemperature)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("X_TREATMENT_TEMPERATURE");
//            });

//            modelBuilder.Entity<TIhsWellTreatmentFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_treatment_finance", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.Amount)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("AMOUNT");

//                entity.Property(e => e.AuthorizedBaId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTHORIZED_BA_ID");

//                entity.Property(e => e.CurrencyUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENCY_UOM");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.FinanceType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FINANCE_TYPE");

//                entity.Property(e => e.IssueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ISSUE_DATE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.TreatmentObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("TREATMENT_OBS_NO");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TIhsWellTreatmentMaterial>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_well_treatment_material", "stage_ihs");

//                entity.Property(e => e.ActiveInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_IND");

//                entity.Property(e => e.AdditiveConc)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("ADDITIVE_CONC");

//                entity.Property(e => e.AdditiveConcUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDITIVE_CONC_UOM");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.HazardousInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("HAZARDOUS_IND");

//                entity.Property(e => e.HfFluidConc)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("HF_FLUID_CONC");

//                entity.Property(e => e.HfFluidConcUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("HF_FLUID_CONC_UOM");

//                entity.Property(e => e.IngredientObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("INGREDIENT_OBS_NO");

//                entity.Property(e => e.MaterialCas)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_CAS");

//                entity.Property(e => e.MaterialDescType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_DESC_TYPE");

//                entity.Property(e => e.MaterialDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_DESCRIPTION");

//                entity.Property(e => e.MaterialEndTime)
//                    .HasColumnType("datetime")
//                    .HasColumnName("MATERIAL_END_TIME");

//                entity.Property(e => e.MaterialObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("MATERIAL_OBS_NO");

//                entity.Property(e => e.MaterialOrigin)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_ORIGIN");

//                entity.Property(e => e.MaterialPlaced)
//                    .HasColumnType("numeric(15, 5)")
//                    .HasColumnName("MATERIAL_PLACED");

//                entity.Property(e => e.MaterialPlacedUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_PLACED_UOM");

//                entity.Property(e => e.MaterialPumped)
//                    .HasColumnType("numeric(15, 5)")
//                    .HasColumnName("MATERIAL_PUMPED");

//                entity.Property(e => e.MaterialPumpedUom)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_PUMPED_UOM");

//                entity.Property(e => e.MaterialPurpose)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_PURPOSE");

//                entity.Property(e => e.MaterialStartTime)
//                    .HasColumnType("datetime")
//                    .HasColumnName("MATERIAL_START_TIME");

//                entity.Property(e => e.MaterialTimeZone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MATERIAL_TIME_ZONE");

//                entity.Property(e => e.MeshSize)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MESH_SIZE");

//                entity.Property(e => e.PpdmGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("PPDM_GUID");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_STATE");

//                entity.Property(e => e.PurposeType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PURPOSE_TYPE");

//                entity.Property(e => e.Remark)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REMARK");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.RowQuality)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_QUALITY");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.StageNo)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_NO");

//                entity.Property(e => e.StageType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("STAGE_TYPE");

//                entity.Property(e => e.Supplier)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SUPPLIER");

//                entity.Property(e => e.TradeName)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("TRADE_NAME");

//                entity.Property(e => e.TradeSecretInd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TRADE_SECRET_IND");

//                entity.Property(e => e.TreatmentObsNo)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("TREATMENT_OBS_NO");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellTestNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_NUM");

//                entity.Property(e => e.WellTestRunNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_RUN_NUM");

//                entity.Property(e => e.WellTestSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_SOURCE");

//                entity.Property(e => e.WellTestType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TEST_TYPE");
//            });

//            modelBuilder.Entity<TIhsXrefStatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_ihs_xref_status", "stage");

//                entity.Property(e => e.Abrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ABREV");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.IhseCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("IHSE_CODE");

//                entity.Property(e => e.IhseName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("IHSE_NAME");

//                entity.Property(e => e.IhsePlotSymbol)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("IHSE_PLOT_SYMBOL");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.PetraFluid)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("PETRA_FLUID");

//                entity.Property(e => e.PetraMode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("PETRA_MODE");

//                entity.Property(e => e.PlotSymbol)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("PLOT_SYMBOL");

//                entity.Property(e => e.RowChangedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CHANGED_BY");

//                entity.Property(e => e.RowChangedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CHANGED_DATE");

//                entity.Property(e => e.RowCreatedBy)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ROW_CREATED_BY");

//                entity.Property(e => e.RowCreatedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ROW_CREATED_DATE");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE");

//                entity.Property(e => e.SourceCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SOURCE_CODE");

//                entity.Property(e => e.V80cCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("V80C_CODE");

//                entity.Property(e => e.V80cName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("V80C_NAME");

//                entity.Property(e => e.V80cPlotSymbol)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("V80C_PLOT_SYMBOL");
//            });

//            modelBuilder.Entity<TInvoice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoiceAction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions", "openinvoice");

//                entity.Property(e => e.ActionDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_date");

//                entity.Property(e => e.ActionKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_status");

//                entity.Property(e => e.ActionType)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_type");

//                entity.Property(e => e.Department)
//                    .HasMaxLength(250)
//                    .HasColumnName("department");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(500)
//                    .HasColumnName("email");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_name");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");
//            });

//            modelBuilder.Entity<TInvoiceActions20220413>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions_2022-04-13", "openinvoice");

//                entity.Property(e => e.ActionDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_date");

//                entity.Property(e => e.ActionKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_status");

//                entity.Property(e => e.ActionType)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_type");

//                entity.Property(e => e.Department)
//                    .HasMaxLength(250)
//                    .HasColumnName("department");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(500)
//                    .HasColumnName("email");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_name");
//            });

//            modelBuilder.Entity<TInvoiceActions20220505>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions_2022_05_05", "openinvoice");

//                entity.Property(e => e.ActionDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_date");

//                entity.Property(e => e.ActionKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_status");

//                entity.Property(e => e.ActionType)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_type");

//                entity.Property(e => e.Department)
//                    .HasMaxLength(250)
//                    .HasColumnName("department");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(500)
//                    .HasColumnName("email");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_name");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");
//            });

//            modelBuilder.Entity<TInvoiceActionsAzud>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions_azud", "openinvoice");

//                entity.Property(e => e.ActionDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_date");

//                entity.Property(e => e.ActionKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_status");

//                entity.Property(e => e.ActionType)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_type");

//                entity.Property(e => e.Department)
//                    .HasMaxLength(250)
//                    .HasColumnName("department");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(500)
//                    .HasColumnName("email");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_name");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");
//            });

//            modelBuilder.Entity<TInvoiceActionsAzud2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions_azud2", "openinvoice");

//                entity.Property(e => e.ActionDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_date");

//                entity.Property(e => e.ActionKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_status");

//                entity.Property(e => e.ActionType)
//                    .HasMaxLength(50)
//                    .HasColumnName("action_type");

//                entity.Property(e => e.Department)
//                    .HasMaxLength(250)
//                    .HasColumnName("department");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(500)
//                    .HasColumnName("email");

//                entity.Property(e => e.FirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_name");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");
//            });

//            modelBuilder.Entity<TInvoiceActionsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_actions_incr", "openinvoice");

//                entity.Property(e => e.ActionDate).HasColumnName("action_date");

//                entity.Property(e => e.ActionKey).HasColumnName("action_key");

//                entity.Property(e => e.ActionStatus).HasColumnName("action_status");

//                entity.Property(e => e.ActionType).HasColumnName("action_type");

//                entity.Property(e => e.Department).HasColumnName("department");

//                entity.Property(e => e.Email).HasColumnName("email");

//                entity.Property(e => e.FirstName).HasColumnName("first_name");

//                entity.Property(e => e.InvoiceKey).HasColumnName("invoice_key");

//                entity.Property(e => e.LastName).HasColumnName("last_name");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");
//            });

//            modelBuilder.Entity<TInvoiceAttachment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_attachments", "openinvoice");

//                entity.Property(e => e.AttachmentKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("attachment_key");

//                entity.Property(e => e.AttachmentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("attachment_type");

//                entity.Property(e => e.ContentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("content_type");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LocationPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("location_path");
//            });

//            modelBuilder.Entity<TInvoiceAttachmentsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_attachments_incr", "openinvoice");

//                entity.Property(e => e.AttachmentKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("attachment_key");

//                entity.Property(e => e.AttachmentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("attachment_type");

//                entity.Property(e => e.ContentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("content_type");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LocationPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("location_path");
//            });

//            modelBuilder.Entity<TInvoiceEnergylink>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_energylink", "openinvoice");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("Invoice_key");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.OrgId)
//                    .HasMaxLength(100)
//                    .HasColumnName("org_id");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("service_date");
//            });

//            modelBuilder.Entity<TInvoiceKey>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_keys", "openinvoice");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(256)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceStatus)
//                    .HasMaxLength(128)
//                    .HasColumnName("invoice_status");
//            });

//            modelBuilder.Entity<TInvoiceKeysException>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_keys_exceptions", "openinvoice");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(256)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("invoice_number");
//            });

//            modelBuilder.Entity<TInvoiceLineItem>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_line_items", "openinvoice");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountType)
//                    .HasMaxLength(10)
//                    .HasColumnName("account_type");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.Amount)
//                    .HasMaxLength(50)
//                    .HasColumnName("amount");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .HasColumnName("description");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.DocumentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_type");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LineItemNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("line_item_number");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(500)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(10)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.Quantity)
//                    .HasMaxLength(100)
//                    .HasColumnName("quantity");

//                entity.Property(e => e.RateOrPercentage)
//                    .HasMaxLength(20)
//                    .HasColumnName("rate_or_percentage");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("service_date");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(10)
//                    .HasColumnName("tax_type");
//            });

//            modelBuilder.Entity<TInvoiceLineItemsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_line_items_incr", "openinvoice");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountType)
//                    .HasMaxLength(10)
//                    .HasColumnName("account_type");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .HasColumnName("description");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.DocumentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_type");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(250)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LineItemNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("line_item_number");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(500)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(10)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.Quantity)
//                    .HasMaxLength(100)
//                    .HasColumnName("quantity");

//                entity.Property(e => e.RateOrPercentage)
//                    .HasMaxLength(20)
//                    .HasColumnName("rate_or_percentage");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("service_date");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(10)
//                    .HasColumnName("tax_type");
//            });

//            modelBuilder.Entity<TInvoiceLineItemsIncr20220527>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoice_line_items_incr_20220527", "openinvoice");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountType)
//                    .HasMaxLength(10)
//                    .HasColumnName("account_type");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(1000)
//                    .HasColumnName("description");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.DocumentType)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_type");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LineItemNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("line_item_number");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(500)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(10)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.Quantity)
//                    .HasMaxLength(100)
//                    .HasColumnName("quantity");

//                entity.Property(e => e.RateOrPercentage)
//                    .HasMaxLength(20)
//                    .HasColumnName("rate_or_percentage");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("service_date");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(10)
//                    .HasColumnName("tax_type");
//            });

//            modelBuilder.Entity<TInvoices20220324>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_2022_03_24", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoices20220328>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_20220328", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoices20220329>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_2022_03_29", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoices20220411>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_2022-04-11", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoices20220419>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_2022-04-19", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoicesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_incr", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(500)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(500)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(500)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(500)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoicesIncr20220324>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_incr_2022_03_24", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TInvoicesIncr20220324New>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_invoices_incr_2022_03_24_new", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.CurrentOwnerFirstName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_first_name");

//                entity.Property(e => e.CurrentOwnerLastName)
//                    .HasMaxLength(100)
//                    .HasColumnName("current_owner_last_name");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");
//            });

//            modelBuilder.Entity<TLeaseopsCurrentPriorScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_leaseops_current_prior_scenario", "data_mart");

//                entity.Property(e => e.Isleaf).HasColumnName("isleaf");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TLeaseopsCurrentPriorScenario20220117>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_leaseops_current_prior_scenario_20220117", "data_mart");

//                entity.Property(e => e.Isleaf).HasColumnName("isleaf");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<TMdsBcdCostCentreCustomGrouping>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_mds_bcd_cost_centre_custom_groupings", "stage_mds");

//                entity.Property(e => e.Code).HasMaxLength(250);

//                entity.Property(e => e.CostCentreType)
//                    .HasMaxLength(100)
//                    .HasColumnName("Cost Centre Type");

//                entity.Property(e => e.EnterDateTime).HasPrecision(3);

//                entity.Property(e => e.EnterUserName).HasMaxLength(100);

//                entity.Property(e => e.Group1).HasMaxLength(100);

//                entity.Property(e => e.Group10).HasMaxLength(100);

//                entity.Property(e => e.Group2).HasMaxLength(100);

//                entity.Property(e => e.Group3).HasMaxLength(100);

//                entity.Property(e => e.Group4).HasMaxLength(100);

//                entity.Property(e => e.Group5).HasMaxLength(100);

//                entity.Property(e => e.Group6).HasMaxLength(100);

//                entity.Property(e => e.Group7).HasMaxLength(100);

//                entity.Property(e => e.Group8).HasMaxLength(100);

//                entity.Property(e => e.Group9).HasMaxLength(100);

//                entity.Property(e => e.Id).HasColumnName("ID");

//                entity.Property(e => e.LastChgDateTime).HasPrecision(3);

//                entity.Property(e => e.LastChgUserName).HasMaxLength(100);

//                entity.Property(e => e.Muid).HasColumnName("MUID");

//                entity.Property(e => e.Name).HasMaxLength(250);

//                entity.Property(e => e.ValidationStatus).HasMaxLength(250);

//                entity.Property(e => e.VersionFlag).HasMaxLength(50);

//                entity.Property(e => e.VersionId).HasColumnName("Version_ID");

//                entity.Property(e => e.VersionName).HasMaxLength(50);
//            });

//            modelBuilder.Entity<TOpeninvoiceDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_openinvoice_details", "openinvoice");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(601)
//                    .HasColumnName("account");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.BaInfo)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_info");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_desc");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(201)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.InvcAmount)
//                    .HasMaxLength(50)
//                    .HasColumnName("invc_amount");

//                entity.Property(e => e.InvoiceCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("invoice_create_date");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDetailsUrl)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_details_url");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_status");

//                entity.Property(e => e.LastApprover)
//                    .HasMaxLength(201)
//                    .HasColumnName("last_approver");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(500)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.NetAcct)
//                    .HasMaxLength(601)
//                    .HasColumnName("net_acct");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type");
//            });

//            modelBuilder.Entity<TOpeninvoiceDetails20220309>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_openinvoice_details_2022_03_09", "openinvoice");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(201)
//                    .HasColumnName("account");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.BaInfo)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_info");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_desc");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(201)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.InvcAmount)
//                    .HasMaxLength(50)
//                    .HasColumnName("invc_amount");

//                entity.Property(e => e.InvoiceCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("invoice_create_date");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDetailsUrl)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_details_url");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_status");

//                entity.Property(e => e.LastApprover)
//                    .HasMaxLength(201)
//                    .HasColumnName("last_approver");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.NetAcct)
//                    .HasMaxLength(201)
//                    .HasColumnName("net_acct");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type");
//            });

//            modelBuilder.Entity<TOwner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("T_OWNERS", "stage_csx_csland");

//                entity.Property(e => e.AiStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AI_STATUS");

//                entity.Property(e => e.CalculateNets)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATE_NETS");

//                entity.Property(e => e.ChequeOwner)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CHEQUE_OWNER")
//                    .IsFixedLength();

//                entity.Property(e => e.ChequeRun)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CHEQUE_RUN");

//                entity.Property(e => e.CodeInUse)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("CODE_IN_USE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.Owner)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER")
//                    .IsFixedLength();

//                entity.Property(e => e.Reserved)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("RESERVED");

//                entity.Property(e => e.RuainvOwner)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("RUAINV_OWNER")
//                    .IsFixedLength();

//                entity.Property(e => e.RuainvRun)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RUAINV_RUN");
//            });

//            modelBuilder.Entity<TProdviewAllocatedVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_allocated_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Gassalesestimate).HasColumnName("gassalesestimate");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");
//            });

//            modelBuilder.Entity<TProdviewAllocatedVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_allocated_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Gassalesestimate).HasColumnName("gassalesestimate");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");
//            });

//            modelBuilder.Entity<TProdviewAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_attributes", "stage");

//                entity.Property(e => e.EngineeringInlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineering_inline_test_date");

//                entity.Property(e => e.EngineeringOnProdDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineering_on_prod_date");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("decimal(5, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("decimal(9, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TProdviewBsw>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_bsw", "stage");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.CalcDttmEnd)
//                    .HasColumnType("date")
//                    .HasColumnName("calc_dttm_end");

//                entity.Property(e => e.CalcDttmStart)
//                    .HasColumnType("date")
//                    .HasColumnName("calc_dttm_start");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("date")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<TProdviewDowntimeHoursVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_downtime_hours_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");
//            });

//            modelBuilder.Entity<TProdviewDowntimeHoursVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_downtime_hours_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");
//            });

//            modelBuilder.Entity<TProdviewInjectionVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_injection_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");
//            });

//            modelBuilder.Entity<TProdviewInjectionVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_injection_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");
//            });

//            modelBuilder.Entity<TProdviewJointsToFluid>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_joints_to_fluid", "stage");

//                entity.Property(e => e.CalcDttmEnd)
//                    .HasColumnType("date")
//                    .HasColumnName("calc_dttm_end");

//                entity.Property(e => e.CalcDttmStart)
//                    .HasColumnType("date")
//                    .HasColumnName("calc_dttm_start");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<TProdviewOnstreamDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_onstream_dates", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("date")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.OnstreamYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("onstream_year");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TProdviewProrationData20200727>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_proration_data_20200727", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .HasColumnName("COSTCENTER");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(50)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.Gas).HasColumnName("GAS");

//                entity.Property(e => e.Hcliq).HasColumnName("HCLIQ");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.Tdate)
//                    .HasColumnType("date")
//                    .HasColumnName("TDATE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.Water).HasColumnName("WATER");
//            });

//            modelBuilder.Entity<TProdviewProrationDataIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_proration_data_incr", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .HasColumnName("COSTCENTER");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(50)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.Gas).HasColumnName("GAS");

//                entity.Property(e => e.Hcliq).HasColumnName("HCLIQ");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.Tdate)
//                    .HasColumnType("date")
//                    .HasColumnName("TDATE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.Water).HasColumnName("WATER");
//            });

//            modelBuilder.Entity<TProdviewProrationDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_proration_data", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .HasColumnName("COSTCENTER");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(50)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.Gas).HasColumnName("GAS");

//                entity.Property(e => e.Hcliq).HasColumnName("HCLIQ");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.Tdate)
//                    .HasColumnType("date")
//                    .HasColumnName("TDATE");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.Water).HasColumnName("WATER");
//            });

//            modelBuilder.Entity<TProdviewSalesDispositionPoint>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_sales_disposition_points", "datamart_marketing");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TProdviewShrinkYieldRate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_shrink_yield_rates", "stage");

//                entity.Property(e => e.C2Yield).HasColumnName("c2_yield");

//                entity.Property(e => e.C3Yield).HasColumnName("c3_yield");

//                entity.Property(e => e.C4Yield).HasColumnName("c4_yield");

//                entity.Property(e => e.C5Yield).HasColumnName("c5_yield");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.CondyYield).HasColumnName("condy_yield");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("date")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("date")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.GasShrinkage).HasColumnName("gas_shrinkage");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.OilYield).HasColumnName("oil_yield");

//                entity.Property(e => e.TotalYieldFactor).HasColumnName("total_yield_factor");
//            });

//            modelBuilder.Entity<TProdviewTypfluidprod>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_prodview_typfluidprod", "stage");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Ettm)
//                    .HasColumnType("date")
//                    .HasColumnName("ettm");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typfluidprod)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidprod");
//            });

//            modelBuilder.Entity<TPvrTwell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvr_twell", "stage");

//                entity.Property(e => e.AutoLoadWio)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTO_LOAD_WIO");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_ID");

//                entity.Property(e => e.CompanyId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("COMPANY_ID");

//                entity.Property(e => e.CondGasRatio)
//                    .HasColumnType("numeric(12, 5)")
//                    .HasColumnName("COND_GAS_RATIO");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_ID");

//                entity.Property(e => e.DailyAllowable)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("DAILY_ALLOWABLE");

//                entity.Property(e => e.DeliveryMeterId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_METER_ID");

//                entity.Property(e => e.EntrySequenceNumber)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ENTRY_SEQUENCE_NUMBER");

//                entity.Property(e => e.FieldLocation)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_LOCATION");

//                entity.Property(e => e.FlowHours)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_HOURS");

//                entity.Property(e => e.GasCapabilityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("GAS_CAPABILITY_DATE");

//                entity.Property(e => e.GasCapabilityPerDay)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("GAS_CAPABILITY_PER_DAY");

//                entity.Property(e => e.GasCharts)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_CHARTS");

//                entity.Property(e => e.GasDeclineRatePerYear)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("GAS_DECLINE_RATE_PER_YEAR");

//                entity.Property(e => e.GasOilRatio)
//                    .HasColumnType("numeric(12, 5)")
//                    .HasColumnName("GAS_OIL_RATIO");

//                entity.Property(e => e.GovBatteryCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("GOV_BATTERY_CODE");

//                entity.Property(e => e.HorizonPool)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("HORIZON_POOL");

//                entity.Property(e => e.HorizontalWell)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("HORIZONTAL_WELL");

//                entity.Property(e => e.Info1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("INFO_1");

//                entity.Property(e => e.Info2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("INFO_2");

//                entity.Property(e => e.Info3)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("INFO_3");

//                entity.Property(e => e.LeaseFuelRate)
//                    .HasColumnType("numeric(12, 5)")
//                    .HasColumnName("LEASE_FUEL_RATE");

//                entity.Property(e => e.LinkFacilitySeqId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LINK_FACILITY_SEQ_ID");

//                entity.Property(e => e.LinkFuncUnitSeqId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LINK_FUNC_UNIT_SEQ_ID");

//                entity.Property(e => e.MerakLocation)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("MERAK_LOCATION");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("METER_TYPE");

//                entity.Property(e => e.MonitorWellFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MONITOR_WELL_FLAG");

//                entity.Property(e => e.NativeCo2Fraction)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("NATIVE_CO2_FRACTION");

//                entity.Property(e => e.NewOldOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NEW_OLD_OIL");

//                entity.Property(e => e.OilCapabilityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("OIL_CAPABILITY_DATE");

//                entity.Property(e => e.OilCapabilityPerDay)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("OIL_CAPABILITY_PER_DAY");

//                entity.Property(e => e.OilDeclineRatePerYear)
//                    .HasColumnType("numeric(20, 10)")
//                    .HasColumnName("OIL_DECLINE_RATE_PER_YEAR");

//                entity.Property(e => e.OilType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_TYPE");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ON_PRODUCTION_DATE");

//                entity.Property(e => e.OpNonopIndicator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OP_NONOP_INDICATOR");

//                entity.Property(e => e.PaId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_ID");

//                entity.Property(e => e.PaInterface)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_INTERFACE");

//                entity.Property(e => e.PmGuid)
//                    .HasMaxLength(32)
//                    .HasColumnName("PM_GUID")
//                    .IsFixedLength();

//                entity.Property(e => e.RecombLiq)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RECOMB_LIQ");

//                entity.Property(e => e.ReturnFuelMeterId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("RETURN_FUEL_METER_ID");

//                entity.Property(e => e.RoyaltyHoliday)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_HOLIDAY");

//                entity.Property(e => e.SatelliteSeqId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SATELLITE_SEQ_ID");

//                entity.Property(e => e.SubCatSeqId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SUB_CAT_SEQ_ID");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.TestMeasureFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TEST_MEASURE_FLAG");

//                entity.Property(e => e.TestMethod)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TEST_METHOD");

//                entity.Property(e => e.TestsRequired)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TESTS_REQUIRED");

//                entity.Property(e => e.TractPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("TRACT_PERCENT");

//                entity.Property(e => e.UpdtDte)
//                    .HasColumnType("date")
//                    .HasColumnName("UPDT_DTE");

//                entity.Property(e => e.UpdtUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("UPDT_USER");

//                entity.Property(e => e.WaterGasRatio)
//                    .HasColumnType("numeric(12, 5)")
//                    .HasColumnName("WATER_GAS_RATIO");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellLocation)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_LOCATION");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TYPE");

//                entity.Property(e => e.WetMeasuredGas)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WET_MEASURED_GAS");
//            });

//            modelBuilder.Entity<TPvrUwiOnstreamDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvr_uwi_onstream_dates", "stage");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ONSTREAM_DATE");

//                entity.Property(e => e.OnstreamYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ONSTREAM_YEAR");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");
//            });

//            modelBuilder.Entity<TPvtPvfacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvfacility", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Facilityida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityida");

//                entity.Property(e => e.Facilityidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidb");

//                entity.Property(e => e.Facilityidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidc");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Hidefacrev).HasColumnName("hidefacrev");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("idpa");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecunitprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimary");

//                entity.Property(e => e.Idrecunitprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimarytk");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Permanentid)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("permanentid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Treathcliquidasgas).HasColumnName("treathcliquidasgas");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typpa");

//                entity.Property(e => e.Typregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typregulatory");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");
//            });

//            modelBuilder.Entity<TPvtPvfacilitymonthdaycalc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvfacilitymonthdaycalc", "stage_prodview");

//                entity.Property(e => e.Balanced).HasColumnName("balanced");

//                entity.Property(e => e.Balfactgas).HasColumnName("balfactgas");

//                entity.Property(e => e.Balfactgasplusgaseq).HasColumnName("balfactgasplusgaseq");

//                entity.Property(e => e.Balfacthcliq).HasColumnName("balfacthcliq");

//                entity.Property(e => e.Balfactsand).HasColumnName("balfactsand");

//                entity.Property(e => e.Balfactwater).HasColumnName("balfactwater");

//                entity.Property(e => e.Balgas).HasColumnName("balgas");

//                entity.Property(e => e.Balgasplusgaseq).HasColumnName("balgasplusgaseq");

//                entity.Property(e => e.Balhcliq).HasColumnName("balhcliq");

//                entity.Property(e => e.Balsand).HasColumnName("balsand");

//                entity.Property(e => e.Balwater).HasColumnName("balwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volbalgas).HasColumnName("volbalgas");

//                entity.Property(e => e.Volbalgasplusgaseq).HasColumnName("volbalgasplusgaseq");

//                entity.Property(e => e.Volbalhcliq).HasColumnName("volbalhcliq");

//                entity.Property(e => e.Volbalsand).HasColumnName("volbalsand");

//                entity.Property(e => e.Volbalwater).HasColumnName("volbalwater");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volendremainrecovgas).HasColumnName("volendremainrecovgas");

//                entity.Property(e => e.Volendremainrecovgasplusgeq).HasColumnName("volendremainrecovgasplusgeq");

//                entity.Property(e => e.Volendremainrecovhcliq).HasColumnName("volendremainrecovhcliq");

//                entity.Property(e => e.Volendremainrecovsand).HasColumnName("volendremainrecovsand");

//                entity.Property(e => e.Volendremainrecovwater).HasColumnName("volendremainrecovwater");

//                entity.Property(e => e.Volinothergas).HasColumnName("volinothergas");

//                entity.Property(e => e.Volinothergasplusgaseq).HasColumnName("volinothergasplusgaseq");

//                entity.Property(e => e.Volinotherhcliq).HasColumnName("volinotherhcliq");

//                entity.Property(e => e.Volinothersand).HasColumnName("volinothersand");

//                entity.Property(e => e.Volinotherwater).HasColumnName("volinotherwater");

//                entity.Property(e => e.Volinrecovgas).HasColumnName("volinrecovgas");

//                entity.Property(e => e.Volinrecovgasplusgaseq).HasColumnName("volinrecovgasplusgaseq");

//                entity.Property(e => e.Volinrecovhcliq).HasColumnName("volinrecovhcliq");

//                entity.Property(e => e.Volinrecovsand).HasColumnName("volinrecovsand");

//                entity.Property(e => e.Volinrecovwater).HasColumnName("volinrecovwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathgasplusgaseq).HasColumnName("volnewprodgathgasplusgaseq");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Voloutconsumegas).HasColumnName("voloutconsumegas");

//                entity.Property(e => e.Voloutconsumegasplusgaseq).HasColumnName("voloutconsumegasplusgaseq");

//                entity.Property(e => e.Voloutconsumehcliq).HasColumnName("voloutconsumehcliq");

//                entity.Property(e => e.Voloutconsumesand).HasColumnName("voloutconsumesand");

//                entity.Property(e => e.Voloutconsumewater).HasColumnName("voloutconsumewater");

//                entity.Property(e => e.Voloutinjectrecovgas).HasColumnName("voloutinjectrecovgas");

//                entity.Property(e => e.Voloutinjectrecovgasplusgaseq).HasColumnName("voloutinjectrecovgasplusgaseq");

//                entity.Property(e => e.Voloutinjectrecovhcliq).HasColumnName("voloutinjectrecovhcliq");

//                entity.Property(e => e.Voloutinjectrecovsand).HasColumnName("voloutinjectrecovsand");

//                entity.Property(e => e.Voloutinjectrecovwater).HasColumnName("voloutinjectrecovwater");

//                entity.Property(e => e.Voloutothergas).HasColumnName("voloutothergas");

//                entity.Property(e => e.Voloutothergasplusgaseq).HasColumnName("voloutothergasplusgaseq");

//                entity.Property(e => e.Voloutotherhcliq).HasColumnName("voloutotherhcliq");

//                entity.Property(e => e.Voloutothersand).HasColumnName("voloutothersand");

//                entity.Property(e => e.Voloutotherwater).HasColumnName("voloutotherwater");

//                entity.Property(e => e.Volprodgas).HasColumnName("volprodgas");

//                entity.Property(e => e.Volprodgasplusgaseq).HasColumnName("volprodgasplusgaseq");

//                entity.Property(e => e.Volprodhcliq).HasColumnName("volprodhcliq");

//                entity.Property(e => e.Volprodsand).HasColumnName("volprodsand");

//                entity.Property(e => e.Volprodwater).HasColumnName("volprodwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovgasplusgeq).HasColumnName("volstartremainrecovgasplusgeq");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Volstvgas).HasColumnName("volstvgas");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvflownetheader>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvflownetheader", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmallocprocessbegan)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmallocprocessbegan");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmlastallocprocess)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmlastallocprocess");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrecfacilityprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilityprimary");

//                entity.Property(e => e.Idrecfacilityprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilityprimarytk");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecunitprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimary");

//                entity.Property(e => e.Idrecunitprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunitprimarytk");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Rptallocations).HasColumnName("rptallocations");

//                entity.Property(e => e.Rptcomponentdispositions).HasColumnName("rptcomponentdispositions");

//                entity.Property(e => e.Rptdispositions).HasColumnName("rptdispositions");

//                entity.Property(e => e.Rptgatheredcalcs).HasColumnName("rptgatheredcalcs");

//                entity.Property(e => e.Rptnodecalculations).HasColumnName("rptnodecalculations");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockdatemaster)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdatemaster");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoddatedb)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddatedb");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysmoduserdb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduserdb");

//                entity.Property(e => e.Syssecuritytyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syssecuritytyp");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Userlastallocprocess)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("userlastallocprocess");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");
//            });

//            modelBuilder.Entity<TPvtPvrouteset>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvrouteset", "stage_prodview");

//                entity.Property(e => e.Activetodaycalc).HasColumnName("activetodaycalc");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvroutesetroute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvroutesetroute", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");
//            });

//            modelBuilder.Entity<TPvtPvunit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunit", "stage_prodview");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Costcenterida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenterida");

//                entity.Property(e => e.Costcenteridb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenteridb");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("country");

//                entity.Property(e => e.County)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("county");

//                entity.Property(e => e.Displaysizefactor).HasColumnName("displaysizefactor");

//                entity.Property(e => e.Dispproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispproductname");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("division");

//                entity.Property(e => e.Divisioncode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("divisioncode");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Elevation).HasColumnName("elevation");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("field");

//                entity.Property(e => e.Fieldcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldcode");

//                entity.Property(e => e.Fieldoffice)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldoffice");

//                entity.Property(e => e.Fieldofficecode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldofficecode");

//                entity.Property(e => e.Govauthority)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("govauthority");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecfacilitycalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitycalc");

//                entity.Property(e => e.Idrecfacilitycalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitycalctk");

//                entity.Property(e => e.Idrecresp1)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1");

//                entity.Property(e => e.Idrecresp1tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp1tk");

//                entity.Property(e => e.Idrecresp2)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2");

//                entity.Property(e => e.Idrecresp2tk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecresp2tk");

//                entity.Property(e => e.Idrecroutesetroutecalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecroutesetroutecalc");

//                entity.Property(e => e.Idrecroutesetroutecalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecroutesetroutecalctk");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Latitude).HasColumnName("latitude");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Latlongsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongsource");

//                entity.Property(e => e.Lease)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("lease");

//                entity.Property(e => e.Leaseida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("leaseida");

//                entity.Property(e => e.Legalsurfloc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurfloc");

//                entity.Property(e => e.Locationtyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("locationtyp");

//                entity.Property(e => e.Longitude).HasColumnName("longitude");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Operated).HasColumnName("operated");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Operatorida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operatorida");

//                entity.Property(e => e.Padcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padcode");

//                entity.Property(e => e.Padname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padname");

//                entity.Property(e => e.Platform)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("platform");

//                entity.Property(e => e.Priority).HasColumnName("priority");

//                entity.Property(e => e.Purchaser).HasColumnName("purchaser");

//                entity.Property(e => e.Slot)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("slot");

//                entity.Property(e => e.Sortbyuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sortbyuser");

//                entity.Property(e => e.Stateprov)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("stateprov");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Timezone)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("timezone");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typdisphcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisphcliq");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Typpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typpa");

//                entity.Property(e => e.Typregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typregulatory");

//                entity.Property(e => e.Unitida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitida");

//                entity.Property(e => e.Unitidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidb");

//                entity.Property(e => e.Unitidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidc");

//                entity.Property(e => e.Unitidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidpa");

//                entity.Property(e => e.Unitidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidregulatory");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Utmgridzone).HasColumnName("utmgridzone");

//                entity.Property(e => e.Utmsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("utmsource");

//                entity.Property(e => e.Utmx).HasColumnName("utmx");

//                entity.Property(e => e.Utmy).HasColumnName("utmy");
//            });

//            modelBuilder.Entity<TPvtPvunitagreemt>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitagreemt", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecappliesto)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecappliesto");

//                entity.Property(e => e.Idrecappliestotk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecappliestotk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Refida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refida");

//                entity.Property(e => e.Refidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidb");

//                entity.Property(e => e.Refidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidc");

//                entity.Property(e => e.Subtyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("subtyp1");

//                entity.Property(e => e.Subtyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("subtyp2");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");
//            });

//            modelBuilder.Entity<TPvtPvunitallocmonthday>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitallocmonthday", "stage_prodview");

//                entity.Property(e => e.Allocfactgas).HasColumnName("allocfactgas");

//                entity.Property(e => e.Allocfacthcliq).HasColumnName("allocfacthcliq");

//                entity.Property(e => e.Allocfactsand).HasColumnName("allocfactsand");

//                entity.Property(e => e.Allocfactwater).HasColumnName("allocfactwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Nrigas).HasColumnName("nrigas");

//                entity.Property(e => e.Nrihcliq).HasColumnName("nrihcliq");

//                entity.Property(e => e.Nrisand).HasColumnName("nrisand");

//                entity.Property(e => e.Nriwater).HasColumnName("nriwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Voldifftargetcond).HasColumnName("voldifftargetcond");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetngl).HasColumnName("voldifftargetngl");

//                entity.Property(e => e.Voldifftargetoil).HasColumnName("voldifftargetoil");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Voldispflaregas).HasColumnName("voldispflaregas");

//                entity.Property(e => e.Voldispfuelgas).HasColumnName("voldispfuelgas");

//                entity.Property(e => e.Voldispincinerategas).HasColumnName("voldispincinerategas");

//                entity.Property(e => e.Voldispinjectgas).HasColumnName("voldispinjectgas");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalecond).HasColumnName("voldispsalecond");

//                entity.Property(e => e.Voldispsalegas).HasColumnName("voldispsalegas");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Voldispsalengl).HasColumnName("voldispsalengl");

//                entity.Property(e => e.Voldispsaleoil).HasColumnName("voldispsaleoil");

//                entity.Property(e => e.Voldispventgas).HasColumnName("voldispventgas");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectrecovgas).HasColumnName("volinjectrecovgas");

//                entity.Property(e => e.Volinjectrecovhcliq).HasColumnName("volinjectrecovhcliq");

//                entity.Property(e => e.Volinjectrecovsand).HasColumnName("volinjectrecovsand");

//                entity.Property(e => e.Volinjectrecovwater).HasColumnName("volinjectrecovwater");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodalloccond).HasColumnName("volnewprodalloccond");

//                entity.Property(e => e.Volnewprodallocgas).HasColumnName("volnewprodallocgas");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallochcliqgaseq).HasColumnName("volnewprodallochcliqgaseq");

//                entity.Property(e => e.Volnewprodallocngl).HasColumnName("volnewprodallocngl");

//                entity.Property(e => e.Volnewprodallocoil).HasColumnName("volnewprodallocoil");

//                entity.Property(e => e.Volnewprodallocsand).HasColumnName("volnewprodallocsand");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodalloccond).HasColumnName("volprodalloccond");

//                entity.Property(e => e.Volprodallocgas).HasColumnName("volprodallocgas");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodallochcliqgaseq).HasColumnName("volprodallochcliqgaseq");

//                entity.Property(e => e.Volprodallocngl).HasColumnName("volprodallocngl");

//                entity.Property(e => e.Volprodallocoil).HasColumnName("volprodallocoil");

//                entity.Property(e => e.Volprodallocsand).HasColumnName("volprodallocsand");

//                entity.Property(e => e.Volprodallocwater).HasColumnName("volprodallocwater");

//                entity.Property(e => e.Volprodcumcond).HasColumnName("volprodcumcond");

//                entity.Property(e => e.Volprodcumgas).HasColumnName("volprodcumgas");

//                entity.Property(e => e.Volprodcumhcliq).HasColumnName("volprodcumhcliq");

//                entity.Property(e => e.Volprodcumngl).HasColumnName("volprodcumngl");

//                entity.Property(e => e.Volprodcumoil).HasColumnName("volprodcumoil");

//                entity.Property(e => e.Volprodcumsand).HasColumnName("volprodcumsand");

//                entity.Property(e => e.Volprodcumwater).HasColumnName("volprodcumwater");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathsand).HasColumnName("volprodgathsand");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volrecovgas).HasColumnName("volrecovgas");

//                entity.Property(e => e.Volrecovhcliq).HasColumnName("volrecovhcliq");

//                entity.Property(e => e.Volrecovsand).HasColumnName("volrecovsand");

//                entity.Property(e => e.Volrecovwater).HasColumnName("volrecovwater");

//                entity.Property(e => e.Volremainrecovgas).HasColumnName("volremainrecovgas");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");

//                entity.Property(e => e.Volremainrecovsand).HasColumnName("volremainrecovsand");

//                entity.Property(e => e.Volremainrecovwater).HasColumnName("volremainrecovwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Wigas).HasColumnName("wigas");

//                entity.Property(e => e.Wihcliq).HasColumnName("wihcliq");

//                entity.Property(e => e.Wisand).HasColumnName("wisand");

//                entity.Property(e => e.Wiwater).HasColumnName("wiwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitallocmonthdayIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitallocmonthday_incr", "stage_prodview");

//                entity.Property(e => e.Allocfactgas).HasColumnName("allocfactgas");

//                entity.Property(e => e.Allocfacthcliq).HasColumnName("allocfacthcliq");

//                entity.Property(e => e.Allocfactsand).HasColumnName("allocfactsand");

//                entity.Property(e => e.Allocfactwater).HasColumnName("allocfactwater");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Nrigas).HasColumnName("nrigas");

//                entity.Property(e => e.Nrihcliq).HasColumnName("nrihcliq");

//                entity.Property(e => e.Nrisand).HasColumnName("nrisand");

//                entity.Property(e => e.Nriwater).HasColumnName("nriwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volchginvhcliq).HasColumnName("volchginvhcliq");

//                entity.Property(e => e.Volchginvhcliqgaseq).HasColumnName("volchginvhcliqgaseq");

//                entity.Property(e => e.Volchginvsand).HasColumnName("volchginvsand");

//                entity.Property(e => e.Volchginvwater).HasColumnName("volchginvwater");

//                entity.Property(e => e.Voldifftargetcond).HasColumnName("voldifftargetcond");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetngl).HasColumnName("voldifftargetngl");

//                entity.Property(e => e.Voldifftargetoil).HasColumnName("voldifftargetoil");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Voldispflaregas).HasColumnName("voldispflaregas");

//                entity.Property(e => e.Voldispfuelgas).HasColumnName("voldispfuelgas");

//                entity.Property(e => e.Voldispincinerategas).HasColumnName("voldispincinerategas");

//                entity.Property(e => e.Voldispinjectgas).HasColumnName("voldispinjectgas");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalecond).HasColumnName("voldispsalecond");

//                entity.Property(e => e.Voldispsalegas).HasColumnName("voldispsalegas");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Voldispsalengl).HasColumnName("voldispsalengl");

//                entity.Property(e => e.Voldispsaleoil).HasColumnName("voldispsaleoil");

//                entity.Property(e => e.Voldispventgas).HasColumnName("voldispventgas");

//                entity.Property(e => e.Volendinvhcliq).HasColumnName("volendinvhcliq");

//                entity.Property(e => e.Volendinvhcliqgaseq).HasColumnName("volendinvhcliqgaseq");

//                entity.Property(e => e.Volendinvsand).HasColumnName("volendinvsand");

//                entity.Property(e => e.Volendinvwater).HasColumnName("volendinvwater");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectrecovgas).HasColumnName("volinjectrecovgas");

//                entity.Property(e => e.Volinjectrecovhcliq).HasColumnName("volinjectrecovhcliq");

//                entity.Property(e => e.Volinjectrecovsand).HasColumnName("volinjectrecovsand");

//                entity.Property(e => e.Volinjectrecovwater).HasColumnName("volinjectrecovwater");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodalloccond).HasColumnName("volnewprodalloccond");

//                entity.Property(e => e.Volnewprodallocgas).HasColumnName("volnewprodallocgas");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallochcliqgaseq).HasColumnName("volnewprodallochcliqgaseq");

//                entity.Property(e => e.Volnewprodallocngl).HasColumnName("volnewprodallocngl");

//                entity.Property(e => e.Volnewprodallocoil).HasColumnName("volnewprodallocoil");

//                entity.Property(e => e.Volnewprodallocsand).HasColumnName("volnewprodallocsand");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodalloccond).HasColumnName("volprodalloccond");

//                entity.Property(e => e.Volprodallocgas).HasColumnName("volprodallocgas");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodallochcliqgaseq).HasColumnName("volprodallochcliqgaseq");

//                entity.Property(e => e.Volprodallocngl).HasColumnName("volprodallocngl");

//                entity.Property(e => e.Volprodallocoil).HasColumnName("volprodallocoil");

//                entity.Property(e => e.Volprodallocsand).HasColumnName("volprodallocsand");

//                entity.Property(e => e.Volprodallocwater).HasColumnName("volprodallocwater");

//                entity.Property(e => e.Volprodcumcond).HasColumnName("volprodcumcond");

//                entity.Property(e => e.Volprodcumgas).HasColumnName("volprodcumgas");

//                entity.Property(e => e.Volprodcumhcliq).HasColumnName("volprodcumhcliq");

//                entity.Property(e => e.Volprodcumngl).HasColumnName("volprodcumngl");

//                entity.Property(e => e.Volprodcumoil).HasColumnName("volprodcumoil");

//                entity.Property(e => e.Volprodcumsand).HasColumnName("volprodcumsand");

//                entity.Property(e => e.Volprodcumwater).HasColumnName("volprodcumwater");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathsand).HasColumnName("volprodgathsand");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volrecovgas).HasColumnName("volrecovgas");

//                entity.Property(e => e.Volrecovhcliq).HasColumnName("volrecovhcliq");

//                entity.Property(e => e.Volrecovsand).HasColumnName("volrecovsand");

//                entity.Property(e => e.Volrecovwater).HasColumnName("volrecovwater");

//                entity.Property(e => e.Volremainrecovgas).HasColumnName("volremainrecovgas");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");

//                entity.Property(e => e.Volremainrecovsand).HasColumnName("volremainrecovsand");

//                entity.Property(e => e.Volremainrecovwater).HasColumnName("volremainrecovwater");

//                entity.Property(e => e.Volstartinvhcliq).HasColumnName("volstartinvhcliq");

//                entity.Property(e => e.Volstartinvhcliqgaseq).HasColumnName("volstartinvhcliqgaseq");

//                entity.Property(e => e.Volstartinvsand).HasColumnName("volstartinvsand");

//                entity.Property(e => e.Volstartinvwater).HasColumnName("volstartinvwater");

//                entity.Property(e => e.Volstartremainrecovgas).HasColumnName("volstartremainrecovgas");

//                entity.Property(e => e.Volstartremainrecovhcliq).HasColumnName("volstartremainrecovhcliq");

//                entity.Property(e => e.Volstartremainrecovsand).HasColumnName("volstartremainrecovsand");

//                entity.Property(e => e.Volstartremainrecovwater).HasColumnName("volstartremainrecovwater");

//                entity.Property(e => e.Wigas).HasColumnName("wigas");

//                entity.Property(e => e.Wihcliq).HasColumnName("wihcliq");

//                entity.Property(e => e.Wisand).HasColumnName("wisand");

//                entity.Property(e => e.Wiwater).HasColumnName("wiwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitcomp>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcomp", "stage_prodview");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Compidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidb");

//                entity.Property(e => e.Compidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidc");

//                entity.Property(e => e.Compidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidd");

//                entity.Property(e => e.Compidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidpa");

//                entity.Property(e => e.Compidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compidregulatory");

//                entity.Property(e => e.Completioncode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completioncode");

//                entity.Property(e => e.Completionide)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionide");

//                entity.Property(e => e.Completionlicensee)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionlicensee");

//                entity.Property(e => e.Completionlicenseno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionlicenseno");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttmabandon)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmabandon");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmfirstsale)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmfirstsale");

//                entity.Property(e => e.Dttmflowbackend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmflowbackend");

//                entity.Property(e => e.Dttmflowbackstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmflowbackstart");

//                entity.Property(e => e.Dttmlicense)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmlicense");

//                entity.Property(e => e.Dttmonprod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmonprod");

//                entity.Property(e => e.Dttmstartalloc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstartalloc");

//                entity.Property(e => e.Entryreqperiodfluidlevel)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entryreqperiodfluidlevel");

//                entity.Property(e => e.Entryreqperiodparam)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entryreqperiodparam");

//                entity.Property(e => e.Exportid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("exportid1");

//                entity.Property(e => e.Exportid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("exportid2");

//                entity.Property(e => e.Exporttyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("exporttyp1");

//                entity.Property(e => e.Exporttyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("exporttyp2");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Importid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("importid1");

//                entity.Property(e => e.Importid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("importid2");

//                entity.Property(e => e.Importtyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("importtyp1");

//                entity.Property(e => e.Importtyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("importtyp2");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Latitude).HasColumnName("latitude");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Latlongsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongsource");

//                entity.Property(e => e.Longitude).HasColumnName("longitude");

//                entity.Property(e => e.Permanentid)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("permanentid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Wellida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellida");

//                entity.Property(e => e.Wellidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidb");

//                entity.Property(e => e.Wellidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidc");

//                entity.Property(e => e.Wellidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidd");

//                entity.Property(e => e.Wellide)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellide");

//                entity.Property(e => e.Wellidpa)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidpa");

//                entity.Property(e => e.Wellidregulatory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidregulatory");

//                entity.Property(e => e.Welllicenseno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("welllicenseno");

//                entity.Property(e => e.Wellname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("wellname");
//            });

//            modelBuilder.Entity<TPvtPvunitcompdowntm>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompdowntm", "stage_prodview");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Codedowntm2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm2");

//                entity.Property(e => e.Codedowntm3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm3");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmplanend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmplanend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Durdowncalc).HasColumnName("durdowncalc");

//                entity.Property(e => e.Durdownendday).HasColumnName("durdownendday");

//                entity.Property(e => e.Durdownplanend).HasColumnName("durdownplanend");

//                entity.Property(e => e.Durdownstartday).HasColumnName("durdownstartday");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typdowntm)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typdowntm");
//            });

//            modelBuilder.Entity<TPvtPvunitcompfluidlevel>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompfluidlevel", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Depthpumpcalc).HasColumnName("depthpumpcalc");

//                entity.Property(e => e.Depthtofluid).HasColumnName("depthtofluid");

//                entity.Property(e => e.Depthtopumpcalc).HasColumnName("depthtopumpcalc");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Jointsinhole).HasColumnName("jointsinhole");

//                entity.Property(e => e.Jointsoffluidcalc).HasColumnName("jointsoffluidcalc");

//                entity.Property(e => e.Jointstofluid).HasColumnName("jointstofluid");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvunitcompgathmonthcalc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompgathmonthcalc", "stage_prodview");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Gor).HasColumnName("gor");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Pctchggas).HasColumnName("pctchggas");

//                entity.Property(e => e.Pctchghcliq).HasColumnName("pctchghcliq");

//                entity.Property(e => e.Pctchgsand).HasColumnName("pctchgsand");

//                entity.Property(e => e.Pctchgtotliq).HasColumnName("pctchgtotliq");

//                entity.Property(e => e.Pctchgwater).HasColumnName("pctchgwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Ratechggas).HasColumnName("ratechggas");

//                entity.Property(e => e.Ratechghcliq).HasColumnName("ratechghcliq");

//                entity.Property(e => e.Ratechgsand).HasColumnName("ratechgsand");

//                entity.Property(e => e.Ratechgtotalliq).HasColumnName("ratechgtotalliq");

//                entity.Property(e => e.Ratechgwater).HasColumnName("ratechgwater");

//                entity.Property(e => e.Rategas).HasColumnName("rategas");

//                entity.Property(e => e.Rategasintol).HasColumnName("rategasintol");

//                entity.Property(e => e.Ratehcliq).HasColumnName("ratehcliq");

//                entity.Property(e => e.Ratehcliqintol).HasColumnName("ratehcliqintol");

//                entity.Property(e => e.Rateintol).HasColumnName("rateintol");

//                entity.Property(e => e.Ratesand).HasColumnName("ratesand");

//                entity.Property(e => e.Ratesandintol).HasColumnName("ratesandintol");

//                entity.Property(e => e.Ratetotalliq).HasColumnName("ratetotalliq");

//                entity.Property(e => e.Ratewater).HasColumnName("ratewater");

//                entity.Property(e => e.Ratewaterintol).HasColumnName("ratewaterintol");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volcasinggas).HasColumnName("volcasinggas");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volgathinjectrecovgas).HasColumnName("volgathinjectrecovgas");

//                entity.Property(e => e.Volgathinjectrecovhcliq).HasColumnName("volgathinjectrecovhcliq");

//                entity.Property(e => e.Volgathinjectrecovsand).HasColumnName("volgathinjectrecovsand");

//                entity.Property(e => e.Volgathinjectrecovwater).HasColumnName("volgathinjectrecovwater");

//                entity.Property(e => e.Volgathrecovgas).HasColumnName("volgathrecovgas");

//                entity.Property(e => e.Volgathrecovhcliq).HasColumnName("volgathrecovhcliq");

//                entity.Property(e => e.Volgathrecovsand).HasColumnName("volgathrecovsand");

//                entity.Property(e => e.Volgathrecovwater).HasColumnName("volgathrecovwater");

//                entity.Property(e => e.Volgathremainrecovgas).HasColumnName("volgathremainrecovgas");

//                entity.Property(e => e.Volgathremainrecovhcliq).HasColumnName("volgathremainrecovhcliq");

//                entity.Property(e => e.Volgathremainrecovsand).HasColumnName("volgathremainrecovsand");

//                entity.Property(e => e.Volgathremainrecovwater).HasColumnName("volgathremainrecovwater");

//                entity.Property(e => e.Volgathstartremainrecovgas).HasColumnName("volgathstartremainrecovgas");

//                entity.Property(e => e.Volgathstartremainrecovhcliq).HasColumnName("volgathstartremainrecovhcliq");

//                entity.Property(e => e.Volgathstartremainrecovsand).HasColumnName("volgathstartremainrecovsand");

//                entity.Property(e => e.Volgathstartremainrecovwater).HasColumnName("volgathstartremainrecovwater");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Voltotalliq).HasColumnName("voltotalliq");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitcompgathmonthdaycalc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompgathmonthdaycalc", "stage_prodview");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Gor).HasColumnName("gor");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Pctchggas).HasColumnName("pctchggas");

//                entity.Property(e => e.Pctchghcliq).HasColumnName("pctchghcliq");

//                entity.Property(e => e.Pctchgsand).HasColumnName("pctchgsand");

//                entity.Property(e => e.Pctchgtotliq).HasColumnName("pctchgtotliq");

//                entity.Property(e => e.Pctchgwater).HasColumnName("pctchgwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Ratechggas).HasColumnName("ratechggas");

//                entity.Property(e => e.Ratechghcliq).HasColumnName("ratechghcliq");

//                entity.Property(e => e.Ratechgsand).HasColumnName("ratechgsand");

//                entity.Property(e => e.Ratechgtotalliq).HasColumnName("ratechgtotalliq");

//                entity.Property(e => e.Ratechgwater).HasColumnName("ratechgwater");

//                entity.Property(e => e.Rategas).HasColumnName("rategas");

//                entity.Property(e => e.Rategasintol).HasColumnName("rategasintol");

//                entity.Property(e => e.Ratehcliq).HasColumnName("ratehcliq");

//                entity.Property(e => e.Ratehcliqintol).HasColumnName("ratehcliqintol");

//                entity.Property(e => e.Rateintol).HasColumnName("rateintol");

//                entity.Property(e => e.Ratesand).HasColumnName("ratesand");

//                entity.Property(e => e.Ratesandintol).HasColumnName("ratesandintol");

//                entity.Property(e => e.Ratetotalliq).HasColumnName("ratetotalliq");

//                entity.Property(e => e.Ratewater).HasColumnName("ratewater");

//                entity.Property(e => e.Ratewaterintol).HasColumnName("ratewaterintol");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volcasinggas).HasColumnName("volcasinggas");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volgathinjectrecovgas).HasColumnName("volgathinjectrecovgas");

//                entity.Property(e => e.Volgathinjectrecovhcliq).HasColumnName("volgathinjectrecovhcliq");

//                entity.Property(e => e.Volgathinjectrecovsand).HasColumnName("volgathinjectrecovsand");

//                entity.Property(e => e.Volgathinjectrecovwater).HasColumnName("volgathinjectrecovwater");

//                entity.Property(e => e.Volgathrecovgas).HasColumnName("volgathrecovgas");

//                entity.Property(e => e.Volgathrecovhcliq).HasColumnName("volgathrecovhcliq");

//                entity.Property(e => e.Volgathrecovsand).HasColumnName("volgathrecovsand");

//                entity.Property(e => e.Volgathrecovwater).HasColumnName("volgathrecovwater");

//                entity.Property(e => e.Volgathremainrecovgas).HasColumnName("volgathremainrecovgas");

//                entity.Property(e => e.Volgathremainrecovhcliq).HasColumnName("volgathremainrecovhcliq");

//                entity.Property(e => e.Volgathremainrecovsand).HasColumnName("volgathremainrecovsand");

//                entity.Property(e => e.Volgathremainrecovwater).HasColumnName("volgathremainrecovwater");

//                entity.Property(e => e.Volgathstartremainrecovgas).HasColumnName("volgathstartremainrecovgas");

//                entity.Property(e => e.Volgathstartremainrecovhcliq).HasColumnName("volgathstartremainrecovhcliq");

//                entity.Property(e => e.Volgathstartremainrecovsand).HasColumnName("volgathstartremainrecovsand");

//                entity.Property(e => e.Volgathstartremainrecovwater).HasColumnName("volgathstartremainrecovwater");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Voltotalliq).HasColumnName("voltotalliq");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitcompgathmonthdaycalcIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompgathmonthdaycalc_incr", "stage_prodview");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.Gor).HasColumnName("gor");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idrecdowntime)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntime");

//                entity.Property(e => e.Idrecdowntimetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdowntimetk");

//                entity.Property(e => e.Idrecfacility)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacility");

//                entity.Property(e => e.Idrecfacilitytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfacilitytk");

//                entity.Property(e => e.Idrecfluidlevel)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidlevel");

//                entity.Property(e => e.Idrecfluidleveltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecfluidleveltk");

//                entity.Property(e => e.Idrecgasanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysis");

//                entity.Property(e => e.Idrecgasanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecgasanalysistk");

//                entity.Property(e => e.Idrechcliqanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysis");

//                entity.Property(e => e.Idrechcliqanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrechcliqanalysistk");

//                entity.Property(e => e.Idrecmeasmeth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmeth");

//                entity.Property(e => e.Idrecmeasmethtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeasmethtk");

//                entity.Property(e => e.Idrecoilanalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysis");

//                entity.Property(e => e.Idrecoilanalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoilanalysistk");

//                entity.Property(e => e.Idrecparam)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparam");

//                entity.Property(e => e.Idrecparamtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparamtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecpumpentry)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentry");

//                entity.Property(e => e.Idrecpumpentrytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecpumpentrytk");

//                entity.Property(e => e.Idrecstatus)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatus");

//                entity.Property(e => e.Idrecstatustk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecstatustk");

//                entity.Property(e => e.Idrectest)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectest");

//                entity.Property(e => e.Idrectesttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectesttk");

//                entity.Property(e => e.Idrecwateranalysis)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysis");

//                entity.Property(e => e.Idrecwateranalysistk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwateranalysistk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Pctchggas).HasColumnName("pctchggas");

//                entity.Property(e => e.Pctchghcliq).HasColumnName("pctchghcliq");

//                entity.Property(e => e.Pctchgsand).HasColumnName("pctchgsand");

//                entity.Property(e => e.Pctchgtotliq).HasColumnName("pctchgtotliq");

//                entity.Property(e => e.Pctchgwater).HasColumnName("pctchgwater");

//                entity.Property(e => e.Pumpeff).HasColumnName("pumpeff");

//                entity.Property(e => e.Ratechggas).HasColumnName("ratechggas");

//                entity.Property(e => e.Ratechghcliq).HasColumnName("ratechghcliq");

//                entity.Property(e => e.Ratechgsand).HasColumnName("ratechgsand");

//                entity.Property(e => e.Ratechgtotalliq).HasColumnName("ratechgtotalliq");

//                entity.Property(e => e.Ratechgwater).HasColumnName("ratechgwater");

//                entity.Property(e => e.Rategas).HasColumnName("rategas");

//                entity.Property(e => e.Rategasintol).HasColumnName("rategasintol");

//                entity.Property(e => e.Ratehcliq).HasColumnName("ratehcliq");

//                entity.Property(e => e.Ratehcliqintol).HasColumnName("ratehcliqintol");

//                entity.Property(e => e.Rateintol).HasColumnName("rateintol");

//                entity.Property(e => e.Ratesand).HasColumnName("ratesand");

//                entity.Property(e => e.Ratesandintol).HasColumnName("ratesandintol");

//                entity.Property(e => e.Ratetotalliq).HasColumnName("ratetotalliq");

//                entity.Property(e => e.Ratewater).HasColumnName("ratewater");

//                entity.Property(e => e.Ratewaterintol).HasColumnName("ratewaterintol");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volcasinggas).HasColumnName("volcasinggas");

//                entity.Property(e => e.Voldifftargetgas).HasColumnName("voldifftargetgas");

//                entity.Property(e => e.Voldifftargethcliq).HasColumnName("voldifftargethcliq");

//                entity.Property(e => e.Voldifftargetsand).HasColumnName("voldifftargetsand");

//                entity.Property(e => e.Voldifftargetwater).HasColumnName("voldifftargetwater");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volgathinjectrecovgas).HasColumnName("volgathinjectrecovgas");

//                entity.Property(e => e.Volgathinjectrecovhcliq).HasColumnName("volgathinjectrecovhcliq");

//                entity.Property(e => e.Volgathinjectrecovsand).HasColumnName("volgathinjectrecovsand");

//                entity.Property(e => e.Volgathinjectrecovwater).HasColumnName("volgathinjectrecovwater");

//                entity.Property(e => e.Volgathrecovgas).HasColumnName("volgathrecovgas");

//                entity.Property(e => e.Volgathrecovhcliq).HasColumnName("volgathrecovhcliq");

//                entity.Property(e => e.Volgathrecovsand).HasColumnName("volgathrecovsand");

//                entity.Property(e => e.Volgathrecovwater).HasColumnName("volgathrecovwater");

//                entity.Property(e => e.Volgathremainrecovgas).HasColumnName("volgathremainrecovgas");

//                entity.Property(e => e.Volgathremainrecovhcliq).HasColumnName("volgathremainrecovhcliq");

//                entity.Property(e => e.Volgathremainrecovsand).HasColumnName("volgathremainrecovsand");

//                entity.Property(e => e.Volgathremainrecovwater).HasColumnName("volgathremainrecovwater");

//                entity.Property(e => e.Volgathstartremainrecovgas).HasColumnName("volgathstartremainrecovgas");

//                entity.Property(e => e.Volgathstartremainrecovhcliq).HasColumnName("volgathstartremainrecovhcliq");

//                entity.Property(e => e.Volgathstartremainrecovsand).HasColumnName("volgathstartremainrecovsand");

//                entity.Property(e => e.Volgathstartremainrecovwater).HasColumnName("volgathstartremainrecovwater");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volinjectgas).HasColumnName("volinjectgas");

//                entity.Property(e => e.Volinjecthcliq).HasColumnName("volinjecthcliq");

//                entity.Property(e => e.Volinjectsand).HasColumnName("volinjectsand");

//                entity.Property(e => e.Volinjectwater).HasColumnName("volinjectwater");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostsand).HasColumnName("vollostsand");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");

//                entity.Property(e => e.Volnewprodgathgas).HasColumnName("volnewprodgathgas");

//                entity.Property(e => e.Volnewprodgathhcliq).HasColumnName("volnewprodgathhcliq");

//                entity.Property(e => e.Volnewprodgathsand).HasColumnName("volnewprodgathsand");

//                entity.Property(e => e.Volnewprodgathwater).HasColumnName("volnewprodgathwater");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Voltotalliq).HasColumnName("voltotalliq");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitcompmeasmeth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompmeasmeth", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Flowdirection)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("flowdirection");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecnodecasinggas)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodecasinggas");

//                entity.Property(e => e.Idrecnodecasinggastk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodecasinggastk");

//                entity.Property(e => e.Idrecnodegas)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodegas");

//                entity.Property(e => e.Idrecnodegastk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodegastk");

//                entity.Property(e => e.Idrecnodehcliq)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodehcliq");

//                entity.Property(e => e.Idrecnodehcliqtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodehcliqtk");

//                entity.Property(e => e.Idrecnodewater)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodewater");

//                entity.Property(e => e.Idrecnodewatertk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnodewatertk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Methodgas)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodgas");

//                entity.Property(e => e.Methodhcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodhcliq");

//                entity.Property(e => e.Methodwater)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodwater");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvunitcompparam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompparam", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Ph).HasColumnName("ph");

//                entity.Property(e => e.Presbh).HasColumnName("presbh");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prescassi).HasColumnName("prescassi");

//                entity.Property(e => e.Presinj).HasColumnName("presinj");

//                entity.Property(e => e.Presline).HasColumnName("presline");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Prestubsi).HasColumnName("prestubsi");

//                entity.Property(e => e.Presuser1).HasColumnName("presuser1");

//                entity.Property(e => e.Presuser2).HasColumnName("presuser2");

//                entity.Property(e => e.Presuser3).HasColumnName("presuser3");

//                entity.Property(e => e.Presuser4).HasColumnName("presuser4");

//                entity.Property(e => e.Presuser5).HasColumnName("presuser5");

//                entity.Property(e => e.Preswh).HasColumnName("preswh");

//                entity.Property(e => e.Salinity).HasColumnName("salinity");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szchoke).HasColumnName("szchoke");

//                entity.Property(e => e.Tempbh).HasColumnName("tempbh");

//                entity.Property(e => e.Tempuser1).HasColumnName("tempuser1");

//                entity.Property(e => e.Tempuser2).HasColumnName("tempuser2");

//                entity.Property(e => e.Tempuser3).HasColumnName("tempuser3");

//                entity.Property(e => e.Tempuser4).HasColumnName("tempuser4");

//                entity.Property(e => e.Tempuser5).HasColumnName("tempuser5");

//                entity.Property(e => e.Tempwh).HasColumnName("tempwh");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Viscdynamic).HasColumnName("viscdynamic");

//                entity.Property(e => e.Visckinematic).HasColumnName("visckinematic");
//            });

//            modelBuilder.Entity<TPvtPvunitcompparamIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompparam_incr", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Ph).HasColumnName("ph");

//                entity.Property(e => e.Presbh).HasColumnName("presbh");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prescassi).HasColumnName("prescassi");

//                entity.Property(e => e.Presinj).HasColumnName("presinj");

//                entity.Property(e => e.Presline).HasColumnName("presline");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Prestubsi).HasColumnName("prestubsi");

//                entity.Property(e => e.Presuser1).HasColumnName("presuser1");

//                entity.Property(e => e.Presuser2).HasColumnName("presuser2");

//                entity.Property(e => e.Presuser3).HasColumnName("presuser3");

//                entity.Property(e => e.Presuser4).HasColumnName("presuser4");

//                entity.Property(e => e.Presuser5).HasColumnName("presuser5");

//                entity.Property(e => e.Preswh).HasColumnName("preswh");

//                entity.Property(e => e.Salinity).HasColumnName("salinity");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szchoke).HasColumnName("szchoke");

//                entity.Property(e => e.Tempbh).HasColumnName("tempbh");

//                entity.Property(e => e.Tempuser1).HasColumnName("tempuser1");

//                entity.Property(e => e.Tempuser2).HasColumnName("tempuser2");

//                entity.Property(e => e.Tempuser3).HasColumnName("tempuser3");

//                entity.Property(e => e.Tempuser4).HasColumnName("tempuser4");

//                entity.Property(e => e.Tempuser5).HasColumnName("tempuser5");

//                entity.Property(e => e.Tempwh).HasColumnName("tempwh");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Viscdynamic).HasColumnName("viscdynamic");

//                entity.Property(e => e.Visckinematic).HasColumnName("visckinematic");
//            });

//            modelBuilder.Entity<TPvtPvunitcompstatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompstatus", "stage_prodview");

//                entity.Property(e => e.Calclostprod).HasColumnName("calclostprod");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Commingled)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("commingled");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Flowdirection)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("flowdirection");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Methodprod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("methodprod");

//                entity.Property(e => e.Primaryfluidtyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primaryfluidtyp");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typcompletion)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typcompletion");

//                entity.Property(e => e.Typfluidprod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidprod");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Wellcountincl).HasColumnName("wellcountincl");
//            });

//            modelBuilder.Entity<TPvtPvunitcompwhcut>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitcompwhcut", "stage_prodview");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Sandcut).HasColumnName("sandcut");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvunitdispmonthday>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitdispmonthday", "stage_prodview");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Heat).HasColumnName("heat");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdispunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunit");

//                entity.Property(e => e.Idrecdispunitnode)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnode");

//                entity.Property(e => e.Idrecdispunitnodetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnodetk");

//                entity.Property(e => e.Idrecdispunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunittk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volc1gas).HasColumnName("volc1gas");

//                entity.Property(e => e.Volc1gaseq).HasColumnName("volc1gaseq");

//                entity.Property(e => e.Volc1liq).HasColumnName("volc1liq");

//                entity.Property(e => e.Volc2gas).HasColumnName("volc2gas");

//                entity.Property(e => e.Volc2gaseq).HasColumnName("volc2gaseq");

//                entity.Property(e => e.Volc2liq).HasColumnName("volc2liq");

//                entity.Property(e => e.Volc3gas).HasColumnName("volc3gas");

//                entity.Property(e => e.Volc3gaseq).HasColumnName("volc3gaseq");

//                entity.Property(e => e.Volc3liq).HasColumnName("volc3liq");

//                entity.Property(e => e.Volc6gas).HasColumnName("volc6gas");

//                entity.Property(e => e.Volc6gaseq).HasColumnName("volc6gaseq");

//                entity.Property(e => e.Volc6liq).HasColumnName("volc6liq");

//                entity.Property(e => e.Volc7gas).HasColumnName("volc7gas");

//                entity.Property(e => e.Volc7gaseq).HasColumnName("volc7gaseq");

//                entity.Property(e => e.Volc7liq).HasColumnName("volc7liq");

//                entity.Property(e => e.Volco2gas).HasColumnName("volco2gas");

//                entity.Property(e => e.Volco2gaseq).HasColumnName("volco2gaseq");

//                entity.Property(e => e.Volco2liq).HasColumnName("volco2liq");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volh2sgas).HasColumnName("volh2sgas");

//                entity.Property(e => e.Volh2sgaseq).HasColumnName("volh2sgaseq");

//                entity.Property(e => e.Volh2sliq).HasColumnName("volh2sliq");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volhcliqgaseq).HasColumnName("volhcliqgaseq");

//                entity.Property(e => e.Volic4gas).HasColumnName("volic4gas");

//                entity.Property(e => e.Volic4gaseq).HasColumnName("volic4gaseq");

//                entity.Property(e => e.Volic4liq).HasColumnName("volic4liq");

//                entity.Property(e => e.Volic5gas).HasColumnName("volic5gas");

//                entity.Property(e => e.Volic5gaseq).HasColumnName("volic5gaseq");

//                entity.Property(e => e.Volic5liq).HasColumnName("volic5liq");

//                entity.Property(e => e.Voln2gas).HasColumnName("voln2gas");

//                entity.Property(e => e.Voln2gaseq).HasColumnName("voln2gaseq");

//                entity.Property(e => e.Voln2liq).HasColumnName("voln2liq");

//                entity.Property(e => e.Volnc4gas).HasColumnName("volnc4gas");

//                entity.Property(e => e.Volnc4gaseq).HasColumnName("volnc4gaseq");

//                entity.Property(e => e.Volnc4liq).HasColumnName("volnc4liq");

//                entity.Property(e => e.Volnc5gas).HasColumnName("volnc5gas");

//                entity.Property(e => e.Volnc5gaseq).HasColumnName("volnc5gaseq");

//                entity.Property(e => e.Volnc5liq).HasColumnName("volnc5liq");

//                entity.Property(e => e.Volothercompgas).HasColumnName("volothercompgas");

//                entity.Property(e => e.Volothercompgaseq).HasColumnName("volothercompgaseq");

//                entity.Property(e => e.Volothercompliq).HasColumnName("volothercompliq");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitdispmonthdayIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitdispmonthday_incr", "stage_prodview");

//                entity.Property(e => e.Dayofmonth).HasColumnName("dayofmonth");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Heat).HasColumnName("heat");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccalcset)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcset");

//                entity.Property(e => e.Idreccalcsettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccalcsettk");

//                entity.Property(e => e.Idreccomp)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomp");

//                entity.Property(e => e.Idreccomptk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccomptk");

//                entity.Property(e => e.Idreccompzone)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzone");

//                entity.Property(e => e.Idreccompzonetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccompzonetk");

//                entity.Property(e => e.Idrecdispunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunit");

//                entity.Property(e => e.Idrecdispunitnode)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnode");

//                entity.Property(e => e.Idrecdispunitnodetk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunitnodetk");

//                entity.Property(e => e.Idrecdispunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecdispunittk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecunit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunit");

//                entity.Property(e => e.Idrecunittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecunittk");

//                entity.Property(e => e.Month).HasColumnName("month");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Volc1gas).HasColumnName("volc1gas");

//                entity.Property(e => e.Volc1gaseq).HasColumnName("volc1gaseq");

//                entity.Property(e => e.Volc1liq).HasColumnName("volc1liq");

//                entity.Property(e => e.Volc2gas).HasColumnName("volc2gas");

//                entity.Property(e => e.Volc2gaseq).HasColumnName("volc2gaseq");

//                entity.Property(e => e.Volc2liq).HasColumnName("volc2liq");

//                entity.Property(e => e.Volc3gas).HasColumnName("volc3gas");

//                entity.Property(e => e.Volc3gaseq).HasColumnName("volc3gaseq");

//                entity.Property(e => e.Volc3liq).HasColumnName("volc3liq");

//                entity.Property(e => e.Volc6gas).HasColumnName("volc6gas");

//                entity.Property(e => e.Volc6gaseq).HasColumnName("volc6gaseq");

//                entity.Property(e => e.Volc6liq).HasColumnName("volc6liq");

//                entity.Property(e => e.Volc7gas).HasColumnName("volc7gas");

//                entity.Property(e => e.Volc7gaseq).HasColumnName("volc7gaseq");

//                entity.Property(e => e.Volc7liq).HasColumnName("volc7liq");

//                entity.Property(e => e.Volco2gas).HasColumnName("volco2gas");

//                entity.Property(e => e.Volco2gaseq).HasColumnName("volco2gaseq");

//                entity.Property(e => e.Volco2liq).HasColumnName("volco2liq");

//                entity.Property(e => e.Volgas).HasColumnName("volgas");

//                entity.Property(e => e.Volh2sgas).HasColumnName("volh2sgas");

//                entity.Property(e => e.Volh2sgaseq).HasColumnName("volh2sgaseq");

//                entity.Property(e => e.Volh2sliq).HasColumnName("volh2sliq");

//                entity.Property(e => e.Volhcliq).HasColumnName("volhcliq");

//                entity.Property(e => e.Volhcliqgaseq).HasColumnName("volhcliqgaseq");

//                entity.Property(e => e.Volic4gas).HasColumnName("volic4gas");

//                entity.Property(e => e.Volic4gaseq).HasColumnName("volic4gaseq");

//                entity.Property(e => e.Volic4liq).HasColumnName("volic4liq");

//                entity.Property(e => e.Volic5gas).HasColumnName("volic5gas");

//                entity.Property(e => e.Volic5gaseq).HasColumnName("volic5gaseq");

//                entity.Property(e => e.Volic5liq).HasColumnName("volic5liq");

//                entity.Property(e => e.Voln2gas).HasColumnName("voln2gas");

//                entity.Property(e => e.Voln2gaseq).HasColumnName("voln2gaseq");

//                entity.Property(e => e.Voln2liq).HasColumnName("voln2liq");

//                entity.Property(e => e.Volnc4gas).HasColumnName("volnc4gas");

//                entity.Property(e => e.Volnc4gaseq).HasColumnName("volnc4gaseq");

//                entity.Property(e => e.Volnc4liq).HasColumnName("volnc4liq");

//                entity.Property(e => e.Volnc5gas).HasColumnName("volnc5gas");

//                entity.Property(e => e.Volnc5gaseq).HasColumnName("volnc5gaseq");

//                entity.Property(e => e.Volnc5liq).HasColumnName("volnc5liq");

//                entity.Property(e => e.Volothercompgas).HasColumnName("volothercompgas");

//                entity.Property(e => e.Volothercompgaseq).HasColumnName("volothercompgaseq");

//                entity.Property(e => e.Volothercompliq).HasColumnName("volothercompliq");

//                entity.Property(e => e.Volsand).HasColumnName("volsand");

//                entity.Property(e => e.Volwater).HasColumnName("volwater");

//                entity.Property(e => e.Year).HasColumnName("year");
//            });

//            modelBuilder.Entity<TPvtPvunitnode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitnode", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Component)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("component");

//                entity.Property(e => e.Componentphase)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("componentphase");

//                entity.Property(e => e.Correctionid1)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("correctionid1");

//                entity.Property(e => e.Correctionid2)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("correctionid2");

//                entity.Property(e => e.Correctiontyp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("correctiontyp1");

//                entity.Property(e => e.Correctiontyp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("correctiontyp2");

//                entity.Property(e => e.Desfluid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desfluid");

//                entity.Property(e => e.Dispida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispida");

//                entity.Property(e => e.Dispidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispidb");

//                entity.Property(e => e.Dispositionpoint).HasColumnName("dispositionpoint");

//                entity.Property(e => e.Dispproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dispproductname");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmhide)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmhide");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Facproductname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facproductname");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Keepwhole)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("keepwhole");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Otherid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("otherid");

//                entity.Property(e => e.Purchasercode1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasercode1");

//                entity.Property(e => e.Purchasercode2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasercode2");

//                entity.Property(e => e.Purchasername)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purchasername");

//                entity.Property(e => e.Sortflowdiag).HasColumnName("sortflowdiag");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Typdisp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisp1");

//                entity.Property(e => e.Typdisp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisp2");

//                entity.Property(e => e.Typdisphcliq)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typdisphcliq");

//                entity.Property(e => e.Typfluidbaserestrict)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidbaserestrict");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usevirutalanalysis).HasColumnName("usevirutalanalysis");
//            });

//            modelBuilder.Entity<TPvtPvunitnodeflowto>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitnodeflowto", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecinlet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinlet");

//                entity.Property(e => e.Idrecinlettk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinlettk");

//                entity.Property(e => e.Idrecinletunitcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinletunitcalc");

//                entity.Property(e => e.Idrecinletunitcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecinletunitcalctk");

//                entity.Property(e => e.Idrecoutletcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletcalc");

//                entity.Property(e => e.Idrecoutletcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletcalctk");

//                entity.Property(e => e.Idrecoutletunitcalc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletunitcalc");

//                entity.Property(e => e.Idrecoutletunitcalctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecoutletunitcalctk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Recircflow).HasColumnName("recircflow");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvunitnodemeterevent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitnodemeterevent", "stage_prodview");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecmeterevent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmeterevent");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");
//            });

//            modelBuilder.Entity<TPvtPvunitothertag>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pvt_pvunitothertag", "stage_prodview");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecitem)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitem");

//                entity.Property(e => e.Idrecitemtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitemtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Value)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("value");
//            });

//            modelBuilder.Entity<TPwvApDetailTbl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pwv_ap_detail_tbl", "stage");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNT");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNT_DESC");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTVY_PER_DATE");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_DESC");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AssetNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ASSET_NUMBER");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_DESC");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ClientId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_ID");

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_CODE");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.Document)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DOCUMENT");

//                entity.Property(e => e.FieldTicketNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_TICKET_NUMBER");

//                entity.Property(e => e.FolderId)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FOLDER_ID");

//                entity.Property(e => e.GlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE");

//                entity.Property(e => e.GovernAgrId).HasColumnName("GOVERN_AGR_ID");

//                entity.Property(e => e.GovernAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_TYPE_CODE");

//                entity.Property(e => e.InvcDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INVC_DATE");

//                entity.Property(e => e.Invoice)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INVOICE");

//                entity.Property(e => e.JvFootnote)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("JV_FOOTNOTE");

//                entity.Property(e => e.LiRemarks)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_REMARKS");

//                entity.Property(e => e.LiVolume)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_VOLUME");

//                entity.Property(e => e.OnHold).HasColumnName("ON_HOLD");

//                entity.Property(e => e.OrgId).HasColumnName("ORG_ID");

//                entity.Property(e => e.PoLineNumber).HasColumnName("PO_LINE_NUMBER");

//                entity.Property(e => e.PstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PST_AMT");

//                entity.Property(e => e.PstProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PST_PROVINCE");

//                entity.Property(e => e.PwrCommodityCode)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_COMMODITY_CODE");

//                entity.Property(e => e.PwrCommodityTitle)
//                    .HasMaxLength(254)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_COMMODITY_TITLE");

//                entity.Property(e => e.PwrDetailId).HasColumnName("PWR_DETAIL_ID");

//                entity.Property(e => e.PwrId).HasColumnName("PWR_ID");

//                entity.Property(e => e.Qty)
//                    .HasColumnType("numeric(16, 4)")
//                    .HasColumnName("QTY");

//                entity.Property(e => e.ReportingCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_AMT");

//                entity.Property(e => e.ServiceEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SERVICE_END_DATE");

//                entity.Property(e => e.ServiceStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SERVICE_START_DATE");

//                entity.Property(e => e.UnitPrice)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("UNIT_PRICE");

//                entity.Property(e => e.Uom)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("UOM");

//                entity.Property(e => e.UserDefinedTag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED_TAG");

//                entity.Property(e => e.WorkOrderNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("WORK_ORDER_NUMBER");
//            });

//            modelBuilder.Entity<TPwvApHeaderTbl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_pwv_ap_header_tbl", "stage");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_PER_DATE");

//                entity.Property(e => e.AcctType)
//                    .HasMaxLength(254)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_TYPE");

//                entity.Property(e => e.AlternateAddressId).HasColumnName("ALTERNATE_ADDRESS_ID");

//                entity.Property(e => e.BaId).HasColumnName("BA_ID");

//                entity.Property(e => e.BankAcctId)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BANK_ACCT_ID");

//                entity.Property(e => e.ContractNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_NUM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.DepositDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DEPOSIT_DATE");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.DiscountDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.DiscountPct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("DISCOUNT_PCT");

//                entity.Property(e => e.Document)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("DOCUMENT");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DUE_DATE");

//                entity.Property(e => e.ExchangeRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("EXCHANGE_RATE");

//                entity.Property(e => e.FieldTicketNumbers)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_TICKET_NUMBERS");

//                entity.Property(e => e.FolderId)
//                    .HasColumnType("datetime")
//                    .HasColumnName("FOLDER_ID");

//                entity.Property(e => e.GstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_AMT");

//                entity.Property(e => e.HoldDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("HOLD_DATE");

//                entity.Property(e => e.InvcAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("INVC_AMT");

//                entity.Property(e => e.InvcDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INVC_DATE");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_NUM");

//                entity.Property(e => e.InvcRem)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_REM");

//                entity.Property(e => e.MediumCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MEDIUM_CODE");

//                entity.Property(e => e.OrgId).HasColumnName("ORG_ID");

//                entity.Property(e => e.PaymentAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PAYMENT_AMOUNT");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_CODE");

//                entity.Property(e => e.PaymentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PAYMENT_DATE");

//                entity.Property(e => e.PaymentFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_FORMAT_CODE");

//                entity.Property(e => e.PaymentHandlingCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_HANDLING_CODE");

//                entity.Property(e => e.PaymentMethod)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_METHOD");

//                entity.Property(e => e.PaymentReference)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_REFERENCE");

//                entity.Property(e => e.PostedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("POSTED_DATE");

//                entity.Property(e => e.PstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PST_AMT");

//                entity.Property(e => e.PurchaseOrderNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_ORDER_NUM");

//                entity.Property(e => e.PwrBaComments)
//                    .HasMaxLength(254)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_BA_COMMENTS");

//                entity.Property(e => e.PwrBaInfo)
//                    .HasMaxLength(254)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_BA_INFO");

//                entity.Property(e => e.PwrBypassUpload).HasColumnName("PWR_BYPASS_UPLOAD");

//                entity.Property(e => e.PwrCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PWR_CREATE_DATE");

//                entity.Property(e => e.PwrId).HasColumnName("PWR_ID");

//                entity.Property(e => e.PwrLastApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PWR_LAST_APPROVAL_DATE");

//                entity.Property(e => e.PwrLastApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_LAST_APPROVER");

//                entity.Property(e => e.PwrMilestoneId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_MILESTONE_ID");

//                entity.Property(e => e.PwrPreApproved).HasColumnName("PWR_PRE_APPROVED");

//                entity.Property(e => e.PwrQpByApprover).HasColumnName("PWR_QP_BY_APPROVER");

//                entity.Property(e => e.PwrQuickPay).HasColumnName("PWR_QUICK_PAY");

//                entity.Property(e => e.PwrStatus).HasColumnName("PWR_STATUS");

//                entity.Property(e => e.PwrWfPath)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PWR_WF_PATH");

//                entity.Property(e => e.RcvdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RCVD_DATE");

//                entity.Property(e => e.SeparateChqFlag).HasColumnName("SEPARATE_CHQ_FLAG");

//                entity.Property(e => e.ShortPay).HasColumnName("SHORT_PAY");

//                entity.Property(e => e.ShortPayAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("SHORT_PAY_AMT");

//                entity.Property(e => e.TaxProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_PROVINCE");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_NUM");

//                entity.Property(e => e.VoucherRem)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_REM");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_CODE");
//            });

//            modelBuilder.Entity<TQbyteAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_accounts", "stage");

//                entity.Property(e => e.AccountCompanyCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNT_COMPANY_CODE");

//                entity.Property(e => e.AccrualMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MAJOR_ACCT");

//                entity.Property(e => e.AccrualMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MINOR_ACCT");

//                entity.Property(e => e.AcctDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_DESC");

//                entity.Property(e => e.ActvyDateReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTVY_DATE_REQD_FLAG");

//                entity.Property(e => e.AfeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REQD_FLAG");

//                entity.Property(e => e.AltClientReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_CLIENT_REQD_FLAG");

//                entity.Property(e => e.AltGlCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_GL_CODE_REQD_FLAG");

//                entity.Property(e => e.BudgetInVolumesFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_IN_VOLUMES_FLAG");

//                entity.Property(e => e.CcReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_REQD_FLAG");

//                entity.Property(e => e.ContEquipFootnoteReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONT_EQUIP_FOOTNOTE_REQD_FLAG");

//                entity.Property(e => e.ContinuityReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_REQD_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAcctTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_ACCT_TYPE_CODE");

//                entity.Property(e => e.CtrlEquipReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_EQUIP_REQD_FLAG");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.CurrConversionRuleCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CONVERSION_RULE_CODE");

//                entity.Property(e => e.DdaRuleCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DDA_RULE_CODE");

//                entity.Property(e => e.DefaultCurrTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_CURR_TYPE_CODE");

//                entity.Property(e => e.EnergyContentReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGY_CONTENT_REQD_FLAG");

//                entity.Property(e => e.EnvAllowedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENV_ALLOWED_FLAG");

//                entity.Property(e => e.EnvCodePrompt)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENV_CODE_PROMPT");

//                entity.Property(e => e.ExcludeAfeCostsFromCcOh)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCLUDE_AFE_COSTS_FROM_CC_OH");

//                entity.Property(e => e.GlSubCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE_REQD_FLAG");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.InvoiceApprovalCostCategory)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("INVOICE_APPROVAL_COST_CATEGORY");

//                entity.Property(e => e.JibFootnoteReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FOOTNOTE_REQD_FLAG");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.OracleAssetsReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ORACLE_ASSETS_REQD_FLAG");

//                entity.Property(e => e.PascAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PASC_ACCT");

//                entity.Property(e => e.ProcessOnlyAcctFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_ONLY_ACCT_FLAG");

//                entity.Property(e => e.ProdCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_CODE");

//                entity.Property(e => e.ReOciFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RE_OCI_FLAG");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.ToCapitalMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_CAPITAL_MAJOR_ACCT");

//                entity.Property(e => e.ToCapitalMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_CAPITAL_MINOR_ACCT");

//                entity.Property(e => e.ToExpenseMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_EXPENSE_MAJOR_ACCT");

//                entity.Property(e => e.ToExpenseMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_EXPENSE_MINOR_ACCT");

//                entity.Property(e => e.UserDefinedTagFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED_TAG_FLAG");

//                entity.Property(e => e.UserDefinedTagPrompt)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED_TAG_PROMPT");

//                entity.Property(e => e.VolReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOL_REQD_FLAG");
//            });

//            modelBuilder.Entity<TQbyteAccountGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_account_groups", "stage");

//                entity.Property(e => e.AcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_CODE");

//                entity.Property(e => e.AcctGroupDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_GROUP_DATE");

//                entity.Property(e => e.AcctGroupDesc)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_DESC");

//                entity.Property(e => e.AcctGroupTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_TYPE_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DisplaySeqNum)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DISPLAY_SEQ_NUM");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.RollupAcctGroupFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROLLUP_ACCT_GROUP_FLAG");
//            });

//            modelBuilder.Entity<TQbyteAccountGroupAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_account_group_accounts", "stage");

//                entity.Property(e => e.AcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_CODE");

//                entity.Property(e => e.AcctGroupTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_TYPE_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");
//            });

//            modelBuilder.Entity<TQbyteAccountGroupRollup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_account_group_rollups", "stage");

//                entity.Property(e => e.AcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_CODE");

//                entity.Property(e => e.AcctGroupTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_TYPE_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.RollupAcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ROLLUP_ACCT_GROUP_CODE");
//            });

//            modelBuilder.Entity<TQbyteAccountHierarchySourceFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_account_hierarchy_source_finance", "stage");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyPathDesc)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path_desc");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valnav");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_alias");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<TQbyteAccountHierarchySourceFinanceRevisedDesc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_account_hierarchy_source_finance_revised_desc", "stage");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildAliasRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias_revised");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.ClassCodeDescriptionRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description_revised");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GlAccountDescriptionRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description_revised");

//                entity.Property(e => e.HierarchyPathDesc)
//                    .HasMaxLength(1000)
//                    .HasColumnName("Hierarchy_Path_desc");

//                entity.Property(e => e.HierarchyPathDescRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path_desc_revised");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorAccountDescriptionRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description_revised");

//                entity.Property(e => e.ParentAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_alias");

//                entity.Property(e => e.ParentAliasRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_alias_revised");

//                entity.Property(e => e.RowId).HasColumnName("row_id");
//            });

//            modelBuilder.Entity<TQbyteAccountsT>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_accountsT", "stage");

//                entity.Property(e => e.AccountCompanyCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNT_COMPANY_CODE");

//                entity.Property(e => e.AccrualMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MAJOR_ACCT");

//                entity.Property(e => e.AccrualMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MINOR_ACCT");

//                entity.Property(e => e.AcctDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_DESC");

//                entity.Property(e => e.ActvyDateReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTVY_DATE_REQD_FLAG");

//                entity.Property(e => e.AfeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REQD_FLAG");

//                entity.Property(e => e.AltClientReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_CLIENT_REQD_FLAG");

//                entity.Property(e => e.AltGlCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_GL_CODE_REQD_FLAG");

//                entity.Property(e => e.BudgetInVolumesFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_IN_VOLUMES_FLAG");

//                entity.Property(e => e.CcReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_REQD_FLAG");

//                entity.Property(e => e.ContEquipFootnoteReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONT_EQUIP_FOOTNOTE_REQD_FLAG");

//                entity.Property(e => e.ContinuityReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_REQD_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAcctTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_ACCT_TYPE_CODE");

//                entity.Property(e => e.CtrlEquipReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_EQUIP_REQD_FLAG");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.CurrConversionRuleCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CONVERSION_RULE_CODE");

//                entity.Property(e => e.DdaRuleCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DDA_RULE_CODE");

//                entity.Property(e => e.DefaultCurrTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_CURR_TYPE_CODE");

//                entity.Property(e => e.EnergyContentReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGY_CONTENT_REQD_FLAG");

//                entity.Property(e => e.EnvAllowedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENV_ALLOWED_FLAG");

//                entity.Property(e => e.EnvCodePrompt)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ENV_CODE_PROMPT");

//                entity.Property(e => e.ExcludeAfeCostsFromCcOh)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCLUDE_AFE_COSTS_FROM_CC_OH");

//                entity.Property(e => e.GlSubCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE_REQD_FLAG");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.InvoiceApprovalCostCategory)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("INVOICE_APPROVAL_COST_CATEGORY");

//                entity.Property(e => e.JibFootnoteReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FOOTNOTE_REQD_FLAG");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.OracleAssetsReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ORACLE_ASSETS_REQD_FLAG");

//                entity.Property(e => e.PascAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PASC_ACCT");

//                entity.Property(e => e.ProcessOnlyAcctFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_ONLY_ACCT_FLAG");

//                entity.Property(e => e.ProdCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_CODE");

//                entity.Property(e => e.ReOciFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RE_OCI_FLAG");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.ToCapitalMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_CAPITAL_MAJOR_ACCT");

//                entity.Property(e => e.ToCapitalMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_CAPITAL_MINOR_ACCT");

//                entity.Property(e => e.ToExpenseMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_EXPENSE_MAJOR_ACCT");

//                entity.Property(e => e.ToExpenseMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_EXPENSE_MINOR_ACCT");

//                entity.Property(e => e.UserDefinedTagFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED_TAG_FLAG");

//                entity.Property(e => e.UserDefinedTagPrompt)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED_TAG_PROMPT");

//                entity.Property(e => e.VolReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOL_REQD_FLAG");
//            });

//            modelBuilder.Entity<TQbyteAfeProjectJustification>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_afe_project_justifications", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AfeProjJustDesc)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_PROJ_JUST_DESC");

//                entity.Property(e => e.AfeProjJustLineId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("AFE_PROJ_JUST_LINE_ID");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");
//            });

//            modelBuilder.Entity<TQbyteAfesCostCentre>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_afes_cost_centres", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");
//            });

//            modelBuilder.Entity<TQbyteAuthorizationsForExpenditure>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_authorizations_for_expenditure", "stage");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_FLAG");

//                entity.Property(e => e.AfeClassCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_CLASS_CODE");

//                entity.Property(e => e.AfeFinishDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("AFE_FINISH_DATE");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NAME");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AfeReportingUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REPORTING_UDF_1_CODE");

//                entity.Property(e => e.AfeReportingUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REPORTING_UDF_2_CODE");

//                entity.Property(e => e.AfeReportingUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REPORTING_UDF_3_CODE");

//                entity.Property(e => e.AfeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("AFE_START_DATE");

//                entity.Property(e => e.AfeStatCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_STAT_CODE");

//                entity.Property(e => e.AfeTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_TYPE_CODE");

//                entity.Property(e => e.AfeUdf10Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_10_CODE");

//                entity.Property(e => e.AfeUdf11Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_11_CODE");

//                entity.Property(e => e.AfeUdf12Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_12_CODE");

//                entity.Property(e => e.AfeUdf13Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_13_CODE");

//                entity.Property(e => e.AfeUdf14Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_14_CODE");

//                entity.Property(e => e.AfeUdf15Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_15_CODE");

//                entity.Property(e => e.AfeUdf16Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_16_CODE");

//                entity.Property(e => e.AfeUdf17Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_17_CODE");

//                entity.Property(e => e.AfeUdf18Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_18_CODE");

//                entity.Property(e => e.AfeUdf19Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_19_CODE");

//                entity.Property(e => e.AfeUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_1_CODE");

//                entity.Property(e => e.AfeUdf20Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_20_CODE");

//                entity.Property(e => e.AfeUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_2_CODE");

//                entity.Property(e => e.AfeUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_3_CODE");

//                entity.Property(e => e.AfeUdf4Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_4_CODE");

//                entity.Property(e => e.AfeUdf5Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_5_CODE");

//                entity.Property(e => e.AfeUdf6Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_6_CODE");

//                entity.Property(e => e.AfeUdf7Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_7_CODE");

//                entity.Property(e => e.AfeUdf8Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_8_CODE");

//                entity.Property(e => e.AfeUdf9Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_UDF_9_CODE");

//                entity.Property(e => e.AllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ALLOC_AMT");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_OTHER_ORGS_CODE");

//                entity.Property(e => e.ApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("APPROVAL_DATE");

//                entity.Property(e => e.BudgetActivityId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_ACTIVITY_ID");

//                entity.Property(e => e.BudgetActivityYear)
//                    .HasColumnType("datetime")
//                    .HasColumnName("BUDGET_ACTIVITY_YEAR");

//                entity.Property(e => e.CapitalAccrualCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_ACCRUAL_CC_NUM");

//                entity.Property(e => e.CapitalAccrualMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_ACCRUAL_METHOD_CODE");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_OR_DRY_HOLE_EXP_CODE");

//                entity.Property(e => e.CipTransferFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CIP_TRANSFER_FLAG");

//                entity.Property(e => e.CommitmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("COMMITMENT_DATE");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_GL_SUB_CODE");

//                entity.Property(e => e.DoiTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_TYPE_CODE");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DUE_DATE");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ENGINEER_ASSIGNED");

//                entity.Property(e => e.EquipComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("EQUIP_COMPONENT_AMT");

//                entity.Property(e => e.GeologistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOLOGIST_ASSIGNED");

//                entity.Property(e => e.GeophysicistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("GEOPHYSICIST_ASSIGNED");

//                entity.Property(e => e.InternalApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("INTERNAL_APPROVER");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FLAG");

//                entity.Property(e => e.LastAccruedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_ACCRUED_DATE");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_STATUS_DATE");

//                entity.Property(e => e.LastUpdtStatusUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_STATUS_USER");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_8");

//                entity.Property(e => e.ManagerName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("MANAGER_NAME");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("MANAGING_ORG_ID");

//                entity.Property(e => e.NetEstimatePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("NET_ESTIMATE_PCT");

//                entity.Property(e => e.OriginalAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORIGINAL_ALLOC_AMT");

//                entity.Property(e => e.OverheadEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("OVERHEAD_END_DATE");

//                entity.Property(e => e.OverheadStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("OVERHEAD_START_DATE");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("OWNERSHIP_ORG_ID");

//                entity.Property(e => e.ProposalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("PROPOSAL_DATE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.ReportingAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_ALLOC_AMT");

//                entity.Property(e => e.SuccessEffortTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SUCCESS_EFFORT_TYPE_CODE");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM_CODE");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_CODE");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("TRANSLATION_RATE");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USE_JIBE_EDITS_FLAG");

//                entity.Property(e => e.WrhseComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("WRHSE_COMPONENT_AMT");
//            });

//            modelBuilder.Entity<TQbyteBaAddress>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_ba_addresses", "stage");

//                entity.Property(e => e.AddressLine1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_1");

//                entity.Property(e => e.AddressLine2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_2");

//                entity.Property(e => e.AddressLine3)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_3");

//                entity.Property(e => e.AddressLine4)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_LINE_4");

//                entity.Property(e => e.AddressTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ADDRESS_TYPE_CODE");

//                entity.Property(e => e.AlternateBaName1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_BA_NAME_1");

//                entity.Property(e => e.AlternateBaName2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_BA_NAME_2");

//                entity.Property(e => e.BaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("BA_ID");

//                entity.Property(e => e.ChangedToBaAddressId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CHANGED_TO_BA_ADDRESS_ID");

//                entity.Property(e => e.City)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CITY");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.Email)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("EMAIL");

//                entity.Property(e => e.ExternalBaAddressRef)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_BA_ADDRESS_REF");

//                entity.Property(e => e.ExternalBaRef)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_BA_REF");

//                entity.Property(e => e.ExternalLinkRef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_LINK_REF");

//                entity.Property(e => e.Fax)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("FAX");

//                entity.Property(e => e.Fax2)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("FAX_2");

//                entity.Property(e => e.Id)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ID");

//                entity.Property(e => e.InactivatedUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("INACTIVATED_USER");

//                entity.Property(e => e.InactiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INACTIVE_DATE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Phone)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("PHONE");

//                entity.Property(e => e.PhoneExtension)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("PHONE_EXTENSION");

//                entity.Property(e => e.PostalCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("POSTAL_CODE");

//                entity.Property(e => e.ProvinceCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_CODE");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");
//            });

//            modelBuilder.Entity<TQbyteBusinessAssociate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_business_associates", "stage");

//                entity.Property(e => e.AlternateId)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_ID");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_TYPE_CODE");

//                entity.Property(e => e.BaUdf10Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_10_CODE");

//                entity.Property(e => e.BaUdf11Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_11_CODE");

//                entity.Property(e => e.BaUdf12Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_12_CODE");

//                entity.Property(e => e.BaUdf13Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_13_CODE");

//                entity.Property(e => e.BaUdf14Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_14_CODE");

//                entity.Property(e => e.BaUdf15Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_15_CODE");

//                entity.Property(e => e.BaUdf16Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_16_CODE");

//                entity.Property(e => e.BaUdf17Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_17_CODE");

//                entity.Property(e => e.BaUdf18Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_18_CODE");

//                entity.Property(e => e.BaUdf19Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_19_CODE");

//                entity.Property(e => e.BaUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_1_CODE");

//                entity.Property(e => e.BaUdf20Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_20_CODE");

//                entity.Property(e => e.BaUdf21Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_21_CODE");

//                entity.Property(e => e.BaUdf22Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_22_CODE");

//                entity.Property(e => e.BaUdf23Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_23_CODE");

//                entity.Property(e => e.BaUdf24Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_24_CODE");

//                entity.Property(e => e.BaUdf25Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_25_CODE");

//                entity.Property(e => e.BaUdf26Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_26_CODE");

//                entity.Property(e => e.BaUdf27Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_27_CODE");

//                entity.Property(e => e.BaUdf28Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_28_CODE");

//                entity.Property(e => e.BaUdf29Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_29_CODE");

//                entity.Property(e => e.BaUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_2_CODE");

//                entity.Property(e => e.BaUdf30Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_30_CODE");

//                entity.Property(e => e.BaUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_3_CODE");

//                entity.Property(e => e.BaUdf4Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_4_CODE");

//                entity.Property(e => e.BaUdf5Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_5_CODE");

//                entity.Property(e => e.BaUdf6Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_6_CODE");

//                entity.Property(e => e.BaUdf7Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_7_CODE");

//                entity.Property(e => e.BaUdf8Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_8_CODE");

//                entity.Property(e => e.BaUdf9Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_UDF_9_CODE");

//                entity.Property(e => e.BnRegistrationNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("BN_REGISTRATION_NUMBER");

//                entity.Property(e => e.ChangedToBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CHANGED_TO_BA_ID");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DunAndBradstreetRef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DUN_AND_BRADSTREET_REF");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.EmployeeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("EMPLOYEE_NUM");

//                entity.Property(e => e.Id)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ID");

//                entity.Property(e => e.InactivatedUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("INACTIVATED_USER");

//                entity.Property(e => e.InactiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INACTIVE_DATE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LegalName)
//                    .HasMaxLength(300)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_NAME");

//                entity.Property(e => e.Name1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME_1");

//                entity.Property(e => e.Name2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME_2");

//                entity.Property(e => e.NonResidentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NON_RESIDENT_FLAG");

//                entity.Property(e => e.RefOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("REF_ORG_ID");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SinSsn)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("SIN_SSN");
//            });

//            modelBuilder.Entity<TQbyteCcBnpDivestHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_cc_bnp_divest_hierarchy", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.DispArea)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_area");

//                entity.Property(e => e.DispFacility)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_facility");

//                entity.Property(e => e.DispPkg)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_pkg");

//                entity.Property(e => e.DispType)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_type");

//                entity.Property(e => e.Disposed)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed");

//                entity.Property(e => e.HierarchyCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_code");
//            });

//            modelBuilder.Entity<TQbyteClient>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_clients", "stage");

//                entity.Property(e => e.AdxNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ADX_NUM");

//                entity.Property(e => e.AlternateClientIdReqd)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_CLIENT_ID_REQD");

//                entity.Property(e => e.ApCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("AP_CREDIT_DAYS");

//                entity.Property(e => e.ArCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("AR_CREDIT_DAYS");

//                entity.Property(e => e.ArCreditLimitAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("AR_CREDIT_LIMIT_AMT");

//                entity.Property(e => e.BillingCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BILLING_CODE");

//                entity.Property(e => e.ChangedToAltAddressId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CHANGED_TO_ALT_ADDRESS_ID");

//                entity.Property(e => e.ChangedToClientId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CHANGED_TO_CLIENT_ID");

//                entity.Property(e => e.ClientAddress1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_ADDRESS1");

//                entity.Property(e => e.ClientAddress2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_ADDRESS2");

//                entity.Property(e => e.ClientAddress3)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_ADDRESS3");

//                entity.Property(e => e.ClientAddress4)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_ADDRESS4");

//                entity.Property(e => e.ClientCity)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_CITY");

//                entity.Property(e => e.ClientCode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_CODE");

//                entity.Property(e => e.ClientCountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_COUNTRY_CODE");

//                entity.Property(e => e.ClientId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CLIENT_ID");

//                entity.Property(e => e.ClientLegalName)
//                    .HasMaxLength(300)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_LEGAL_NAME");

//                entity.Property(e => e.ClientName1)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_NAME1");

//                entity.Property(e => e.ClientName2)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_NAME2");

//                entity.Property(e => e.ClientPostalcode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_POSTALCODE");

//                entity.Property(e => e.ClientProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_PROVINCE");

//                entity.Property(e => e.ClientTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("CLIENT_TYPE_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CreditRevisedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREDIT_REVISED_DATE");

//                entity.Property(e => e.DefaultAddressShortName)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_ADDRESS_SHORT_NAME");

//                entity.Property(e => e.DefaultBaAddressId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("DEFAULT_BA_ADDRESS_ID");

//                entity.Property(e => e.DiscountCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DISCOUNT_CREDIT_DAYS");

//                entity.Property(e => e.DiscountPct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("DISCOUNT_PCT");

//                entity.Property(e => e.DunAndBradstreetRef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DUN_AND_BRADSTREET_REF");

//                entity.Property(e => e.ExternalLinkRef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_LINK_REF");

//                entity.Property(e => e.FaxNum)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("FAX_NUM");

//                entity.Property(e => e.GstRegNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_REG_NUM");

//                entity.Property(e => e.HoldDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("HOLD_DATE");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.OrgRefId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_REF_ID");

//                entity.Property(e => e.PayToClientId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PAY_TO_CLIENT_ID");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_CODE");

//                entity.Property(e => e.PhoneNum)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("PHONE_NUM");

//                entity.Property(e => e.RecFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REC_FORMAT_CODE");

//                entity.Property(e => e.SendFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SEND_FORMAT_CODE");

//                entity.Property(e => e.SendMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SEND_METHOD_CODE");

//                entity.Property(e => e.SinSsn)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("SIN_SSN");

//                entity.Property(e => e.SubsystemComponentId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SUBSYSTEM_COMPONENT_ID");

//                entity.Property(e => e.TelexNum)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("TELEX_NUM");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.TransactingClientId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("TRANSACTING_CLIENT_ID");

//                entity.Property(e => e.UseJibeDoiEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USE_JIBE_DOI_EDITS_FLAG");

//                entity.Property(e => e.WitholdingTaxFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WITHOLDING_TAX_FLAG");

//                entity.Property(e => e.WorkersCompFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WORKERS_COMP_FLAG");
//            });

//            modelBuilder.Entity<TQbyteCode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_codes", "stage");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CodeDesc)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE_DESC");

//                entity.Property(e => e.CodeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE_TYPE_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");
//            });

//            modelBuilder.Entity<TQbyteCostCentre>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_cost_centres", "stage");

//                entity.Property(e => e.ActiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTIVE_DATE");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_OTHER_ORGS_CODE");

//                entity.Property(e => e.AltGlCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_GL_CODE_REQD_FLAG");

//                entity.Property(e => e.BatteryNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_NUM");

//                entity.Property(e => e.BillingCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BILLING_CODE");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_OR_DRY_HOLE_EXP_CODE");

//                entity.Property(e => e.CcGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_GROUP_CODE");

//                entity.Property(e => e.CcName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NAME");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_TYPE_CODE");

//                entity.Property(e => e.CcUdf10Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_10_CODE");

//                entity.Property(e => e.CcUdf11Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_11_CODE");

//                entity.Property(e => e.CcUdf12Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_12_CODE");

//                entity.Property(e => e.CcUdf13Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_13_CODE");

//                entity.Property(e => e.CcUdf14Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_14_CODE");

//                entity.Property(e => e.CcUdf15Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_15_CODE");

//                entity.Property(e => e.CcUdf16Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_16_CODE");

//                entity.Property(e => e.CcUdf17Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_17_CODE");

//                entity.Property(e => e.CcUdf18Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_18_CODE");

//                entity.Property(e => e.CcUdf19Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_19_CODE");

//                entity.Property(e => e.CcUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_1_CODE");

//                entity.Property(e => e.CcUdf20Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_20_CODE");

//                entity.Property(e => e.CcUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_2_CODE");

//                entity.Property(e => e.CcUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_3_CODE");

//                entity.Property(e => e.CcUdf4Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_4_CODE");

//                entity.Property(e => e.CcUdf5Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_5_CODE");

//                entity.Property(e => e.CcUdf6Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_6_CODE");

//                entity.Property(e => e.CcUdf7Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_7_CODE");

//                entity.Property(e => e.CcUdf8Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_8_CODE");

//                entity.Property(e => e.CcUdf9Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_9_CODE");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CONTRACT_OPERATOR_CLIENT_ID");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_GL_SUB_CODE");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FLAG");

//                entity.Property(e => e.JibeCheckAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("JIBE_CHECK_AMT");

//                entity.Property(e => e.JibeCheckVariancePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("JIBE_CHECK_VARIANCE_PCT");

//                entity.Property(e => e.LandFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("LAND_FILE_NUMBER");

//                entity.Property(e => e.LastEmpBenefitAcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_EMP_BENEFIT_ACCT_PER_DATE");

//                entity.Property(e => e.LastEmpBenefitAdjDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_EMP_BENEFIT_ADJ_DATE");

//                entity.Property(e => e.LastOverheadAcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_OVERHEAD_ACCT_PER_DATE");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.LeaseSplitNumber)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("LEASE_SPLIT_NUMBER");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_8");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("MANAGING_ORG_ID");

//                entity.Property(e => e.MunicipalityCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("MUNICIPALITY_CODE");

//                entity.Property(e => e.OcCostCentreFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OC_COST_CENTRE_FLAG");

//                entity.Property(e => e.OperatingCentreCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATING_CENTRE_CODE");

//                entity.Property(e => e.OperatorCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_CC_NUM");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("OPERATOR_CLIENT_ID");

//                entity.Property(e => e.OverheadMethodCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OVERHEAD_METHOD_CODE");

//                entity.Property(e => e.OverheadRecoveryCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OVERHEAD_RECOVERY_CC_NUM");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("OWNERSHIP_ORG_ID");

//                entity.Property(e => e.PrimaryProdCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PROD_CODE");

//                entity.Property(e => e.ProducingZone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCING_ZONE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM_CODE");

//                entity.Property(e => e.TaxStreamCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_STREAM_CODE");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_CC_NUM");

//                entity.Property(e => e.UnitCode)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("UNIT_CODE");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USE_JIBE_EDITS_FLAG");

//                entity.Property(e => e.WellRigReleaseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_RIG_RELEASE_DATE");

//                entity.Property(e => e.WellShutInDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_SHUT_IN_DATE");

//                entity.Property(e => e.WellSpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_SPUD_DATE");

//                entity.Property(e => e.WellStatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STAT_CODE");

//                entity.Property(e => e.WellStatLastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_STAT_LAST_UPDATE_DATE");

//                entity.Property(e => e.WellStatLastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STAT_LAST_UPDATE_USER");

//                entity.Property(e => e.WellTotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("WELL_TOTAL_DEPTH");
//            });

//            modelBuilder.Entity<TQbyteCostCentreLegal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_cost_centre_legals", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_8");

//                entity.Property(e => e.PrimaryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_FLAG");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM_CODE");
//            });

//            modelBuilder.Entity<TQbyteCostCentreNameRevisedDesc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_cost_centre_name_revised_desc", "stage");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CostCentreNameRevised)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name_revised");
//            });

//            modelBuilder.Entity<TQbyteCostEstimateItem>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_cost_estimate_items", "stage");

//                entity.Property(e => e.AfeItemNum)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_ITEM_NUM");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AfeRevisionNum)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("AFE_REVISION_NUM");

//                entity.Property(e => e.AfeSupplementNum)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("AFE_SUPPLEMENT_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.GrossCostEstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GROSS_COST_EST_AMT");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.NetCostEstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("NET_COST_EST_AMT");
//            });

//            modelBuilder.Entity<TQbyteCountry>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_countries", "stage");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CountryComment)
//                    .HasMaxLength(300)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_COMMENT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");
//            });

//            modelBuilder.Entity<TQbyteDeletedLineitemsLog>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_deleted_lineitems_log", "OLAPControl");

//                entity.Property(e => e.DeletedDate).HasColumnType("datetime");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("LI_ID");
//            });

//            modelBuilder.Entity<TQbyteDoiDeck>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_doi_decks", "stage");

//                entity.Property(e => e.BillingAgentBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("BILLING_AGENT_BA_ID");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.TerminateFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TERMINATE_FLAG");
//            });

//            modelBuilder.Entity<TQbyteDoiDeckPartner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_doi_deck_partners", "stage");

//                entity.Property(e => e.AccountableFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNTABLE_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DoiDeckId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("DOI_DECK_ID");

//                entity.Property(e => e.FmPartnerPct)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("FM_PARTNER_PCT");

//                entity.Property(e => e.LaPartnerPct)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("LA_PARTNER_PCT");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.PartnerBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PARTNER_BA_ID");

//                entity.Property(e => e.PenaltyFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PENALTY_FLAG");

//                entity.Property(e => e.SilentAgentBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SILENT_AGENT_BA_ID");

//                entity.Property(e => e.SilentPartnerFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER_FLAG");

//                entity.Property(e => e.TakeInKindFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TAKE_IN_KIND_FLAG");
//            });

//            modelBuilder.Entity<TQbyteFaBaProperty>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_fa_ba_properties", "stage");

//                entity.Property(e => e.AdxNum)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ADX_NUM");

//                entity.Property(e => e.AlternateBaIdReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALTERNATE_BA_ID_REQD_FLAG");

//                entity.Property(e => e.ApCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("AP_CREDIT_DAYS");

//                entity.Property(e => e.ArCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("AR_CREDIT_DAYS");

//                entity.Property(e => e.ArCreditLimitAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("AR_CREDIT_LIMIT_AMT");

//                entity.Property(e => e.BaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("BA_ID");

//                entity.Property(e => e.BillingCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BILLING_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CreditRevisedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREDIT_REVISED_DATE");

//                entity.Property(e => e.DefaultBaAddressId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("DEFAULT_BA_ADDRESS_ID");

//                entity.Property(e => e.DiscountCreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DISCOUNT_CREDIT_DAYS");

//                entity.Property(e => e.DiscountPct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("DISCOUNT_PCT");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExcludeFromDupPaymentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXCLUDE_FROM_DUP_PAYMENT_FLAG");

//                entity.Property(e => e.HoldDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("HOLD_DATE");

//                entity.Property(e => e.InactivatedUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("INACTIVATED_USER");

//                entity.Property(e => e.InactiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INACTIVE_DATE");

//                entity.Property(e => e.InvcDateInUniqueCheckFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_DATE_IN_UNIQUE_CHECK_FLAG");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.PaidToBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PAID_TO_BA_ID");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_CODE");

//                entity.Property(e => e.PrintJibStatementFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRINT_JIB_STATEMENT_FLAG");

//                entity.Property(e => e.RecFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REC_FORMAT_CODE");

//                entity.Property(e => e.SendFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SEND_FORMAT_CODE");

//                entity.Property(e => e.SendMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SEND_METHOD_CODE");

//                entity.Property(e => e.SubsystemComponentId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SUBSYSTEM_COMPONENT_ID");

//                entity.Property(e => e.TransactingBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("TRANSACTING_BA_ID");

//                entity.Property(e => e.UseJibeDoiEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USE_JIBE_DOI_EDITS_FLAG");

//                entity.Property(e => e.WitholdingTaxFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WITHOLDING_TAX_FLAG");

//                entity.Property(e => e.WorkersCompFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WORKERS_COMP_FLAG");
//            });

//            modelBuilder.Entity<TQbyteInvoice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_invoices", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AlternateAddressId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("ALTERNATE_ADDRESS_ID");

//                entity.Property(e => e.AlternateClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("ALTERNATE_CLIENT_ID");

//                entity.Property(e => e.ApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("APPROVAL_DATE");

//                entity.Property(e => e.ApprovalRem)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("APPROVAL_REM");

//                entity.Property(e => e.AttachmentReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ATTACHMENT_REQD_FLAG");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ChqMailTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CHQ_MAIL_TYPE_CODE");

//                entity.Property(e => e.ClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CLIENT_ID");

//                entity.Property(e => e.ContractNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("CREDIT_DAYS");

//                entity.Property(e => e.DiscountAchieved)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DISCOUNT_ACHIEVED");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.DiscountDueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DISCOUNT_DUE_DATE");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("DUE_DATE");

//                entity.Property(e => e.GstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_AMT");

//                entity.Property(e => e.GstDistributionAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_DISTRIBUTION_AMT");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.HoldDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("HOLD_DATE");

//                entity.Property(e => e.InvcAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("INVC_AMT");

//                entity.Property(e => e.InvcDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("INVC_DATE");

//                entity.Property(e => e.InvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("INVC_ID");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_NUM");

//                entity.Property(e => e.InvcOriginCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_ORIGIN_CODE");

//                entity.Property(e => e.InvcRem)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_REM");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_TYPE_CODE");

//                entity.Property(e => e.InvoiceApprovalIndividualId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("INVOICE_APPROVAL_INDIVIDUAL_ID");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MiscellaneousIncomeAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("MISCELLANEOUS_INCOME_AMT");

//                entity.Property(e => e.NrwtAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("NRWT_AMT");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.PayStatCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PAY_STAT_CODE");

//                entity.Property(e => e.PayableOrReceivableCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYABLE_OR_RECEIVABLE_CODE");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_CODE");

//                entity.Property(e => e.PaymentFormatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_FORMAT_CODE");

//                entity.Property(e => e.PaymentHandlingCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_HANDLING_CODE");

//                entity.Property(e => e.PriorityCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIORITY_CODE");

//                entity.Property(e => e.PstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PST_AMT");

//                entity.Property(e => e.PurchaseOrderNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_ORDER_NUM");

//                entity.Property(e => e.RcvdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("RCVD_DATE");

//                entity.Property(e => e.ReleaseForPaymentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("RELEASE_FOR_PAYMENT_AMT");

//                entity.Property(e => e.SentForApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("SENT_FOR_APPROVAL_DATE");

//                entity.Property(e => e.SentTo)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("SENT_TO");

//                entity.Property(e => e.SeparateChqFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SEPARATE_CHQ_FLAG");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.WithholdingTaxAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("WITHHOLDING_TAX_AMT");
//            });

//            modelBuilder.Entity<TQbyteInvoiceType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_invoice_types", "stage");

//                entity.Property(e => e.AutoCalcInvcGstFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTO_CALC_INVC_GST_FLAG");

//                entity.Property(e => e.CashCallFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CASH_CALL_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CreditAnalyst)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("CREDIT_ANALYST");

//                entity.Property(e => e.CreditDays)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("CREDIT_DAYS");

//                entity.Property(e => e.CtrlMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_MAJOR_ACCT");

//                entity.Property(e => e.CtrlMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_MINOR_ACCT");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_TYPE_CODE");

//                entity.Property(e => e.InvcTypeDesc)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("INVC_TYPE_DESC");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.PayableOrReceivableCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYABLE_OR_RECEIVABLE_CODE");

//                entity.Property(e => e.PurchaseOrderReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_ORDER_REQD_FLAG");
//            });

//            modelBuilder.Entity<TQbyteLineItem>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_line_items", "stage");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTVY_PER_DATE");

//                entity.Property(e => e.AfeItemNum)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_ITEM_NUM");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AllocDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ALLOC_DATE");

//                entity.Property(e => e.AllocLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ALLOC_LI_ID");

//                entity.Property(e => e.AllocationReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_REVERSED_FLAG");

//                entity.Property(e => e.BilledDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("BILLED_DATE");

//                entity.Property(e => e.CashTxId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CASH_TX_ID");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DEST_ORG_ID");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.EtId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ET_ID");

//                entity.Property(e => e.GlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE");

//                entity.Property(e => e.GovernAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("GOVERN_AGR_ID");

//                entity.Property(e => e.GovernAgrOverrideFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_OVERRIDE_FLAG");

//                entity.Property(e => e.GovernAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_TYPE_CODE");

//                entity.Property(e => e.GrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GROSS_UP_AMT");

//                entity.Property(e => e.GrossUpEnergyVal)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_ENERGY_VAL");

//                entity.Property(e => e.GrossUpVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_VOL");

//                entity.Property(e => e.GstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_AMT");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.JibReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_REVERSED_FLAG");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LiAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("LI_AMT");

//                entity.Property(e => e.LiAsEnteredVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_AS_ENTERED_VOL");

//                entity.Property(e => e.LiEnergyAmount)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_ENERGY_AMOUNT");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("LI_ID");

//                entity.Property(e => e.LiOriginCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_ORIGIN_CODE");

//                entity.Property(e => e.LiRem)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_REM");

//                entity.Property(e => e.LiTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_TYPE_CODE");

//                entity.Property(e => e.LiVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_VOL");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.MiscellaneousIncomeCategory)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("MISCELLANEOUS_INCOME_CATEGORY");

//                entity.Property(e => e.OrgRepCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_AMT");

//                entity.Property(e => e.OrgRepCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.OrgRepCurrTranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("ORG_REP_CURR_TRANSLATION_RATE");

//                entity.Property(e => e.OriginalLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ORIGINAL_LI_ID");

//                entity.Property(e => e.PoDistributionId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PO_DISTRIBUTION_ID");

//                entity.Property(e => e.PotrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("POTR_ID");

//                entity.Property(e => e.PreTaxAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PRE_TAX_AMT");

//                entity.Property(e => e.ReportingCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_AMT");

//                entity.Property(e => e.ReportingCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.ReportingCurrGstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GST_AMT");

//                entity.Property(e => e.ResultInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("RESULT_INVC_ID");

//                entity.Property(e => e.SrcAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_AGR_ID");

//                entity.Property(e => e.SrcAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_AGR_TYPE_CODE");

//                entity.Property(e => e.SrcInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_INVC_ID");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("TRANSLATION_RATE");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.WarehouseHandlingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WAREHOUSE_HANDLING_FLAG");
//            });

//            modelBuilder.Entity<TQbyteLineItemsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_line_items_incr", "stage");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTVY_PER_DATE");

//                entity.Property(e => e.AfeItemNum)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_ITEM_NUM");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AllocDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ALLOC_DATE");

//                entity.Property(e => e.AllocLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ALLOC_LI_ID");

//                entity.Property(e => e.AllocationReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_REVERSED_FLAG");

//                entity.Property(e => e.BilledDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("BILLED_DATE");

//                entity.Property(e => e.CashTxId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CASH_TX_ID");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DEST_ORG_ID");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.EtId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ET_ID");

//                entity.Property(e => e.GlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE");

//                entity.Property(e => e.GovernAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("GOVERN_AGR_ID");

//                entity.Property(e => e.GovernAgrOverrideFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_OVERRIDE_FLAG");

//                entity.Property(e => e.GovernAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_TYPE_CODE");

//                entity.Property(e => e.GrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GROSS_UP_AMT");

//                entity.Property(e => e.GrossUpEnergyVal)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_ENERGY_VAL");

//                entity.Property(e => e.GrossUpVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_VOL");

//                entity.Property(e => e.GstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_AMT");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.JibReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_REVERSED_FLAG");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LiAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("LI_AMT");

//                entity.Property(e => e.LiAsEnteredVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_AS_ENTERED_VOL");

//                entity.Property(e => e.LiEnergyAmount)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_ENERGY_AMOUNT");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("LI_ID");

//                entity.Property(e => e.LiOriginCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_ORIGIN_CODE");

//                entity.Property(e => e.LiRem)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_REM");

//                entity.Property(e => e.LiTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_TYPE_CODE");

//                entity.Property(e => e.LiVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_VOL");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.MiscellaneousIncomeCategory)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("MISCELLANEOUS_INCOME_CATEGORY");

//                entity.Property(e => e.OrgRepCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_AMT");

//                entity.Property(e => e.OrgRepCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.OrgRepCurrTranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("ORG_REP_CURR_TRANSLATION_RATE");

//                entity.Property(e => e.OriginalLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ORIGINAL_LI_ID");

//                entity.Property(e => e.PoDistributionId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PO_DISTRIBUTION_ID");

//                entity.Property(e => e.PotrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("POTR_ID");

//                entity.Property(e => e.PreTaxAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PRE_TAX_AMT");

//                entity.Property(e => e.ReportingCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_AMT");

//                entity.Property(e => e.ReportingCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.ReportingCurrGstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GST_AMT");

//                entity.Property(e => e.ResultInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("RESULT_INVC_ID");

//                entity.Property(e => e.SrcAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_AGR_ID");

//                entity.Property(e => e.SrcAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_AGR_TYPE_CODE");

//                entity.Property(e => e.SrcInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_INVC_ID");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("TRANSLATION_RATE");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.WarehouseHandlingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WAREHOUSE_HANDLING_FLAG");
//            });

//            modelBuilder.Entity<TQbyteMajorAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_major_accounts", "stage");

//                entity.Property(e => e.AccrualMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MAJOR_ACCT");

//                entity.Property(e => e.AccrualMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_MINOR_ACCT");

//                entity.Property(e => e.ActvyDateReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTVY_DATE_REQD_DFLT_FLAG");

//                entity.Property(e => e.AfeReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_REQD_DFLT_FLAG");

//                entity.Property(e => e.AltClientReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_CLIENT_REQD_DFLT_FLAG");

//                entity.Property(e => e.AltGlCodeReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_GL_CODE_REQD_DFLT_FLAG");

//                entity.Property(e => e.CcReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_REQD_DFLT_FLAG");

//                entity.Property(e => e.ClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CLASS_CODE");

//                entity.Property(e => e.ContEquipFootReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONT_EQUIP_FOOT_REQD_DFLT_FLAG");

//                entity.Property(e => e.ContinuityReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_REQD_DFLT_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAcctTypeDfltCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_ACCT_TYPE_DFLT_CODE");

//                entity.Property(e => e.CtrlEquipReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CTRL_EQUIP_REQD_DFLT_FLAG");

//                entity.Property(e => e.CurrConvRuleDfltCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CONV_RULE_DFLT_CODE");

//                entity.Property(e => e.DefaultCurrTypeDfltCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_CURR_TYPE_DFLT_CODE");

//                entity.Property(e => e.EnvAllowedDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENV_ALLOWED_DFLT_FLAG");

//                entity.Property(e => e.GlSubCodeReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE_REQD_DFLT_FLAG");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GROSS_OR_NET_CODE");

//                entity.Property(e => e.JibFootnoteReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FOOTNOTE_REQD_DFLT_FLAG");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MajorAcctDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT_DESC");

//                entity.Property(e => e.NetMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("NET_MAJOR_ACCT");

//                entity.Property(e => e.ReOciDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RE_OCI_DFLT_FLAG");

//                entity.Property(e => e.TaxClassRuleFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_CLASS_RULE_FLAG");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.VolReqdDfltFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOL_REQD_DFLT_FLAG");
//            });

//            modelBuilder.Entity<TQbyteOperatorAfe>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_operator_afes", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.ClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CLIENT_ID");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OperatorAfeNum)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_AFE_NUM");
//            });

//            modelBuilder.Entity<TQbyteOrganization>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_organizations", "stage");

//                entity.Property(e => e.AdminCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ADMIN_CC_NUM");

//                entity.Property(e => e.CashCallDrawDownFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CASH_CALL_DRAW_DOWN_FLAG");

//                entity.Property(e => e.CountryForTaxation)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_FOR_TAXATION");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FiscalYearEnd)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("FISCAL_YEAR_END");

//                entity.Property(e => e.GstRegNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_REG_NUM");

//                entity.Property(e => e.JibInvcOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("JIB_INVC_ORG_ID");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.MultiTierJibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MULTI_TIER_JIB_FLAG");

//                entity.Property(e => e.NonStandardVolumeEntryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NON_STANDARD_VOLUME_ENTRY_FLAG");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OP_CURR_CODE");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.OrgName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ORG_NAME");

//                entity.Property(e => e.OrgTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ORG_TYPE_CODE");

//                entity.Property(e => e.ProfileGroupCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PROFILE_GROUP_CODE");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_CURR_CODE");

//                entity.Property(e => e.SelfSustainingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SELF_SUSTAINING_FLAG");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_CODE");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");
//            });

//            modelBuilder.Entity<TQbyteOwnershipAgreementLink>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_ownership_agreement_links", "stage");

//                entity.Property(e => e.AcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCT_GROUP_CODE");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AgreementId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("AGREEMENT_ID");

//                entity.Property(e => e.BillCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("BILL_CODE");

//                entity.Property(e => e.BurdenId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("BURDEN_ID");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EFFECTIVE_DATE");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.ExternalReferenceId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("EXTERNAL_REFERENCE_ID");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MassUpdateId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("MASS_UPDATE_ID");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.OwnershipLinkId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("OWNERSHIP_LINK_ID");

//                entity.Property(e => e.ProductionRevenueCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_REVENUE_CODE");

//                entity.Property(e => e.RoyaltyAgreementRef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_AGREEMENT_REF");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.TerminateFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TERMINATE_FLAG");
//            });

//            modelBuilder.Entity<TQbyteProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_products", "stage");

//                entity.Property(e => e.ActualMeasureSystemCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTUAL_MEASURE_SYSTEM_CODE");

//                entity.Property(e => e.BoeEconomic)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("BOE_ECONOMIC");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("BOE_THERMAL");

//                entity.Property(e => e.BudgetMeasureSystemCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_MEASURE_SYSTEM_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EnergyImperialUnit)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGY_IMPERIAL_UNIT");

//                entity.Property(e => e.EnergySiToImpConvFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("ENERGY_SI_TO_IMP_CONV_FACTOR");

//                entity.Property(e => e.EnergySiUnit)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ENERGY_SI_UNIT");

//                entity.Property(e => e.ImperialUnit)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("IMPERIAL_UNIT");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.M3Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("M3_THERMAL");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("MCFE6_THERMAL");

//                entity.Property(e => e.ProdCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_CODE");

//                entity.Property(e => e.ProdName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_NAME");

//                entity.Property(e => e.ProdShortName)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PROD_SHORT_NAME");

//                entity.Property(e => e.SalesMajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("SALES_MAJOR_ACCT");

//                entity.Property(e => e.SalesMinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("SALES_MINOR_ACCT");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("SI_TO_IMP_CONV_FACTOR");

//                entity.Property(e => e.SiUnit)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SI_UNIT");
//            });

//            modelBuilder.Entity<TQbyteProvince>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_provinces", "stage");

//                entity.Property(e => e.AcToHaFactor)
//                    .HasColumnType("numeric(15, 6)")
//                    .HasColumnName("AC_TO_HA_FACTOR");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_CODE");

//                entity.Property(e => e.FormationBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("FORMATION_BA_ID");

//                entity.Property(e => e.HaToAcFactor)
//                    .HasColumnType("numeric(15, 6)")
//                    .HasColumnName("HA_TO_AC_FACTOR");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ProvinceComment)
//                    .HasMaxLength(300)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_COMMENT");
//            });

//            modelBuilder.Entity<TQbyteReportingEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_reporting_entities", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.HierarchyCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("HIERARCHY_CODE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.OtherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OTHER_ID");

//                entity.Property(e => e.ParentReportingEntityCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_REPORTING_ENTITY_CODE");

//                entity.Property(e => e.ParentReportingEntityId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PARENT_REPORTING_ENTITY_ID");

//                entity.Property(e => e.ParentReportingLevelCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PARENT_REPORTING_LEVEL_CODE");

//                entity.Property(e => e.ReportingEntityCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_ENTITY_CODE");

//                entity.Property(e => e.ReportingEntityDesc)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_ENTITY_DESC");

//                entity.Property(e => e.ReportingEntityId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("REPORTING_ENTITY_ID");

//                entity.Property(e => e.ReportingEntityLocation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_ENTITY_LOCATION");

//                entity.Property(e => e.ReportingLevelCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_LEVEL_CODE");
//            });

//            modelBuilder.Entity<TQbyteSpecialExchangeRate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_special_exchange_rates", "stage");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_PER_DATE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.ExchangeRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("EXCHANGE_RATE");

//                entity.Property(e => e.FromCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FROM_CURR_CODE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.SpecialCurrRateCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_CURR_RATE_CODE");

//                entity.Property(e => e.ToCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TO_CURR_CODE");
//            });

//            modelBuilder.Entity<TQbyteUdfCode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_udf_codes", "stage");

//                entity.Property(e => e.Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.UdfTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("UDF_TYPE_CODE");
//            });

//            modelBuilder.Entity<TQbyteVoucher>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_vouchers", "stage");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_PER_DATE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("CTRL_AMT");

//                entity.Property(e => e.CtrlVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("CTRL_VOL");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.CurrConvDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURR_CONV_DATE");

//                entity.Property(e => e.GlPostUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_POST_USER");

//                entity.Property(e => e.GlPostingDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("GL_POSTING_DATE");

//                entity.Property(e => e.JibRunNum)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("JIB_RUN_NUM");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.SrcCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_CODE");

//                entity.Property(e => e.SrcModuleId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_MODULE_ID");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.VoucherNum)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("VOUCHER_NUM");

//                entity.Property(e => e.VoucherRem)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_REM");

//                entity.Property(e => e.VoucherReversalId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_REVERSAL_ID");

//                entity.Property(e => e.VoucherStatCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_STAT_CODE");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_CODE");
//            });

//            modelBuilder.Entity<TQbyteVoucherType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_voucher_types", "stage");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCRUAL_FLAG");

//                entity.Property(e => e.AutoGenInBatchEditFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("AUTO_GEN_IN_BATCH_EDIT_FLAG");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CurrencyAdjustmentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENCY_ADJUSTMENT_FLAG");

//                entity.Property(e => e.GlReportingLevelCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_REPORTING_LEVEL_CODE");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OnLinePostFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_LINE_POST_FLAG");

//                entity.Property(e => e.PopulateCompanyCodeFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("POPULATE_COMPANY_CODE_FLAG");

//                entity.Property(e => e.StandardEntryTypeFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("STANDARD_ENTRY_TYPE_FLAG");

//                entity.Property(e => e.TranslationMode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSLATION_MODE");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_CODE");

//                entity.Property(e => e.VoucherTypeDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_DESC");

//                entity.Property(e => e.VoucherTypeUseCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_USE_CODE");
//            });

//            modelBuilder.Entity<TQbyteVouchers1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_vouchers_1", "stage");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_PER_DATE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("CTRL_AMT");

//                entity.Property(e => e.CtrlVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("CTRL_VOL");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.CurrConvDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURR_CONV_DATE");

//                entity.Property(e => e.GlPostUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_POST_USER");

//                entity.Property(e => e.GlPostingDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("GL_POSTING_DATE");

//                entity.Property(e => e.JibRunNum)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("JIB_RUN_NUM");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.SrcCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_CODE");

//                entity.Property(e => e.SrcModuleId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_MODULE_ID");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.VoucherNum)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("VOUCHER_NUM");

//                entity.Property(e => e.VoucherRem)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_REM");

//                entity.Property(e => e.VoucherReversalId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_REVERSAL_ID");

//                entity.Property(e => e.VoucherStatCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_STAT_CODE");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_CODE");
//            });

//            modelBuilder.Entity<TQbyteVouchersIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_qbyte_vouchers_incr", "stage");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACCT_PER_DATE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CtrlAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("CTRL_AMT");

//                entity.Property(e => e.CtrlVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("CTRL_VOL");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CURR_CODE");

//                entity.Property(e => e.CurrConvDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CURR_CONV_DATE");

//                entity.Property(e => e.GlPostUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_POST_USER");

//                entity.Property(e => e.GlPostingDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("GL_POSTING_DATE");

//                entity.Property(e => e.JibRunNum)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("JIB_RUN_NUM");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.SrcCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_CODE");

//                entity.Property(e => e.SrcModuleId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_MODULE_ID");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.VoucherNum)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("VOUCHER_NUM");

//                entity.Property(e => e.VoucherRem)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_REM");

//                entity.Property(e => e.VoucherReversalId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_REVERSAL_ID");

//                entity.Property(e => e.VoucherStatCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_STAT_CODE");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("VOUCHER_TYPE_CODE");
//            });

//            modelBuilder.Entity<TReservesCodeLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_code_lookup", "stage_valnav");

//                entity.Property(e => e.CodeType)
//                    .HasMaxLength(50)
//                    .HasColumnName("CODE_TYPE");

//                entity.Property(e => e.CodeValue).HasColumnName("CODE_VALUE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");
//            });

//            modelBuilder.Entity<TReservesCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_custom_field_def", "stage_valnav");

//                entity.Property(e => e.DefType).HasColumnName("DEF_TYPE");

//                entity.Property(e => e.DefaultListValue)
//                    .HasMaxLength(4000)
//                    .HasColumnName("DEFAULT_LIST_VALUE");

//                entity.Property(e => e.EnforceValues).HasColumnName("ENFORCE_VALUES");

//                entity.Property(e => e.Format)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORMAT");

//                entity.Property(e => e.ImperialUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("IMPERIAL_UNIT");

//                entity.Property(e => e.MetricUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("METRIC_UNIT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.Precision).HasColumnName("PRECISION");

//                entity.Property(e => e.SecurityEnabled).HasColumnName("SECURITY_ENABLED");

//                entity.Property(e => e.UsageType).HasColumnName("USAGE_TYPE");
//            });

//            modelBuilder.Entity<TReservesEntCustomField>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_ent_custom_field", "stage_valnav");

//                entity.Property(e => e.DateValue).HasColumnName("DATE_VALUE");

//                entity.Property(e => e.NumericValue).HasColumnName("NUMERIC_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(50)
//                    .HasColumnName("STRING_VALUE");

//                entity.Property(e => e.UserFieldId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_FIELD_ID");
//            });

//            modelBuilder.Entity<TReservesEntReservesCache>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_ent_reserves_cache", "stage_valnav");

//                entity.Property(e => e.ActualForecastStart).HasColumnName("ACTUAL_FORECAST_START");

//                entity.Property(e => e.CachedOnTimeType).HasColumnName("CACHED_ON_TIME_TYPE");

//                entity.Property(e => e.EnergyContent).HasColumnName("ENERGY_CONTENT");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastStartDate).HasColumnName("FORECAST_START_DATE");

//                entity.Property(e => e.FuelLoss).HasColumnName("FUEL_LOSS");

//                entity.Property(e => e.HasVolumetrics).HasColumnName("HAS_VOLUMETRICS");

//                entity.Property(e => e.OnTime).HasColumnName("ON_TIME");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ProcessLoss).HasColumnName("PROCESS_LOSS");

//                entity.Property(e => e.RemainingSalesGas).HasColumnName("REMAINING_SALES_GAS");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.Rgip).HasColumnName("RGIP");

//                entity.Property(e => e.SurfaceLoss).HasColumnName("SURFACE_LOSS");

//                entity.Property(e => e.TechnicalWi).HasColumnName("TECHNICAL_WI");

//                entity.Property(e => e.TotalGasLoss).HasColumnName("TOTAL_GAS_LOSS");
//            });

//            modelBuilder.Entity<TReservesEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_entity", "stage_valnav");

//                entity.Property(e => e.EntityType).HasColumnName("ENTITY_TYPE");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("FORMATTED_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.SortingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("SORTING_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<TReservesFiscReservesProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_fisc_reserves_product", "stage_valnav");

//                entity.Property(e => e.AssociatedProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("ASSOCIATED_PRODUCT");

//                entity.Property(e => e.IncludeInRecon).HasColumnName("INCLUDE_IN_RECON");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.QueryNameFragment)
//                    .HasMaxLength(50)
//                    .HasColumnName("QUERY_NAME_FRAGMENT");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");
//            });

//            modelBuilder.Entity<TReservesFiscScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_fisc_scenario", "stage_valnav");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastChangeDate).HasColumnName("LAST_CHANGE_DATE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(205)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OverridePlanParameters).HasColumnName("OVERRIDE_PLAN_PARAMETERS");

//                entity.Property(e => e.OwnedBy)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWNED_BY");

//                entity.Property(e => e.ScenarioType).HasColumnName("SCENARIO_TYPE");
//            });

//            modelBuilder.Entity<TReservesFiscScenarioParam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_fisc_scenario_params", "stage_valnav");

//                entity.Property(e => e.AllowNegWedge).HasColumnName("ALLOW_NEG_WEDGE");

//                entity.Property(e => e.CapActEconCalcOpt).HasColumnName("CAP_ACT_ECON_CALC_OPT");

//                entity.Property(e => e.CapCostFactor).HasColumnName("CAP_COST_FACTOR");

//                entity.Property(e => e.CapCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CAP_COST_TEMPLATE_ID");

//                entity.Property(e => e.CooOverride).HasColumnName("COO_OVERRIDE");

//                entity.Property(e => e.CosOverride).HasColumnName("COS_OVERRIDE");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EconLimitCalcType).HasColumnName("ECON_LIMIT_CALC_TYPE");

//                entity.Property(e => e.EconLimitDelay).HasColumnName("ECON_LIMIT_DELAY");

//                entity.Property(e => e.EconLimitDiscount).HasColumnName("ECON_LIMIT_DISCOUNT");

//                entity.Property(e => e.EnableAbandonment).HasColumnName("ENABLE_ABANDONMENT");

//                entity.Property(e => e.EnableEconLimit).HasColumnName("ENABLE_ECON_LIMIT");

//                entity.Property(e => e.EnableSaskSurcharge).HasColumnName("ENABLE_SASK_SURCHARGE");

//                entity.Property(e => e.EnableSharedCalculation).HasColumnName("ENABLE_SHARED_CALCULATION");

//                entity.Property(e => e.EscalatePrice).HasColumnName("ESCALATE_PRICE");

//                entity.Property(e => e.InflationOverride).HasColumnName("INFLATION_OVERRIDE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostFactor).HasColumnName("OP_COST_FACTOR");

//                entity.Property(e => e.OpCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OP_COST_TEMPLATE_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_ID");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.PriceFactor).HasColumnName("PRICE_FACTOR");

//                entity.Property(e => e.PriceTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_TEMPLATE_ID");

//                entity.Property(e => e.ProductionFactor).HasColumnName("PRODUCTION_FACTOR");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.UseOverlappingHistory).HasColumnName("USE_OVERLAPPING_HISTORY");
//            });

//            modelBuilder.Entity<TReservesResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<TReservesResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<TReservesResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<TReservesResultsCost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_cost", "stage_valnav");

//                entity.Property(e => e.CapGrAbandonment).HasColumnName("CAP_GR_ABANDONMENT");

//                entity.Property(e => e.CapGrCanAllowance).HasColumnName("CAP_GR_CAN_ALLOWANCE");

//                entity.Property(e => e.CapGrCanDevelopment).HasColumnName("CAP_GR_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapGrCanExploration).HasColumnName("CAP_GR_CAN_EXPLORATION");

//                entity.Property(e => e.CapGrCanProperty).HasColumnName("CAP_GR_CAN_PROPERTY");

//                entity.Property(e => e.CapGrOther).HasColumnName("CAP_GR_OTHER");

//                entity.Property(e => e.CapGrSalvage).HasColumnName("CAP_GR_SALVAGE");

//                entity.Property(e => e.CapGrUsGg).HasColumnName("CAP_GR_US_GG");

//                entity.Property(e => e.CapGrUsIntangible).HasColumnName("CAP_GR_US_INTANGIBLE");

//                entity.Property(e => e.CapGrUsPropLease).HasColumnName("CAP_GR_US_PROP_LEASE");

//                entity.Property(e => e.CapGrUsTangible).HasColumnName("CAP_GR_US_TANGIBLE");

//                entity.Property(e => e.CapUnriskedAbandonment).HasColumnName("CAP_UNRISKED_ABANDONMENT");

//                entity.Property(e => e.CapUnriskedCanAllowance).HasColumnName("CAP_UNRISKED_CAN_ALLOWANCE");

//                entity.Property(e => e.CapUnriskedCanDevelopment).HasColumnName("CAP_UNRISKED_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapUnriskedCanExploration).HasColumnName("CAP_UNRISKED_CAN_EXPLORATION");

//                entity.Property(e => e.CapUnriskedCanProperty).HasColumnName("CAP_UNRISKED_CAN_PROPERTY");

//                entity.Property(e => e.CapUnriskedSalvage).HasColumnName("CAP_UNRISKED_SALVAGE");

//                entity.Property(e => e.CapUnriskedUsGg).HasColumnName("CAP_UNRISKED_US_GG");

//                entity.Property(e => e.CapUnriskedUsIntangible).HasColumnName("CAP_UNRISKED_US_INTANGIBLE");

//                entity.Property(e => e.CapUnriskedUsPropLease).HasColumnName("CAP_UNRISKED_US_PROP_LEASE");

//                entity.Property(e => e.CapUnriskedUsTangible).HasColumnName("CAP_UNRISKED_US_TANGIBLE");

//                entity.Property(e => e.CapWiAbandonment).HasColumnName("CAP_WI_ABANDONMENT");

//                entity.Property(e => e.CapWiCanAllowance).HasColumnName("CAP_WI_CAN_ALLOWANCE");

//                entity.Property(e => e.CapWiCanDevelopment).HasColumnName("CAP_WI_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapWiCanExploration).HasColumnName("CAP_WI_CAN_EXPLORATION");

//                entity.Property(e => e.CapWiCanProperty).HasColumnName("CAP_WI_CAN_PROPERTY");

//                entity.Property(e => e.CapWiOther).HasColumnName("CAP_WI_OTHER");

//                entity.Property(e => e.CapWiSalvage).HasColumnName("CAP_WI_SALVAGE");

//                entity.Property(e => e.CapWiUsGg).HasColumnName("CAP_WI_US_GG");

//                entity.Property(e => e.CapWiUsIntangible).HasColumnName("CAP_WI_US_INTANGIBLE");

//                entity.Property(e => e.CapWiUsPropLease).HasColumnName("CAP_WI_US_PROP_LEASE");

//                entity.Property(e => e.CapWiUsTangible).HasColumnName("CAP_WI_US_TANGIBLE");

//                entity.Property(e => e.OpFiGrFixed).HasColumnName("OP_FI_GR_FIXED");

//                entity.Property(e => e.OpFiGrVariable).HasColumnName("OP_FI_GR_VARIABLE");

//                entity.Property(e => e.OpFiWiFixed).HasColumnName("OP_FI_WI_FIXED");

//                entity.Property(e => e.OpFiWiVariable).HasColumnName("OP_FI_WI_VARIABLE");

//                entity.Property(e => e.OpGrOtherRevenue).HasColumnName("OP_GR_OTHER_REVENUE");

//                entity.Property(e => e.OpWiGrFixed).HasColumnName("OP_WI_GR_FIXED");

//                entity.Property(e => e.OpWiGrVariable).HasColumnName("OP_WI_GR_VARIABLE");

//                entity.Property(e => e.OpWiOtherRevenue).HasColumnName("OP_WI_OTHER_REVENUE");

//                entity.Property(e => e.OpWiWiFixed).HasColumnName("OP_WI_WI_FIXED");

//                entity.Property(e => e.OpWiWiVariable).HasColumnName("OP_WI_WI_VARIABLE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");
//            });

//            modelBuilder.Entity<TReservesResultsCostDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_cost_detail", "stage_valnav");

//                entity.Property(e => e.CostDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_DEFINITION_ID");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("FAILURE_GROSS_VALUE");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("FAILURE_INTEREST_VALUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("SUCCESS_GROSS_VALUE");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("SUCCESS_INTEREST_VALUE");
//            });

//            modelBuilder.Entity<TReservesResultsLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_lookup", "stage_valnav");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.ResultType).HasColumnName("RESULT_TYPE");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SCENARIO_ID");
//            });

//            modelBuilder.Entity<TReservesResultsRegime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_regime", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.AdValoremBasis).HasColumnName("AD_VALOREM_BASIS");

//                entity.Property(e => e.BasicTax).HasColumnName("BASIC_TAX");

//                entity.Property(e => e.Bonus).HasColumnName("BONUS");

//                entity.Property(e => e.CostRecovery).HasColumnName("COST_RECOVERY");

//                entity.Property(e => e.Credits).HasColumnName("CREDITS");

//                entity.Property(e => e.Dda).HasColumnName("DDA");

//                entity.Property(e => e.DesignatedRor).HasColumnName("DESIGNATED_ROR");

//                entity.Property(e => e.Dmo).HasColumnName("DMO");

//                entity.Property(e => e.Expense).HasColumnName("EXPENSE");

//                entity.Property(e => e.Income).HasColumnName("INCOME");

//                entity.Property(e => e.InvestmentCredits).HasColumnName("INVESTMENT_CREDITS");

//                entity.Property(e => e.ProfitRevenue).HasColumnName("PROFIT_REVENUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.Royalty).HasColumnName("ROYALTY");

//                entity.Property(e => e.ServiceFee).HasColumnName("SERVICE_FEE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.Tranche).HasColumnName("TRANCHE");

//                entity.Property(e => e.Uplift).HasColumnName("UPLIFT");
//            });

//            modelBuilder.Entity<TReservesResultsSummary>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_reserves_results_summary", "stage_valnav");

//                entity.Property(e => e.AbandonDate).HasColumnName("ABANDON_DATE");

//                entity.Property(e => e.AtaxNetRevenue).HasColumnName("ATAX_NET_REVENUE");

//                entity.Property(e => e.AtaxNpv1).HasColumnName("ATAX_NPV1");

//                entity.Property(e => e.AtaxNpv2).HasColumnName("ATAX_NPV2");

//                entity.Property(e => e.AtaxNpv3).HasColumnName("ATAX_NPV3");

//                entity.Property(e => e.AtaxNpv4).HasColumnName("ATAX_NPV4");

//                entity.Property(e => e.AtaxNpv5).HasColumnName("ATAX_NPV5");

//                entity.Property(e => e.AtaxPayout).HasColumnName("ATAX_PAYOUT");

//                entity.Property(e => e.AtaxProfitRatio).HasColumnName("ATAX_PROFIT_RATIO");

//                entity.Property(e => e.AtaxProfitRatioNpv1).HasColumnName("ATAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.AtaxProfitRatioNpv2).HasColumnName("ATAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.AtaxProfitRatioNpv3).HasColumnName("ATAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.AtaxProfitRatioNpv4).HasColumnName("ATAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.AtaxProfitRatioNpv5).HasColumnName("ATAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.AtaxRor).HasColumnName("ATAX_ROR");

//                entity.Property(e => e.BtaxNetRevenue).HasColumnName("BTAX_NET_REVENUE");

//                entity.Property(e => e.BtaxNpv1).HasColumnName("BTAX_NPV1");

//                entity.Property(e => e.BtaxNpv2).HasColumnName("BTAX_NPV2");

//                entity.Property(e => e.BtaxNpv3).HasColumnName("BTAX_NPV3");

//                entity.Property(e => e.BtaxNpv4).HasColumnName("BTAX_NPV4");

//                entity.Property(e => e.BtaxNpv5).HasColumnName("BTAX_NPV5");

//                entity.Property(e => e.BtaxPayout).HasColumnName("BTAX_PAYOUT");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("BTAX_PROFIT_RATIO");

//                entity.Property(e => e.BtaxProfitRatioNpv1).HasColumnName("BTAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.BtaxProfitRatioNpv2).HasColumnName("BTAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.BtaxProfitRatioNpv3).HasColumnName("BTAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.BtaxProfitRatioNpv4).HasColumnName("BTAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.BtaxProfitRatioNpv5).HasColumnName("BTAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.BtaxRor).HasColumnName("BTAX_ROR");

//                entity.Property(e => e.CalculationApplyEconLimit).HasColumnName("CALCULATION_APPLY_ECON_LIMIT");

//                entity.Property(e => e.CalculationCoo).HasColumnName("CALCULATION_COO");

//                entity.Property(e => e.CalculationCos).HasColumnName("CALCULATION_COS");

//                entity.Property(e => e.CalculationType).HasColumnName("CALCULATION_TYPE");

//                entity.Property(e => e.CapCoshareBoe).HasColumnName("CAP_COSHARE_BOE");

//                entity.Property(e => e.CapNetBoe).HasColumnName("CAP_NET_BOE");

//                entity.Property(e => e.CapWiBoe).HasColumnName("CAP_WI_BOE");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EntityCurrencyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_CURRENCY_ID");

//                entity.Property(e => e.EntityList)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_LIST");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("ENTITY_NAME");

//                entity.Property(e => e.ExplorerTypeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("EXPLORER_TYPE_ID");

//                entity.Property(e => e.ForecastEnd).HasColumnName("FORECAST_END");

//                entity.Property(e => e.ForecastStart).HasColumnName("FORECAST_START");

//                entity.Property(e => e.HasReportValue).HasColumnName("HAS_REPORT_VALUE");

//                entity.Property(e => e.HierarchyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("HIERARCHY_ID");

//                entity.Property(e => e.InitialGenWi).HasColumnName("INITIAL_GEN_WI");

//                entity.Property(e => e.InputPrimaryProduct).HasColumnName("INPUT_PRIMARY_PRODUCT");

//                entity.Property(e => e.OpCoshareBoe).HasColumnName("OP_COSHARE_BOE");

//                entity.Property(e => e.OpNetBoe).HasColumnName("OP_NET_BOE");

//                entity.Property(e => e.OpWiBoe).HasColumnName("OP_WI_BOE");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.ProductionStart).HasColumnName("PRODUCTION_START");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.RegimeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("REGIME_ID");

//                entity.Property(e => e.ResultDelta).HasColumnName("RESULT_DELTA");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.TaxCalculationId)
//                    .HasMaxLength(50)
//                    .HasColumnName("TAX_CALCULATION_ID");

//                entity.Property(e => e.TaxEnd).HasColumnName("TAX_END");

//                entity.Property(e => e.TaxPaid).HasColumnName("TAX_PAID");

//                entity.Property(e => e.TerminationDate).HasColumnName("TERMINATION_DATE");

//                entity.Property(e => e.UserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_ID");
//            });

//            modelBuilder.Entity<TRptCsxLatestWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_rpt_csx_latest_working_interest", "stage");

//                entity.Property(e => e.CsxCostCentre)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("csx_cost_centre");

//                entity.Property(e => e.CsxOwnershipPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("csx_ownership_percent");

//                entity.Property(e => e.CsxTotalWellWrkngIntrst)
//                    .HasColumnType("numeric(38, 8)")
//                    .HasColumnName("csx_total_well_wrkng_intrst");

//                entity.Property(e => e.DoiType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type")
//                    .IsFixedLength();

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_number")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_status")
//                    .IsFixedLength();

//                entity.Property(e => e.FormattedPartnerId).HasColumnName("formatted_partner_id");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("licence_number");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.NetOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("net_owner");

//                entity.Property(e => e.OriginalTerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("original_termination_date");

//                entity.Property(e => e.PartnerId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_id")
//                    .IsFixedLength();

//                entity.Property(e => e.PartnerType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_type")
//                    .IsFixedLength();

//                entity.Property(e => e.PctRnk).HasColumnName("pct_rnk");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<TRptCsxWellInsuranceElection>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_rpt_csx_well_insurance_election", "stage");

//                entity.Property(e => e.ContractFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("contract_file_number");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_number");

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_status");

//                entity.Property(e => e.InsuranceElection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("insurance_election");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("licence_number");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WellUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_uwi");
//            });

//            modelBuilder.Entity<TRptRoyaltyControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_rpt_royalty_control_groups", "STAGE_METRIX");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("production_date");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("royalty_obligation_sys_id");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("well_tract_sys_id");
//            });

//            modelBuilder.Entity<TRptValnavCapitalActual>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_rpt_valnav_capital_actuals", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.ApprovedEstimate).HasColumnName("approved_estimate");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostDate)
//                    .HasColumnType("date")
//                    .HasColumnName("cost_date");

//                entity.Property(e => e.CostType)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_type");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("date")
//                    .HasColumnName("end_date");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.IncurredTotal).HasColumnName("incurred_total");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.RevisedEstimate).HasColumnName("revised_estimate");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Value).HasColumnName("value");
//            });

//            modelBuilder.Entity<TRunJobLog>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_Run_Job_Log", "OLAPControl");

//                entity.Property(e => e.Cube).HasMaxLength(100);

//                entity.Property(e => e.Data01)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_01");

//                entity.Property(e => e.Data02)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_02");

//                entity.Property(e => e.Data03)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_03");

//                entity.Property(e => e.DataValue01).HasColumnName("Data_Value_01");

//                entity.Property(e => e.DataValue02).HasColumnName("Data_Value_02");

//                entity.Property(e => e.DataValue03).HasColumnName("Data_Value_03");

//                entity.Property(e => e.DeletedCount).HasColumnName("Deleted_count");

//                entity.Property(e => e.Description).HasMaxLength(500);

//                entity.Property(e => e.DurationSec).HasColumnName("Duration_sec");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date");

//                entity.Property(e => e.EndDateCalc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date_calc");

//                entity.Property(e => e.ExceptionMsg).HasMaxLength(1000);

//                entity.Property(e => e.FailedTask).HasMaxLength(100);

//                entity.Property(e => e.Information).HasMaxLength(1000);

//                entity.Property(e => e.InsertedCount).HasColumnName("Inserted_count");

//                entity.Property(e => e.Job).HasMaxLength(100);

//                entity.Property(e => e.JobNotificationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Job_Notification_Date");

//                entity.Property(e => e.JobNotificationStatus)
//                    .HasMaxLength(100)
//                    .HasColumnName("Job_Notification_Status");

//                entity.Property(e => e.Message).HasMaxLength(1000);

//                entity.Property(e => e.Package).HasMaxLength(100);

//                entity.Property(e => e.ParentRunId).HasColumnName("ParentRunID");

//                entity.Property(e => e.QueueRunId).HasColumnName("QueueRunID");

//                entity.Property(e => e.RunId).HasColumnName("RunID");

//                entity.Property(e => e.RunJobKey)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("Run_Job_key");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Start_date");

//                entity.Property(e => e.Status).HasMaxLength(50);

//                entity.Property(e => e.StatusCode).HasColumnName("Status_Code");

//                entity.Property(e => e.Task).HasMaxLength(100);

//                entity.Property(e => e.UpdatedCount).HasColumnName("Updated_count");

//                entity.Property(e => e.Username).HasMaxLength(100);
//            });

//            modelBuilder.Entity<TRunJobLog20210330>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_Run_Job_Log_20210330", "OLAPControl");

//                entity.Property(e => e.Cube).HasMaxLength(100);

//                entity.Property(e => e.Data01)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_01");

//                entity.Property(e => e.Data02)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_02");

//                entity.Property(e => e.Data03)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_03");

//                entity.Property(e => e.DataValue01).HasColumnName("Data_Value_01");

//                entity.Property(e => e.DataValue02).HasColumnName("Data_Value_02");

//                entity.Property(e => e.DataValue03).HasColumnName("Data_Value_03");

//                entity.Property(e => e.DeletedCount).HasColumnName("Deleted_count");

//                entity.Property(e => e.Description).HasMaxLength(500);

//                entity.Property(e => e.DurationSec).HasColumnName("Duration_sec");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date");

//                entity.Property(e => e.EndDateCalc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date_calc");

//                entity.Property(e => e.ExceptionMsg).HasMaxLength(1000);

//                entity.Property(e => e.FailedTask).HasMaxLength(100);

//                entity.Property(e => e.Information).HasMaxLength(1000);

//                entity.Property(e => e.InsertedCount).HasColumnName("Inserted_count");

//                entity.Property(e => e.Job).HasMaxLength(100);

//                entity.Property(e => e.JobNotificationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Job_Notification_Date");

//                entity.Property(e => e.JobNotificationStatus)
//                    .HasMaxLength(100)
//                    .HasColumnName("Job_Notification_Status");

//                entity.Property(e => e.Message).HasMaxLength(1000);

//                entity.Property(e => e.Package).HasMaxLength(100);

//                entity.Property(e => e.ParentRunId).HasColumnName("ParentRunID");

//                entity.Property(e => e.QueueRunId).HasColumnName("QueueRunID");

//                entity.Property(e => e.RunId).HasColumnName("RunID");

//                entity.Property(e => e.RunJobKey)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("Run_Job_key");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Start_date");

//                entity.Property(e => e.Status).HasMaxLength(50);

//                entity.Property(e => e.StatusCode).HasColumnName("Status_Code");

//                entity.Property(e => e.Task).HasMaxLength(100);

//                entity.Property(e => e.UpdatedCount).HasColumnName("Updated_count");

//                entity.Property(e => e.Username).HasMaxLength(100);
//            });

//            modelBuilder.Entity<TRunStatusCode>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_Run_Status_Codes", "OLAPControl");

//                entity.Property(e => e.Description).HasMaxLength(500);

//                entity.Property(e => e.Status).HasMaxLength(50);

//                entity.Property(e => e.StatusCode).HasColumnName("Status_Code");
//            });

//            modelBuilder.Entity<TRunTaskLog>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_Run_Task_Log", "OLAPControl");

//                entity.Property(e => e.Cube).HasMaxLength(100);

//                entity.Property(e => e.Data01)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_01");

//                entity.Property(e => e.Data02)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_02");

//                entity.Property(e => e.Data03)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_03");

//                entity.Property(e => e.DataValue01).HasColumnName("Data_Value_01");

//                entity.Property(e => e.DataValue02).HasColumnName("Data_Value_02");

//                entity.Property(e => e.DataValue03).HasColumnName("Data_Value_03");

//                entity.Property(e => e.DeletedCount).HasColumnName("Deleted_count");

//                entity.Property(e => e.Description).HasMaxLength(500);

//                entity.Property(e => e.DurationSec).HasColumnName("Duration_sec");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date");

//                entity.Property(e => e.EndDateCalc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date_calc");

//                entity.Property(e => e.ExceptionMsg).HasMaxLength(1000);

//                entity.Property(e => e.FailedTask).HasMaxLength(100);

//                entity.Property(e => e.Information).HasMaxLength(1000);

//                entity.Property(e => e.InsertedCount).HasColumnName("Inserted_count");

//                entity.Property(e => e.Job).HasMaxLength(100);

//                entity.Property(e => e.Message).HasMaxLength(1000);

//                entity.Property(e => e.Package).HasMaxLength(100);

//                entity.Property(e => e.RunId).HasColumnName("RunID");

//                entity.Property(e => e.RunTaskKey)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("Run_Task_key");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Start_date");

//                entity.Property(e => e.Status).HasMaxLength(50);

//                entity.Property(e => e.StatusCode).HasColumnName("Status_Code");

//                entity.Property(e => e.Task).HasMaxLength(100);

//                entity.Property(e => e.UpdatedCount).HasColumnName("Updated_count");

//                entity.Property(e => e.Username).HasMaxLength(100);
//            });

//            modelBuilder.Entity<TRunTaskLog20210330>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_Run_Task_Log_20210330", "OLAPControl");

//                entity.Property(e => e.Cube).HasMaxLength(100);

//                entity.Property(e => e.Data01)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_01");

//                entity.Property(e => e.Data02)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_02");

//                entity.Property(e => e.Data03)
//                    .HasMaxLength(100)
//                    .HasColumnName("Data_03");

//                entity.Property(e => e.DataValue01).HasColumnName("Data_Value_01");

//                entity.Property(e => e.DataValue02).HasColumnName("Data_Value_02");

//                entity.Property(e => e.DataValue03).HasColumnName("Data_Value_03");

//                entity.Property(e => e.DeletedCount).HasColumnName("Deleted_count");

//                entity.Property(e => e.Description).HasMaxLength(500);

//                entity.Property(e => e.DurationSec).HasColumnName("Duration_sec");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date");

//                entity.Property(e => e.EndDateCalc)
//                    .HasColumnType("datetime")
//                    .HasColumnName("End_date_calc");

//                entity.Property(e => e.ExceptionMsg).HasMaxLength(1000);

//                entity.Property(e => e.FailedTask).HasMaxLength(100);

//                entity.Property(e => e.Information).HasMaxLength(1000);

//                entity.Property(e => e.InsertedCount).HasColumnName("Inserted_count");

//                entity.Property(e => e.Job).HasMaxLength(100);

//                entity.Property(e => e.Message).HasMaxLength(1000);

//                entity.Property(e => e.Package).HasMaxLength(100);

//                entity.Property(e => e.RunId).HasColumnName("RunID");

//                entity.Property(e => e.RunTaskKey)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("Run_Task_key");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Start_date");

//                entity.Property(e => e.Status).HasMaxLength(50);

//                entity.Property(e => e.StatusCode).HasColumnName("Status_Code");

//                entity.Property(e => e.Task).HasMaxLength(100);

//                entity.Property(e => e.UpdatedCount).HasColumnName("Updated_count");

//                entity.Property(e => e.Username).HasMaxLength(100);
//            });

//            modelBuilder.Entity<TSiteviewSvtSvjob>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_siteview_svt_svjob", "stage");

//                entity.Property(e => e.Chartofaccounts)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("chartofaccounts");

//                entity.Property(e => e.Contact1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contact1");

//                entity.Property(e => e.Contact2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contact2");

//                entity.Property(e => e.Currencycode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("currencycode");

//                entity.Property(e => e.Currencyexchangerate).HasColumnName("currencyexchangerate");

//                entity.Property(e => e.Daysest1).HasColumnName("daysest1");

//                entity.Property(e => e.Daysest2).HasColumnName("daysest2");

//                entity.Property(e => e.Daysest3).HasColumnName("daysest3");

//                entity.Property(e => e.Daysest4).HasColumnName("daysest4");

//                entity.Property(e => e.Desest1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desest1");

//                entity.Property(e => e.Desest2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desest2");

//                entity.Property(e => e.Desest3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desest3");

//                entity.Property(e => e.Desest4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("desest4");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmplanend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmplanend");

//                entity.Property(e => e.Dttmplanstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmplanstart");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idsite)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idsite");

//                entity.Property(e => e.Jobrefno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobrefno");

//                entity.Property(e => e.Mitigationplan)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("mitigationplan");

//                entity.Property(e => e.Objective)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("objective");

//                entity.Property(e => e.Projectname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("projectname");

//                entity.Property(e => e.Status1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status1");

//                entity.Property(e => e.Status2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status2");

//                entity.Property(e => e.Summary)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summary");

//                entity.Property(e => e.Svestactive).HasColumnName("svestactive");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");
//            });

//            modelBuilder.Entity<TSiteviewSvtSvjobafe>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_siteview_svt_svjobafe", "stage");

//                entity.Property(e => e.Afenumbersupp)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("afenumbersupp");

//                entity.Property(e => e.Allocation).HasColumnName("allocation");

//                entity.Property(e => e.Approvedby)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("approvedby");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Costcenternum)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenternum");

//                entity.Property(e => e.Dttmafe)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmafe");

//                entity.Property(e => e.Dttmapproved)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmapproved");

//                entity.Property(e => e.Dttmexpired)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmexpired");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecloc)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecloc");

//                entity.Property(e => e.Idrecloctk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecloctk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecwelljob)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwelljob");

//                entity.Property(e => e.Idrecwelljobtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwelljobtk");

//                entity.Property(e => e.Idsite)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idsite");

//                entity.Property(e => e.Projectname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("projectname");

//                entity.Property(e => e.Projectrefnumber)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("projectrefnumber");

//                entity.Property(e => e.Refno)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("refno");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Wi).HasColumnName("wi");
//            });

//            modelBuilder.Entity<TSiteviewSvtSvjobreport>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_siteview_svt_svjobreport", "stage");

//                entity.Property(e => e.Activitystatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("activitystatus");

//                entity.Property(e => e.Condlease)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condlease");

//                entity.Property(e => e.Condroad)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condroad");

//                entity.Property(e => e.Condwave)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condwave");

//                entity.Property(e => e.Condweather)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condweather");

//                entity.Property(e => e.Condwind)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condwind");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Groundcond)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("groundcond");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idreccontact)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccontact");

//                entity.Property(e => e.Idreccontacttk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccontacttk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idsite)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idsite");

//                entity.Property(e => e.Plannxtactivity)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("plannxtactivity");

//                entity.Property(e => e.Summary)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summary");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Temphigh).HasColumnName("temphigh");

//                entity.Property(e => e.Templow).HasColumnName("templow");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");
//            });

//            modelBuilder.Entity<TSiteviewSvtSvjobreportcost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_siteview_svt_svjobreportcost", "stage");

//                entity.Property(e => e.Authorized)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("authorized");

//                entity.Property(e => e.Code1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code1");

//                entity.Property(e => e.Code2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code2");

//                entity.Property(e => e.Code3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code3");

//                entity.Property(e => e.Code4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code4");

//                entity.Property(e => e.Code5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code5");

//                entity.Property(e => e.Code6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code6");

//                entity.Property(e => e.Codedes)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("codedes");

//                entity.Property(e => e.Cost).HasColumnName("cost");

//                entity.Property(e => e.Dttminvoicerec)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttminvoicerec");

//                entity.Property(e => e.Dttminvoicesent)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttminvoicesent");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecafecustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustom");

//                entity.Property(e => e.Idrecafecustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustomtk");

//                entity.Property(e => e.Idreccommit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccommit");

//                entity.Property(e => e.Idreccommittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreccommittk");

//                entity.Property(e => e.Idrecitem)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitem");

//                entity.Property(e => e.Idrecitemtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecitemtk");

//                entity.Property(e => e.Idrecmetricsdetail)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetricsdetail");

//                entity.Property(e => e.Idrecmetricsdetailtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetricsdetailtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecplandetails)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecplandetails");

//                entity.Property(e => e.Idrecplandetailstk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecplandetailstk");

//                entity.Property(e => e.Idsite)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idsite");

//                entity.Property(e => e.Invoiceno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invoiceno");

//                entity.Property(e => e.Note)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("note");

//                entity.Property(e => e.Pono)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pono");

//                entity.Property(e => e.Refnoop)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refnoop");

//                entity.Property(e => e.Sn)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sn");

//                entity.Property(e => e.Syscarryfwdp).HasColumnName("syscarryfwdp");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Ticketno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ticketno");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");

//                entity.Property(e => e.Workorderno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("workorderno");
//            });

//            modelBuilder.Entity<TSiteviewSvtSvsiteheader>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_siteview_svt_svsiteheader", "stage");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Contactconstruct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactconstruct");

//                entity.Property(e => e.Contactdrillwaste)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactdrillwaste");

//                entity.Property(e => e.Contactengineer)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactengineer");

//                entity.Property(e => e.Contactenv)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactenv");

//                entity.Property(e => e.Contactfacility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactfacility");

//                entity.Property(e => e.Contactland)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactland");

//                entity.Property(e => e.Contactother1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactother1");

//                entity.Property(e => e.Contactother2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactother2");

//                entity.Property(e => e.Contactpipeline)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactpipeline");

//                entity.Property(e => e.Contactreclaim)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactreclaim");

//                entity.Property(e => e.Contactsurvey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contactsurvey");

//                entity.Property(e => e.Corplevel1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corplevel1");

//                entity.Property(e => e.Corplevel2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corplevel2");

//                entity.Property(e => e.Corplevel3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corplevel3");

//                entity.Property(e => e.Corplevel4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corplevel4");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("country");

//                entity.Property(e => e.County)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("county");

//                entity.Property(e => e.Fieldcode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldcode");

//                entity.Property(e => e.Fieldname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldname");

//                entity.Property(e => e.Fieldoffice)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldoffice");

//                entity.Property(e => e.Idreclocprimary)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idreclocprimary");

//                entity.Property(e => e.Idreclocprimarytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idreclocprimarytk");

//                entity.Property(e => e.Idsite)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idsite");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Legalsurveyprimarysort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurveyprimarysort");

//                entity.Property(e => e.Localtimezone).HasColumnName("localtimezone");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Operatorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operatorcode");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.Problemdes)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("problemdes");

//                entity.Property(e => e.Problemflag).HasColumnName("problemflag");

//                entity.Property(e => e.Ranking1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ranking1");

//                entity.Property(e => e.Ranking2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ranking2");

//                entity.Property(e => e.Siteid1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("siteid1");

//                entity.Property(e => e.Siteid2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("siteid2");

//                entity.Property(e => e.Siteid3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("siteid3");

//                entity.Property(e => e.Sitename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sitename");

//                entity.Property(e => e.Stateprov)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("stateprov");

//                entity.Property(e => e.Status1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status1");

//                entity.Property(e => e.Status2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status2");

//                entity.Property(e => e.Surfacefileno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surfacefileno");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockdatemaster)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdatemaster");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoddatedb)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddatedb");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysmoduserdb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduserdb");

//                entity.Property(e => e.Syssecuritytyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syssecuritytyp");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Userboolean3).HasColumnName("userboolean3");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");
//            });

//            modelBuilder.Entity<TSourceCostEstimatesAfenav>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_source_cost_estimates_afenav", "stage");

//                entity.Property(e => e.AfeDocumentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_document_id");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.Afenumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afenumber");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.AmountDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("amount_date");

//                entity.Property(e => e.AmountType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("amount_type");

//                entity.Property(e => e.LegacyAfeid)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("legacy_afeid");

//                entity.Property(e => e.NetGrs)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("net_grs");
//            });

//            modelBuilder.Entity<TSourceCostEstimatesQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_source_cost_estimates_qbyte", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.GrossEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("gross_est");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.NetEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("net_est");

//                entity.Property(e => e.OrigGrossEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("orig_gross_est");

//                entity.Property(e => e.OrigNetEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("orig_net_est");

//                entity.Property(e => e.SuppGrossEst)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("supp_gross_est");

//                entity.Property(e => e.SuppNetEst)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("supp_net_est");
//            });

//            modelBuilder.Entity<TSourceCostEstimatesSiteview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_source_cost_estimates_siteview", "stage");

//                entity.Property(e => e.AcctDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acct_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.Costrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("costrec");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_flag");

//                entity.Property(e => e.IsValidAfe)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_afe");

//                entity.Property(e => e.IsValidQbyteMajor)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_qbyte_major");

//                entity.Property(e => e.Jobrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("jobrec");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("date")
//                    .HasColumnName("start_date");

//                entity.Property(e => e.SvAfeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sv_afe_type");

//                entity.Property(e => e.TimePeriod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("time_period");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");
//            });

//            modelBuilder.Entity<TSourceCostEstimatesWellview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_source_cost_estimates_wellview", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeSupp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_supp");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_flag");

//                entity.Property(e => e.IsValidAfe)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_afe");

//                entity.Property(e => e.IsValidQbyteMajor)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_qbyte_major");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TimePeriod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("time_period");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");

//                entity.Property(e => e.WvAfeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("wv_afe_type");
//            });

//            modelBuilder.Entity<TStgAccumapVolumesByMonth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_accumap_volumes_by_month", "stage_ihs");

//                entity.Property(e => e.Apr)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("apr");

//                entity.Property(e => e.Aug)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("aug");

//                entity.Property(e => e.Dec)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("dec");

//                entity.Property(e => e.Feb)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("feb");

//                entity.Property(e => e.Jan)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("jan");

//                entity.Property(e => e.Jul)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("jul");

//                entity.Property(e => e.Jun)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("jun");

//                entity.Property(e => e.Mar)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("mar");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("may");

//                entity.Property(e => e.Nov)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("nov");

//                entity.Property(e => e.Oct)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("oct");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("product_type");

//                entity.Property(e => e.Sep)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("sep");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("year");
//            });

//            modelBuilder.Entity<TStgAvocetMvFvSite>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_avocet_mv_fv_site", "stage");

//                entity.Property(e => e.ChangeCounter)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("CHANGE_COUNTER");

//                entity.Property(e => e.CorporateParentId)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("CORPORATE_PARENT_ID");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.Datapoint1).HasColumnName("DATAPOINT_1");

//                entity.Property(e => e.Datapoint10)
//                    .HasMaxLength(768)
//                    .IsUnicode(false)
//                    .HasColumnName("DATAPOINT_10");

//                entity.Property(e => e.Datapoint2).HasColumnName("DATAPOINT_2");

//                entity.Property(e => e.Datapoint3).HasColumnName("DATAPOINT_3");

//                entity.Property(e => e.Datapoint4).HasColumnName("DATAPOINT_4");

//                entity.Property(e => e.Datapoint5).HasColumnName("DATAPOINT_5");

//                entity.Property(e => e.Datapoint6)
//                    .HasMaxLength(768)
//                    .IsUnicode(false)
//                    .HasColumnName("DATAPOINT_6");

//                entity.Property(e => e.Datapoint7)
//                    .HasMaxLength(768)
//                    .IsUnicode(false)
//                    .HasColumnName("DATAPOINT_7");

//                entity.Property(e => e.Datapoint8)
//                    .HasMaxLength(768)
//                    .IsUnicode(false)
//                    .HasColumnName("DATAPOINT_8");

//                entity.Property(e => e.Datapoint9)
//                    .HasMaxLength(768)
//                    .IsUnicode(false)
//                    .HasColumnName("DATAPOINT_9");

//                entity.Property(e => e.DistrictId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT_ID");

//                entity.Property(e => e.Elevation).HasColumnName("ELEVATION");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("END_DATE");

//                entity.Property(e => e.FieldId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_ID");

//                entity.Property(e => e.FormattedLocation)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("FORMATTED_LOCATION");

//                entity.Property(e => e.FormattedSecondaryLocation)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("FORMATTED_SECONDARY_LOCATION");

//                entity.Property(e => e.GasStreamId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("GAS_STREAM_ID");

//                entity.Property(e => e.Latitude).HasColumnName("LATITUDE");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION");

//                entity.Property(e => e.Longitude).HasColumnName("LONGITUDE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NonOperated)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("NON_OPERATED");

//                entity.Property(e => e.Notes)
//                    .HasMaxLength(765)
//                    .IsUnicode(false)
//                    .HasColumnName("NOTES");

//                entity.Property(e => e.OwnerGuid)
//                    .HasMaxLength(38)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_GUID");

//                entity.Property(e => e.PaCode)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_CODE");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("RANGE");

//                entity.Property(e => e.SecondaryLocation)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("SECONDARY_LOCATION");

//                entity.Property(e => e.SecondaryPaCode)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("SECONDARY_PA_CODE");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("SECTION");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("SITE_ID");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("START_DATE");

//                entity.Property(e => e.Status)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("STATUS");

//                entity.Property(e => e.Subsection)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBSECTION");

//                entity.Property(e => e.TagId)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("TAG_ID");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("TOWNSHIP");

//                entity.Property(e => e.Type)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("TYPE");
//            });

//            modelBuilder.Entity<TStgCorporateModelBudget1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_CorporateModelBudget1", "Mktg_ReportLoads");

//                entity.Property(e => e.BoeD)
//                    .HasMaxLength(255)
//                    .HasColumnName("BOE/d");

//                entity.Property(e => e.BudgetDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Budget Date");

//                entity.Property(e => e.BudgetName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Budget Name");

//                entity.Property(e => e.DeliveryMonth)
//                    .HasMaxLength(255)
//                    .HasColumnName("Delivery Month");

//                entity.Property(e => e.District).HasMaxLength(255);

//                entity.Property(e => e.McfD).HasColumnName("mcf/d");

//                entity.Property(e => e.Pipeline).HasMaxLength(255);

//                entity.Property(e => e.Product).HasMaxLength(255);

//                entity.Property(e => e.Timeofload)
//                    .HasColumnType("smalldatetime")
//                    .HasColumnName("timeofload");
//            });

//            modelBuilder.Entity<TStgCorporateModelBudgetConversionFactor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_CorporateModelBudgetConversionFactor", "Mktg_ReportLoads");

//                entity.Property(e => e.BnpTotalCfBtuScf).HasColumnName("BNP Total CF (btu/scf)");

//                entity.Property(e => e.BudgetDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Budget Date");

//                entity.Property(e => e.BudgetName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Budget Name");

//                entity.Property(e => e.DeliveryMonth)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Delivery Month");
//            });

//            modelBuilder.Entity<TStgFieldticket>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_fieldtickets", "openinvoice");

//                entity.Property(e => e.ApproverName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("approver_name");

//                entity.Property(e => e.BuyerDuns)
//                    .HasMaxLength(500)
//                    .HasColumnName("buyer_DUNS");

//                entity.Property(e => e.BuyerName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("buyer_name");

//                entity.Property(e => e.CadDollars)
//                    .HasMaxLength(500)
//                    .HasColumnName("cad_dollars");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(4000)
//                    .HasColumnName("description");

//                entity.Property(e => e.Driver)
//                    .HasMaxLength(1000)
//                    .HasColumnName("driver");

//                entity.Property(e => e.InvoicedStatus)
//                    .HasMaxLength(1000)
//                    .HasColumnName("invoiced_status");

//                entity.Property(e => e.ItemId)
//                    .HasMaxLength(100)
//                    .HasColumnName("item_id");

//                entity.Property(e => e.LastActionDatetime)
//                    .HasMaxLength(100)
//                    .HasColumnName("last_action_datetime");

//                entity.Property(e => e.LineitemDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_description");

//                entity.Property(e => e.LineitemNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("lineitem_number");

//                entity.Property(e => e.LineitemPayload)
//                    .HasMaxLength(1000)
//                    .HasColumnName("lineitem_payload");

//                entity.Property(e => e.LineitemProductServiceCode)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_product_service_code");

//                entity.Property(e => e.LineitemProductServiceId)
//                    .HasMaxLength(500)
//                    .HasColumnName("lineitem_product_service_id");

//                entity.Property(e => e.M3Volumes)
//                    .HasMaxLength(500)
//                    .HasColumnName("m3_volumes");

//                entity.Property(e => e.Major)
//                    .HasMaxLength(100)
//                    .HasColumnName("major");

//                entity.Property(e => e.MajorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("major_description");

//                entity.Property(e => e.Minor)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor");

//                entity.Property(e => e.MinorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("minor_description");

//                entity.Property(e => e.OrderedbyUserid)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_userid");

//                entity.Property(e => e.OrderedbyUsername)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_username");

//                entity.Property(e => e.ReferencingInvoiceNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("referencing_invoice_number");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(100)
//                    .HasColumnName("service_date");

//                entity.Property(e => e.SupplierName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_name");

//                entity.Property(e => e.SupplierNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("supplier_number");

//                entity.Property(e => e.SupplierSitename)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_sitename");

//                entity.Property(e => e.TicketNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_number");

//                entity.Property(e => e.TicketStatus)
//                    .HasMaxLength(500)
//                    .HasColumnName("ticket_status");

//                entity.Property(e => e.TicketType)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_type");

//                entity.Property(e => e.TotalAmount)
//                    .HasMaxLength(100)
//                    .HasColumnName("total_amount");

//                entity.Property(e => e.TruckNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("truckNumber");
//            });

//            modelBuilder.Entity<TStgFieldticketsJson>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_fieldtickets_JSON", "openinvoice");

//                entity.Property(e => e.ReceiptsJson).HasColumnName("receipts_json");
//            });

//            modelBuilder.Entity<TStgFieldticketsJson20220413>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_fieldtickets_JSON_2022_04_13", "openinvoice");

//                entity.Property(e => e.ReceiptsJson).HasColumnName("receipts_json");
//            });

//            modelBuilder.Entity<TStgFieldticketsJson20220418All>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_fieldtickets_JSON_2022_04_18_ALL", "openinvoice");

//                entity.Property(e => e.ReceiptsJson).HasColumnName("receipts_json");
//            });

//            modelBuilder.Entity<TStgFinanceBudgetFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_finance_budget_facts", "stage");

//                entity.Property(e => e.April)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("APRIL");

//                entity.Property(e => e.August)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("AUGUST");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.December)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("DECEMBER");

//                entity.Property(e => e.February)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("FEBRUARY");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET_FLAG");

//                entity.Property(e => e.January)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JANUARY");

//                entity.Property(e => e.July)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JULY");

//                entity.Property(e => e.June)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JUNE");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.March)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MARCH");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MAY");

//                entity.Property(e => e.Measure)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("MEASURE");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.November)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("NOVEMBER");

//                entity.Property(e => e.October)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("OCTOBER");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.September)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("SEPTEMBER");
//            });

//            modelBuilder.Entity<TStgFocusArea>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_focus_area", "stage");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FOCUS_AREA_FLAG");
//            });

//            modelBuilder.Entity<TStgIhsVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_ihs_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("cond");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("gas");

//                entity.Property(e => e.Month)
//                    .HasMaxLength(128)
//                    .HasColumnName("month");

//                entity.Property(e => e.Oil)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("oil");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("water");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("year");
//            });

//            modelBuilder.Entity<TStgIhsVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_ihs_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("cond");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("gas");

//                entity.Property(e => e.Month)
//                    .HasMaxLength(128)
//                    .HasColumnName("month");

//                entity.Property(e => e.Oil)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("oil");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(14, 4)")
//                    .HasColumnName("water");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("year");
//            });

//            modelBuilder.Entity<TStgInvoiceEnergylinkVoucher>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_invoice_energylink_vouchers", "openinvoice");

//                entity.Property(e => e.Filename)
//                    .HasMaxLength(100)
//                    .HasColumnName("filename");

//                entity.Property(e => e.Prop0)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_0");

//                entity.Property(e => e.Prop1)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_1");

//                entity.Property(e => e.Prop10)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_10");

//                entity.Property(e => e.Prop11)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_11");

//                entity.Property(e => e.Prop12)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_12");

//                entity.Property(e => e.Prop13)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_13");

//                entity.Property(e => e.Prop14)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_14");

//                entity.Property(e => e.Prop15)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_15");

//                entity.Property(e => e.Prop16)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_16");

//                entity.Property(e => e.Prop17)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_17");

//                entity.Property(e => e.Prop18)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_18");

//                entity.Property(e => e.Prop2)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_2");

//                entity.Property(e => e.Prop3)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_3");

//                entity.Property(e => e.Prop4)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_4");

//                entity.Property(e => e.Prop5)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_5");

//                entity.Property(e => e.Prop6)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_6");

//                entity.Property(e => e.Prop7)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_7");

//                entity.Property(e => e.Prop8)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_8");

//                entity.Property(e => e.Prop9)
//                    .HasMaxLength(100)
//                    .HasColumnName("Prop_9");
//            });

//            modelBuilder.Entity<TStgMarketingAllFlownetHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_marketing_ALL_flownet_hierarchy", "datamart_marketing");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesDispositionPointIdrec)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point_idrec");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TStgMarketingFlownetHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_marketing_flownet_hierarchy", "datamart_marketing");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesDispositionPointIdrec)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point_idrec");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TStgMetirxParnterOpBatteryTxn>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metirx_parnter_op_battery_txns", "STAGE_METRIX");

//                entity.Property(e => e.AllocationBasisCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_BASIS_CODE");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.CalculatedGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_GROSS_GIGAJOULES");

//                entity.Property(e => e.CalculatedGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_GROSS_VALUE");

//                entity.Property(e => e.CalculatedGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_GROSS_VOLUME");

//                entity.Property(e => e.CalculatedNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_NET_GIGAJOULES");

//                entity.Property(e => e.CalculatedNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_NET_VALUE");

//                entity.Property(e => e.CalculatedNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_NET_VOLUME");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestinationDeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DESTINATION_DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DestinationFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DESTINATION_FACILITY_SYS_ID");

//                entity.Property(e => e.EnteredGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_GROSS_GIGAJOULES");

//                entity.Property(e => e.EnteredGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_GROSS_VALUE");

//                entity.Property(e => e.EnteredGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_GROSS_VOLUME");

//                entity.Property(e => e.EnteredNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_NET_GIGAJOULES");

//                entity.Property(e => e.EnteredNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_NET_VALUE");

//                entity.Property(e => e.EnteredNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_NET_VOLUME");

//                entity.Property(e => e.EnteredPrice)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("ENTERED_PRICE");

//                entity.Property(e => e.EnteredValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_VALUE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PricingCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProducingHours)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("PRODUCING_HOURS");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSequenceNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.TransactionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSACTION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellheadGasProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_GAS_PRODUCTION");

//                entity.Property(e => e.WellheadOilProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_OIL_PRODUCTION");
//            });

//            modelBuilder.Entity<TStgMetirxParnterOpBatteryTxnsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metirx_parnter_op_battery_txns_incr", "STAGE_METRIX");

//                entity.Property(e => e.AllocationBasisCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_BASIS_CODE");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.CalculatedGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_GROSS_GIGAJOULES");

//                entity.Property(e => e.CalculatedGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_GROSS_VALUE");

//                entity.Property(e => e.CalculatedGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_GROSS_VOLUME");

//                entity.Property(e => e.CalculatedNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CALCULATED_NET_GIGAJOULES");

//                entity.Property(e => e.CalculatedNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CALCULATED_NET_VALUE");

//                entity.Property(e => e.CalculatedNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CALCULATED_NET_VOLUME");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestinationDeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DESTINATION_DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DestinationFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("DESTINATION_FACILITY_SYS_ID");

//                entity.Property(e => e.EnteredGrossGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_GROSS_GIGAJOULES");

//                entity.Property(e => e.EnteredGrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_GROSS_VALUE");

//                entity.Property(e => e.EnteredGrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_GROSS_VOLUME");

//                entity.Property(e => e.EnteredNetGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ENTERED_NET_GIGAJOULES");

//                entity.Property(e => e.EnteredNetValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_NET_VALUE");

//                entity.Property(e => e.EnteredNetVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ENTERED_NET_VOLUME");

//                entity.Property(e => e.EnteredPrice)
//                    .HasColumnType("numeric(12, 8)")
//                    .HasColumnName("ENTERED_PRICE");

//                entity.Property(e => e.EnteredValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ENTERED_VALUE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.PricingCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProducingHours)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("PRODUCING_HOURS");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSequenceNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.TransactionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TRANSACTION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");

//                entity.Property(e => e.WellheadGasProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_GAS_PRODUCTION");

//                entity.Property(e => e.WellheadOilProduction)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("WELLHEAD_OIL_PRODUCTION");
//            });

//            modelBuilder.Entity<TStgMetrixFacilityCharge>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_facility_charges", "STAGE_METRIX");

//                entity.Property(e => e.ActiveFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_FLAG");

//                entity.Property(e => e.BookAtUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BOOK_AT_UNIT");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_TYPE_CODE");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EntitySelection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_SELECTION");

//                entity.Property(e => e.EntitySelectionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_SELECTION_TYPE");

//                entity.Property(e => e.ExpenseDoiExtension)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("EXPENSE_DOI_EXTENSION");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_CHARGE_FORMULA_ID");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FromToSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FROM_TO_SELECTION");

//                entity.Property(e => e.GstApplicable)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_APPLICABLE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_SELECTION");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_SELECTION");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_COST_CENTRE_CODE");

//                entity.Property(e => e.RevenueDoiExtension)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("REVENUE_DOI_EXTENSION");

//                entity.Property(e => e.SequenceNumber)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<TStgMetrixFacilityChargesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_facility_charges_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActiveFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ACTIVE_FLAG");

//                entity.Property(e => e.BookAtUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BOOK_AT_UNIT");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_TYPE_CODE");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EntitySelection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_SELECTION");

//                entity.Property(e => e.EntitySelectionType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_SELECTION_TYPE");

//                entity.Property(e => e.ExpenseDoiExtension)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("EXPENSE_DOI_EXTENSION");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_CHARGE_FORMULA_ID");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FromToSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FROM_TO_SELECTION");

//                entity.Property(e => e.GstApplicable)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GST_APPLICABLE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OwnerSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_SELECTION");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaserSelection)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_SELECTION");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_COST_CENTRE_CODE");

//                entity.Property(e => e.RevenueDoiExtension)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("REVENUE_DOI_EXTENSION");

//                entity.Property(e => e.SequenceNumber)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SEQUENCE_NUMBER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<TStgMetrixFcDistribution>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_fc_distributions", "STAGE_METRIX");

//                entity.Property(e => e.ChargeGst)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_GST");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_COST_CENTRE_CODE");

//                entity.Property(e => e.ExpenseDoiSilentPartner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_DOI_SILENT_PARTNER");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_DOI_SUB_USED");

//                entity.Property(e => e.ExpenseFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("EXPENSE_FACILITY_SYS_ID");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_OWNER_ID");

//                entity.Property(e => e.ExpenseUnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_UNIT_ID");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("EXPENSE_VALUE");

//                entity.Property(e => e.ExpenseVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("EXPENSE_VOLUME");

//                entity.Property(e => e.ExpenseWellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("EXPENSE_WELL_TRACT_SYS_ID");

//                entity.Property(e => e.FacilityChargeSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_CHARGE_SYS_ID");

//                entity.Property(e => e.GrossGstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_GST_VALUE");

//                entity.Property(e => e.GrossPstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_PST_VALUE");

//                entity.Property(e => e.GrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_VALUE");

//                entity.Property(e => e.GrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GST_VALUE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("PST_VALUE");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_COST_CENTRE_CODE");

//                entity.Property(e => e.RevenueDoiSilentPartner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_DOI_SILENT_PARTNER");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_DOI_SUB_USED");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_OWNER_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixFcDistributionsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_fc_distributions_incr", "STAGE_METRIX");

//                entity.Property(e => e.ChargeGst)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CHARGE_GST");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_COST_CENTRE_CODE");

//                entity.Property(e => e.ExpenseDoiSilentPartner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_DOI_SILENT_PARTNER");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_DOI_SUB_USED");

//                entity.Property(e => e.ExpenseFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("EXPENSE_FACILITY_SYS_ID");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_OWNER_ID");

//                entity.Property(e => e.ExpenseUnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EXPENSE_UNIT_ID");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("EXPENSE_VALUE");

//                entity.Property(e => e.ExpenseVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("EXPENSE_VOLUME");

//                entity.Property(e => e.ExpenseWellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("EXPENSE_WELL_TRACT_SYS_ID");

//                entity.Property(e => e.FacilityChargeSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_CHARGE_SYS_ID");

//                entity.Property(e => e.GrossGstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_GST_VALUE");

//                entity.Property(e => e.GrossPstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_PST_VALUE");

//                entity.Property(e => e.GrossValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_VALUE");

//                entity.Property(e => e.GrossVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GST_VALUE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("PST_VALUE");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_COST_CENTRE_CODE");

//                entity.Property(e => e.RevenueDoiSilentPartner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_DOI_SILENT_PARTNER");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_DOI_SUB_USED");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_OWNER_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixGovernmentRegistry>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_government_registry", "STAGE_METRIX");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_ID");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Name");

//                entity.Property(e => e.OperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Operator_Name");
//            });

//            modelBuilder.Entity<TStgMetrixParticipantAvailable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_participant_availables", "STAGE_METRIX");

//                entity.Property(e => e.AvailableForSaleVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("AVAILABLE_FOR_SALE_VOLUME");

//                entity.Property(e => e.ClosingGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CLOSING_GIGAJOULES");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CLOSING_INVENTORY");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OpeningGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OPENING_GIGAJOULES");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OPENING_INVENTORY");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.ParticipantTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTICIPANT_TYPE_CODE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("PRODUCTION_GIGAJOULES");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("PRODUCTION_VOLUME");

//                entity.Property(e => e.ReceivingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("RECEIVING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("SALES_GIGAJOULES");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SendingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SENDING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_RECEIVED");

//                entity.Property(e => e.TransferVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_VOLUME");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.VolumeFromFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_FROM_FRAC");

//                entity.Property(e => e.VolumeSentForFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_SENT_FOR_FRAC");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WORKING_INTEREST_OWNER_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixParticipantAvailablesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_participant_availables_incr", "STAGE_METRIX");

//                entity.Property(e => e.AvailableForSaleVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("AVAILABLE_FOR_SALE_VOLUME");

//                entity.Property(e => e.ClosingGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("CLOSING_GIGAJOULES");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("CLOSING_INVENTORY");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OpeningGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("OPENING_GIGAJOULES");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OPENING_INVENTORY");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.ParticipantTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTICIPANT_TYPE_CODE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("PRODUCTION_GIGAJOULES");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("PRODUCTION_VOLUME");

//                entity.Property(e => e.ReceivingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("RECEIVING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("SALES_GIGAJOULES");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SendingBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SENDING_BATTERY_FACILITY_ID");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_RECEIVED");

//                entity.Property(e => e.TransferVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TRANSFER_VOLUME");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.VolumeFromFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_FROM_FRAC");

//                entity.Property(e => e.VolumeSentForFrac)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("VOLUME_SENT_FOR_FRAC");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WORKING_INTEREST_OWNER_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixRoyaltySplit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_royalty_splits", "STAGE_METRIX");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownAdjustmentValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CROWN_ADJUSTMENT_VALUE");

//                entity.Property(e => e.CrownClassification)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CROWN_CLASSIFICATION");

//                entity.Property(e => e.DoiOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_OWNER_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.GrossNrt)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_NRT");

//                entity.Property(e => e.GrossNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GROSS_NRT_VOLUME");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ObligationTotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OBLIGATION_TOTAL_VALUE");

//                entity.Property(e => e.ObligationTotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OBLIGATION_TOTAL_VOLUME");

//                entity.Property(e => e.ObligationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIGATION_TYPE");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_TYPE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ReportAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_CONDENSATE");

//                entity.Property(e => e.RoyaltyHoliday)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_HOLIDAY");

//                entity.Property(e => e.RoyaltyNrtValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_NRT_VALUE");

//                entity.Property(e => e.RoyaltyNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_NRT_VOLUME");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_OWNER_ID");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_VALUE");

//                entity.Property(e => e.RoyaltyVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_VOLUME");

//                entity.Property(e => e.ShareType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SHARE_TYPE");

//                entity.Property(e => e.SilentPartnerOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER_OWNER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.UnitizationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNITIZATION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_USER_DEFINED1");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixRoyaltySplitsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_royalty_splits_incr", "STAGE_METRIX");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownAdjustmentValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("CROWN_ADJUSTMENT_VALUE");

//                entity.Property(e => e.CrownClassification)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CROWN_CLASSIFICATION");

//                entity.Property(e => e.DoiOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_OWNER_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.GrossNrt)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("GROSS_NRT");

//                entity.Property(e => e.GrossNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("GROSS_NRT_VOLUME");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ObligationTotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("OBLIGATION_TOTAL_VALUE");

//                entity.Property(e => e.ObligationTotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("OBLIGATION_TOTAL_VOLUME");

//                entity.Property(e => e.ObligationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OBLIGATION_TYPE");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PAYMENT_TYPE");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ReportAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_CONDENSATE");

//                entity.Property(e => e.RoyaltyHoliday)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_HOLIDAY");

//                entity.Property(e => e.RoyaltyNrtValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_NRT_VALUE");

//                entity.Property(e => e.RoyaltyNrtVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_NRT_VOLUME");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ROYALTY_OWNER_ID");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("ROYALTY_VALUE");

//                entity.Property(e => e.RoyaltyVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("ROYALTY_VOLUME");

//                entity.Property(e => e.ShareType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SHARE_TYPE");

//                entity.Property(e => e.SilentPartnerOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SILENT_PARTNER_OWNER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TaxType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_TYPE");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.UnitizationType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("UNITIZATION_TYPE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_USER_DEFINED1");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixSalesDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_sales_details", "STAGE_METRIX");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ACTUAL_GIGAJOULES");

//                entity.Property(e => e.AllocationNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("ALLOCATION_NUMBER");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DeliveryDispositionTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_DISPOSITION_TYPE_CODE");

//                entity.Property(e => e.DeliveryFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_FACILITY_SYS_ID");

//                entity.Property(e => e.DeliverySequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_SEQUENCE");

//                entity.Property(e => e.DeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.GasAnalysisFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_ANALYSIS_FACTOR");

//                entity.Property(e => e.InjectionWellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_ID");

//                entity.Property(e => e.InjectionWellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_USER_DEFINED1");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OriginalBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_BATTERY_FACILITY_ID");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.OwnerTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_TYPE_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaseFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_FLAG");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_ID");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE");

//                entity.Property(e => e.PurchaserType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_TYPE");

//                entity.Property(e => e.ReferenceOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REFERENCE_OWNER_ID");

//                entity.Property(e => e.ReportAsProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_PRODUCT_CODE");

//                entity.Property(e => e.RevenueNotReceivedReason)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_NOT_RECEIVED_REASON");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE_NET_OF_TRANSPORT");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SplitLoadOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPLIT_LOAD_OIL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TheoreticalGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("THEORETICAL_GIGAJOULES");

//                entity.Property(e => e.TotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_VALUE");

//                entity.Property(e => e.TotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TOTAL_VOLUME");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixSalesDetails20201125>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_sales_details_20201125", "STAGE_METRIX");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ACTUAL_GIGAJOULES");

//                entity.Property(e => e.AllocationNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("ALLOCATION_NUMBER");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DeliveryDispositionTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_DISPOSITION_TYPE_CODE");

//                entity.Property(e => e.DeliveryFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_FACILITY_SYS_ID");

//                entity.Property(e => e.DeliverySequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_SEQUENCE");

//                entity.Property(e => e.DeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.GasAnalysisFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_ANALYSIS_FACTOR");

//                entity.Property(e => e.InjectionWellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_ID");

//                entity.Property(e => e.InjectionWellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_USER_DEFINED1");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OriginalBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_BATTERY_FACILITY_ID");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.OwnerTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_TYPE_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaseFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_FLAG");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_ID");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE");

//                entity.Property(e => e.PurchaserType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_TYPE");

//                entity.Property(e => e.ReferenceOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REFERENCE_OWNER_ID");

//                entity.Property(e => e.ReportAsProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_PRODUCT_CODE");

//                entity.Property(e => e.RevenueNotReceivedReason)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_NOT_RECEIVED_REASON");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE_NET_OF_TRANSPORT");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SplitLoadOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPLIT_LOAD_OIL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TheoreticalGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("THEORETICAL_GIGAJOULES");

//                entity.Property(e => e.TotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_VALUE");

//                entity.Property(e => e.TotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TOTAL_VOLUME");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixSalesDetailsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_sales_details_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ACTUAL_GIGAJOULES");

//                entity.Property(e => e.AllocationNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("ALLOCATION_NUMBER");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DeliveryDispositionTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_DISPOSITION_TYPE_CODE");

//                entity.Property(e => e.DeliveryFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_FACILITY_SYS_ID");

//                entity.Property(e => e.DeliverySequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_SEQUENCE");

//                entity.Property(e => e.DeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.GasAnalysisFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_ANALYSIS_FACTOR");

//                entity.Property(e => e.InjectionWellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_ID");

//                entity.Property(e => e.InjectionWellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_USER_DEFINED1");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OriginalBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_BATTERY_FACILITY_ID");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.OwnerTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_TYPE_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaseFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_FLAG");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_ID");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE");

//                entity.Property(e => e.PurchaserType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_TYPE");

//                entity.Property(e => e.ReferenceOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REFERENCE_OWNER_ID");

//                entity.Property(e => e.ReportAsProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_PRODUCT_CODE");

//                entity.Property(e => e.RevenueNotReceivedReason)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_NOT_RECEIVED_REASON");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE_NET_OF_TRANSPORT");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SplitLoadOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPLIT_LOAD_OIL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TheoreticalGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("THEORETICAL_GIGAJOULES");

//                entity.Property(e => e.TotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_VALUE");

//                entity.Property(e => e.TotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TOTAL_VOLUME");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgMetrixSalesDetailsWPricingUserdefined1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_metrix_sales_details_w_pricing_userdefined1", "STAGE_METRIX");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("ACTUAL_GIGAJOULES");

//                entity.Property(e => e.AllocationNumber)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("ALLOCATION_NUMBER");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultSourceWell)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_SOURCE_WELL");

//                entity.Property(e => e.DeliveryDispositionTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_DISPOSITION_TYPE_CODE");

//                entity.Property(e => e.DeliveryFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_FACILITY_SYS_ID");

//                entity.Property(e => e.DeliverySequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("DELIVERY_SEQUENCE");

//                entity.Property(e => e.DeliverySystemId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DELIVERY_SYSTEM_ID");

//                entity.Property(e => e.DoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("DOI_SUB_USED");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("FACILITY_SYS_ID");

//                entity.Property(e => e.FlowGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FLOW_GROUP_ID");

//                entity.Property(e => e.GasAnalysisFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_ANALYSIS_FACTOR");

//                entity.Property(e => e.InjectionWellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_ID");

//                entity.Property(e => e.InjectionWellUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("INJECTION_WELL_USER_DEFINED1");

//                entity.Property(e => e.LastLoadDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_LOAD_DATE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.OriginalBatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ORIGINAL_BATTERY_FACILITY_ID");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");

//                entity.Property(e => e.OwnerTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_TYPE_CODE");

//                entity.Property(e => e.PricingUserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRICING_USER_DEFINED1");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.PurchaseFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASE_FLAG");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_ID");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("PURCHASER_SEQUENCE");

//                entity.Property(e => e.PurchaserType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PURCHASER_TYPE");

//                entity.Property(e => e.ReferenceOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REFERENCE_OWNER_ID");

//                entity.Property(e => e.ReportAsProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_AS_PRODUCT_CODE");

//                entity.Property(e => e.RevenueNotReceivedReason)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REVENUE_NOT_RECEIVED_REASON");

//                entity.Property(e => e.RoyaltyObligationSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ROYALTY_OBLIGATION_SYS_ID");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("SALES_VALUE_NET_OF_TRANSPORT");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("SALES_VOLUME");

//                entity.Property(e => e.SpecialPlantReceipt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPECIAL_PLANT_RECEIPT");

//                entity.Property(e => e.SplitLoadOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SPLIT_LOAD_OIL");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TheoreticalGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("THEORETICAL_GIGAJOULES");

//                entity.Property(e => e.TotalValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("TOTAL_VALUE");

//                entity.Property(e => e.TotalVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("TOTAL_VOLUME");

//                entity.Property(e => e.TransferFacilitySysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("TRANSFER_FACILITY_SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");

//                entity.Property(e => e.WorkingInterestPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WORKING_INTEREST_PERCENT");
//            });

//            modelBuilder.Entity<TStgOpexAccrualsXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_opex_accruals_xls", "stage");

//                entity.Property(e => e.AccountingMonth)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("accounting_month");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.SourceFile)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("source_file");
//            });

//            modelBuilder.Entity<TStgOpexBudgetFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_opex_budget_facts", "stage");

//                entity.Property(e => e.April)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("APRIL");

//                entity.Property(e => e.August)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("AUGUST");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.December)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("DECEMBER");

//                entity.Property(e => e.February)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("FEBRUARY");

//                entity.Property(e => e.Filename)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("FILENAME");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET_FLAG");

//                entity.Property(e => e.January)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JANUARY");

//                entity.Property(e => e.July)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JULY");

//                entity.Property(e => e.June)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JUNE");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.March)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MARCH");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MAY");

//                entity.Property(e => e.Measure)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("MEASURE");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.November)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("NOVEMBER");

//                entity.Property(e => e.October)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("OCTOBER");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.September)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("SEPTEMBER");
//            });

//            modelBuilder.Entity<TStgOpexBudgetFacts20220404>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_opex_budget_facts_20220404", "stage");

//                entity.Property(e => e.April)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("APRIL");

//                entity.Property(e => e.August)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("AUGUST");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.December)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("DECEMBER");

//                entity.Property(e => e.February)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("FEBRUARY");

//                entity.Property(e => e.Filename)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("FILENAME");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET_FLAG");

//                entity.Property(e => e.January)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JANUARY");

//                entity.Property(e => e.July)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JULY");

//                entity.Property(e => e.June)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JUNE");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.March)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MARCH");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MAY");

//                entity.Property(e => e.Measure)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("MEASURE");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.November)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("NOVEMBER");

//                entity.Property(e => e.October)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("OCTOBER");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.September)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("SEPTEMBER");
//            });

//            modelBuilder.Entity<TStgOpexBudgetFactsOutput>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_opex_budget_facts_output", "stage");

//                entity.Property(e => e.April)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("APRIL");

//                entity.Property(e => e.August)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("AUGUST");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.December)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("DECEMBER");

//                entity.Property(e => e.February)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("FEBRUARY");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET_FLAG");

//                entity.Property(e => e.January)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JANUARY");

//                entity.Property(e => e.July)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JULY");

//                entity.Property(e => e.June)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("JUNE");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.March)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MARCH");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("MAY");

//                entity.Property(e => e.Measure)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("MEASURE");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.November)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("NOVEMBER");

//                entity.Property(e => e.October)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("OCTOBER");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.September)
//                    .HasColumnType("numeric(18, 5)")
//                    .HasColumnName("SEPTEMBER");
//            });

//            modelBuilder.Entity<TStgOpexVolumesBudgetDlyFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_opex_volumes_budget_dly_facts", "stage");

//                entity.Property(e => e.April)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("APRIL");

//                entity.Property(e => e.August)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("AUGUST");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.December)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("DECEMBER");

//                entity.Property(e => e.February)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("FEBRUARY");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("GRS_NET_FLAG");

//                entity.Property(e => e.January)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("JANUARY");

//                entity.Property(e => e.July)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("JULY");

//                entity.Property(e => e.June)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("JUNE");

//                entity.Property(e => e.March)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("MARCH");

//                entity.Property(e => e.May)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("MAY");

//                entity.Property(e => e.November)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("NOVEMBER");

//                entity.Property(e => e.October)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("OCTOBER");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("SCENARIO");

//                entity.Property(e => e.September)
//                    .HasColumnType("numeric(18, 10)")
//                    .HasColumnName("SEPTEMBER");
//            });

//            modelBuilder.Entity<TStgPortfolioPricingText>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_portfolio_pricing_text", "Mktg_ReportLoads");

//                entity.Property(e => e.Comment).HasMaxLength(255);

//                entity.Property(e => e.Currency).HasMaxLength(255);

//                entity.Property(e => e.DeliveryDate)
//                    .HasMaxLength(255)
//                    .HasColumnName("Delivery_Date");

//                entity.Property(e => e.ManualOverride)
//                    .HasMaxLength(255)
//                    .HasColumnName("Manual_Override");

//                entity.Property(e => e.Name).HasMaxLength(255);

//                entity.Property(e => e.PortfolioPrice)
//                    .HasMaxLength(255)
//                    .HasColumnName("Portfolio_Price");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(255)
//                    .HasColumnName("Product_Type");

//                entity.Property(e => e.RealizedPrice)
//                    .HasMaxLength(255)
//                    .HasColumnName("Realized_Price");

//                entity.Property(e => e.SettlementPeriod)
//                    .HasMaxLength(255)
//                    .HasColumnName("Settlement_Period");

//                entity.Property(e => e.StripDate)
//                    .HasMaxLength(255)
//                    .HasColumnName("Strip_Date");

//                entity.Property(e => e.StripPrice)
//                    .HasMaxLength(255)
//                    .HasColumnName("Strip_Price");

//                entity.Property(e => e.Units).HasMaxLength(255);
//            });

//            modelBuilder.Entity<TStgPortfolioPricingXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_portfolio_pricing_xls", "Mktg_ReportLoads");

//                entity.Property(e => e.Comment)
//                    .HasMaxLength(255)
//                    .IsUnicode(false);

//                entity.Property(e => e.Currency)
//                    .HasMaxLength(3)
//                    .IsUnicode(false);

//                entity.Property(e => e.DeliveryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Delivery_Date");

//                entity.Property(e => e.ManualOverride).HasColumnName("Manual_Override");

//                entity.Property(e => e.ModifiedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Modified_Date");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);

//                entity.Property(e => e.PortfolioPrice).HasColumnName("Portfolio_Price");

//                entity.Property(e => e.ProductType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Product_Type");

//                entity.Property(e => e.RealizedPrice).HasColumnName("Realized_Price");

//                entity.Property(e => e.SettlementPeriod)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("Settlement_Period");

//                entity.Property(e => e.StripDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("Strip_Date");

//                entity.Property(e => e.StripPrice).HasColumnName("Strip_Price");

//                entity.Property(e => e.Units)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<TStgPrismUwiCc>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prism_uwi_cc", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");
//            });

//            modelBuilder.Entity<TStgProdviewAllFlownetHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prodview_all_flownet_hierarchy", "datamart_marketing");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.PvunitDttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("pvunit_dttmend");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TStgProdviewGroupPointDoi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prodview_group_point_doi", "datamart_marketing");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_name");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Refidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidb");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(13, 5)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<TStgProdviewProrationDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prodview_proration_data", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenter");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.ProratedGas).HasColumnName("prorated_gas");

//                entity.Property(e => e.ProratedOil).HasColumnName("prorated_oil");

//                entity.Property(e => e.ProratedWater).HasColumnName("prorated_water");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<TStgProdviewVolumesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prodview_volumes_final", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TStgProdviewVolumesFinalIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_prodview_volumes_final_incr", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TStgQbyteCostCentreDoi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_qbyte_cost_centre_doi", "datamart_marketing");

//                entity.Property(e => e.AgreementId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("agreement_id");

//                entity.Property(e => e.BaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ba_id");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_name");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_type_code");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Doi)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("doi");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.OriginalExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("original_expiry_date");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");
//            });

//            modelBuilder.Entity<TStgQbyteDeletedLineItemsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_qbyte_deleted_line_items_incr", "stage");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTVY_PER_DATE");

//                entity.Property(e => e.AfeItemNum)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_ITEM_NUM");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.AllocDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ALLOC_DATE");

//                entity.Property(e => e.AllocLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ALLOC_LI_ID");

//                entity.Property(e => e.AllocationReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOCATION_REVERSED_FLAG");

//                entity.Property(e => e.AuditAction)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("AUDIT_ACTION");

//                entity.Property(e => e.AuditProgram)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("AUDIT_PROGRAM");

//                entity.Property(e => e.AuditTimestamp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("AUDIT_TIMESTAMP");

//                entity.Property(e => e.AuditUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("AUDIT_USER");

//                entity.Property(e => e.BilledDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("BILLED_DATE");

//                entity.Property(e => e.CashTxId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("CASH_TX_ID");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTINUITY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DestOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("DEST_ORG_ID");

//                entity.Property(e => e.DiscountAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("DISCOUNT_AMT");

//                entity.Property(e => e.EtId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ET_ID");

//                entity.Property(e => e.GlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GL_SUB_CODE");

//                entity.Property(e => e.GovernAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("GOVERN_AGR_ID");

//                entity.Property(e => e.GovernAgrOverrideFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_OVERRIDE_FLAG");

//                entity.Property(e => e.GovernAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGR_TYPE_CODE");

//                entity.Property(e => e.GrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GROSS_UP_AMT");

//                entity.Property(e => e.GrossUpEnergyVal)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_ENERGY_VAL");

//                entity.Property(e => e.GrossUpVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("GROSS_UP_VOL");

//                entity.Property(e => e.GstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("GST_AMT");

//                entity.Property(e => e.GstFactor)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("GST_FACTOR");

//                entity.Property(e => e.JibReversedFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_REVERSED_FLAG");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LiAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("LI_AMT");

//                entity.Property(e => e.LiAsEnteredVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_AS_ENTERED_VOL");

//                entity.Property(e => e.LiEnergyAmount)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_ENERGY_AMOUNT");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("LI_ID");

//                entity.Property(e => e.LiOriginCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_ORIGIN_CODE");

//                entity.Property(e => e.LiRem)
//                    .HasMaxLength(72)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_REM");

//                entity.Property(e => e.LiTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("LI_TYPE_CODE");

//                entity.Property(e => e.LiVol)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("LI_VOL");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MAJOR_ACCT");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("MINOR_ACCT");

//                entity.Property(e => e.MiscellaneousIncomeCategory)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("MISCELLANEOUS_INCOME_CATEGORY");

//                entity.Property(e => e.OrgRepCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_AMT");

//                entity.Property(e => e.OrgRepCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("ORG_REP_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.OrgRepCurrTranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("ORG_REP_CURR_TRANSLATION_RATE");

//                entity.Property(e => e.OriginalLiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ORIGINAL_LI_ID");

//                entity.Property(e => e.PreTaxAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("PRE_TAX_AMT");

//                entity.Property(e => e.ReportingCurrAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_AMT");

//                entity.Property(e => e.ReportingCurrGrossUpAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GROSS_UP_AMT");

//                entity.Property(e => e.ReportingCurrGstAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("REPORTING_CURR_GST_AMT");

//                entity.Property(e => e.ResultInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("RESULT_INVC_ID");

//                entity.Property(e => e.SrcAgrId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_AGR_ID");

//                entity.Property(e => e.SrcAgrTypeCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("SRC_AGR_TYPE_CODE");

//                entity.Property(e => e.SrcInvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("SRC_INVC_ID");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("TRANSLATION_RATE");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VOUCHER_ID");

//                entity.Property(e => e.WarehouseHandlingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("WAREHOUSE_HANDLING_FLAG");
//            });

//            modelBuilder.Entity<TStgQbyteVolumesFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_qbyte_volumes_facts", "stage");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.ButaneGrsBoeVolume).HasColumnName("butane_grs_boe_volume");

//                entity.Property(e => e.ButaneGrsImperialVolume).HasColumnName("butane_grs_imperial_volume");

//                entity.Property(e => e.ButaneGrsMcfeVolume).HasColumnName("butane_grs_mcfe_volume");

//                entity.Property(e => e.ButaneGrsMetricVolume).HasColumnName("butane_grs_metric_volume");

//                entity.Property(e => e.ButaneNetBoeVolume).HasColumnName("butane_net_boe_volume");

//                entity.Property(e => e.ButaneNetImperialVolume).HasColumnName("butane_net_imperial_volume");

//                entity.Property(e => e.ButaneNetMcfeVolume).HasColumnName("butane_net_mcfe_volume");

//                entity.Property(e => e.ButaneNetMetricVolume).HasColumnName("butane_net_metric_volume");

//                entity.Property(e => e.ButaneTgrsBoeVolume).HasColumnName("butane_tgrs_boe_volume");

//                entity.Property(e => e.ButaneTgrsImperialVolume).HasColumnName("butane_tgrs_imperial_volume");

//                entity.Property(e => e.ButaneTgrsMcfeVolume).HasColumnName("butane_tgrs_mcfe_volume");

//                entity.Property(e => e.ButaneTgrsMetricVolume).HasColumnName("butane_tgrs_metric_volume");

//                entity.Property(e => e.CondGrsBoeVolume).HasColumnName("cond_grs_boe_volume");

//                entity.Property(e => e.CondGrsImperialVolume).HasColumnName("cond_grs_imperial_volume");

//                entity.Property(e => e.CondGrsMcfeVolume).HasColumnName("cond_grs_mcfe_volume");

//                entity.Property(e => e.CondGrsMetricVolume).HasColumnName("cond_grs_metric_volume");

//                entity.Property(e => e.CondNetBoeVolume).HasColumnName("cond_net_boe_volume");

//                entity.Property(e => e.CondNetImperialVolume).HasColumnName("cond_net_imperial_volume");

//                entity.Property(e => e.CondNetMcfeVolume).HasColumnName("cond_net_mcfe_volume");

//                entity.Property(e => e.CondNetMetricVolume).HasColumnName("cond_net_metric_volume");

//                entity.Property(e => e.CondTgrsBoeVolume).HasColumnName("cond_tgrs_boe_volume");

//                entity.Property(e => e.CondTgrsImperialVolume).HasColumnName("cond_tgrs_imperial_volume");

//                entity.Property(e => e.CondTgrsMcfeVolume).HasColumnName("cond_tgrs_mcfe_volume");

//                entity.Property(e => e.CondTgrsMetricVolume).HasColumnName("cond_tgrs_metric_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneGrsBoeVolume).HasColumnName("ethane_grs_boe_volume");

//                entity.Property(e => e.EthaneGrsImperialVolume).HasColumnName("ethane_grs_imperial_volume");

//                entity.Property(e => e.EthaneGrsMcfeVolume).HasColumnName("ethane_grs_mcfe_volume");

//                entity.Property(e => e.EthaneGrsMetricVolume).HasColumnName("ethane_grs_metric_volume");

//                entity.Property(e => e.EthaneNetBoeVolume).HasColumnName("ethane_net_boe_volume");

//                entity.Property(e => e.EthaneNetImperialVolume).HasColumnName("ethane_net_imperial_volume");

//                entity.Property(e => e.EthaneNetMcfeVolume).HasColumnName("ethane_net_mcfe_volume");

//                entity.Property(e => e.EthaneNetMetricVolume).HasColumnName("ethane_net_metric_volume");

//                entity.Property(e => e.EthaneTgrsBoeVolume).HasColumnName("ethane_tgrs_boe_volume");

//                entity.Property(e => e.EthaneTgrsImperialVolume).HasColumnName("ethane_tgrs_imperial_volume");

//                entity.Property(e => e.EthaneTgrsMcfeVolume).HasColumnName("ethane_tgrs_mcfe_volume");

//                entity.Property(e => e.EthaneTgrsMetricVolume).HasColumnName("ethane_tgrs_metric_volume");

//                entity.Property(e => e.GasGrsBoeVolume).HasColumnName("gas_grs_boe_volume");

//                entity.Property(e => e.GasGrsImperialVolume).HasColumnName("gas_grs_imperial_volume");

//                entity.Property(e => e.GasGrsMcfeVolume).HasColumnName("gas_grs_mcfe_volume");

//                entity.Property(e => e.GasGrsMetricVolume).HasColumnName("gas_grs_metric_volume");

//                entity.Property(e => e.GasNetBoeVolume).HasColumnName("gas_net_boe_volume");

//                entity.Property(e => e.GasNetImperialVolume).HasColumnName("gas_net_imperial_volume");

//                entity.Property(e => e.GasNetMcfeVolume).HasColumnName("gas_net_mcfe_volume");

//                entity.Property(e => e.GasNetMetricVolume).HasColumnName("gas_net_metric_volume");

//                entity.Property(e => e.GasTgrsBoeVolume).HasColumnName("gas_tgrs_boe_volume");

//                entity.Property(e => e.GasTgrsImperialVolume).HasColumnName("gas_tgrs_imperial_volume");

//                entity.Property(e => e.GasTgrsMcfeVolume).HasColumnName("gas_tgrs_mcfe_volume");

//                entity.Property(e => e.GasTgrsMetricVolume).HasColumnName("gas_tgrs_metric_volume");

//                entity.Property(e => e.OilGrsBoeVolume).HasColumnName("oil_grs_boe_volume");

//                entity.Property(e => e.OilGrsImperialVolume).HasColumnName("oil_grs_imperial_volume");

//                entity.Property(e => e.OilGrsMcfeVolume).HasColumnName("oil_grs_mcfe_volume");

//                entity.Property(e => e.OilGrsMetricVolume).HasColumnName("oil_grs_metric_volume");

//                entity.Property(e => e.OilNetBoeVolume).HasColumnName("oil_net_boe_volume");

//                entity.Property(e => e.OilNetImperialVolume).HasColumnName("oil_net_imperial_volume");

//                entity.Property(e => e.OilNetMcfeVolume).HasColumnName("oil_net_mcfe_volume");

//                entity.Property(e => e.OilNetMetricVolume).HasColumnName("oil_net_metric_volume");

//                entity.Property(e => e.OilTgrsBoeVolume).HasColumnName("oil_tgrs_boe_volume");

//                entity.Property(e => e.OilTgrsImperialVolume).HasColumnName("oil_tgrs_imperial_volume");

//                entity.Property(e => e.OilTgrsMcfeVolume).HasColumnName("oil_tgrs_mcfe_volume");

//                entity.Property(e => e.OilTgrsMetricVolume).HasColumnName("oil_tgrs_metric_volume");

//                entity.Property(e => e.PentaneGrsBoeVolume).HasColumnName("pentane_grs_boe_volume");

//                entity.Property(e => e.PentaneGrsImperialVolume).HasColumnName("pentane_grs_imperial_volume");

//                entity.Property(e => e.PentaneGrsMcfeVolume).HasColumnName("pentane_grs_mcfe_volume");

//                entity.Property(e => e.PentaneGrsMetricVolume).HasColumnName("pentane_grs_metric_volume");

//                entity.Property(e => e.PentaneNetBoeVolume).HasColumnName("pentane_net_boe_volume");

//                entity.Property(e => e.PentaneNetImperialVolume).HasColumnName("pentane_net_imperial_volume");

//                entity.Property(e => e.PentaneNetMcfeVolume).HasColumnName("pentane_net_mcfe_volume");

//                entity.Property(e => e.PentaneNetMetricVolume).HasColumnName("pentane_net_metric_volume");

//                entity.Property(e => e.PentaneTgrsBoeVolume).HasColumnName("pentane_tgrs_boe_volume");

//                entity.Property(e => e.PentaneTgrsImperialVolume).HasColumnName("pentane_tgrs_imperial_volume");

//                entity.Property(e => e.PentaneTgrsMcfeVolume).HasColumnName("pentane_tgrs_mcfe_volume");

//                entity.Property(e => e.PentaneTgrsMetricVolume).HasColumnName("pentane_tgrs_metric_volume");

//                entity.Property(e => e.PropaneGrsBoeVolume).HasColumnName("propane_grs_boe_volume");

//                entity.Property(e => e.PropaneGrsImperialVolume).HasColumnName("propane_grs_imperial_volume");

//                entity.Property(e => e.PropaneGrsMcfeVolume).HasColumnName("propane_grs_mcfe_volume");

//                entity.Property(e => e.PropaneGrsMetricVolume).HasColumnName("propane_grs_metric_volume");

//                entity.Property(e => e.PropaneNetBoeVolume).HasColumnName("propane_net_boe_volume");

//                entity.Property(e => e.PropaneNetImperialVolume).HasColumnName("propane_net_imperial_volume");

//                entity.Property(e => e.PropaneNetMcfeVolume).HasColumnName("propane_net_mcfe_volume");

//                entity.Property(e => e.PropaneNetMetricVolume).HasColumnName("propane_net_metric_volume");

//                entity.Property(e => e.PropaneTgrsBoeVolume).HasColumnName("propane_tgrs_boe_volume");

//                entity.Property(e => e.PropaneTgrsImperialVolume).HasColumnName("propane_tgrs_imperial_volume");

//                entity.Property(e => e.PropaneTgrsMcfeVolume).HasColumnName("propane_tgrs_mcfe_volume");

//                entity.Property(e => e.PropaneTgrsMetricVolume).HasColumnName("propane_tgrs_metric_volume");
//            });

//            modelBuilder.Entity<TStgQbyteVolumesFactsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_qbyte_volumes_facts_incr", "stage");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.ButaneGrsBoeVolume).HasColumnName("butane_grs_boe_volume");

//                entity.Property(e => e.ButaneGrsImperialVolume).HasColumnName("butane_grs_imperial_volume");

//                entity.Property(e => e.ButaneGrsMcfeVolume).HasColumnName("butane_grs_mcfe_volume");

//                entity.Property(e => e.ButaneGrsMetricVolume).HasColumnName("butane_grs_metric_volume");

//                entity.Property(e => e.ButaneNetBoeVolume).HasColumnName("butane_net_boe_volume");

//                entity.Property(e => e.ButaneNetImperialVolume).HasColumnName("butane_net_imperial_volume");

//                entity.Property(e => e.ButaneNetMcfeVolume).HasColumnName("butane_net_mcfe_volume");

//                entity.Property(e => e.ButaneNetMetricVolume).HasColumnName("butane_net_metric_volume");

//                entity.Property(e => e.ButaneTgrsBoeVolume).HasColumnName("butane_tgrs_boe_volume");

//                entity.Property(e => e.ButaneTgrsImperialVolume).HasColumnName("butane_tgrs_imperial_volume");

//                entity.Property(e => e.ButaneTgrsMcfeVolume).HasColumnName("butane_tgrs_mcfe_volume");

//                entity.Property(e => e.ButaneTgrsMetricVolume).HasColumnName("butane_tgrs_metric_volume");

//                entity.Property(e => e.CondGrsBoeVolume).HasColumnName("cond_grs_boe_volume");

//                entity.Property(e => e.CondGrsImperialVolume).HasColumnName("cond_grs_imperial_volume");

//                entity.Property(e => e.CondGrsMcfeVolume).HasColumnName("cond_grs_mcfe_volume");

//                entity.Property(e => e.CondGrsMetricVolume).HasColumnName("cond_grs_metric_volume");

//                entity.Property(e => e.CondNetBoeVolume).HasColumnName("cond_net_boe_volume");

//                entity.Property(e => e.CondNetImperialVolume).HasColumnName("cond_net_imperial_volume");

//                entity.Property(e => e.CondNetMcfeVolume).HasColumnName("cond_net_mcfe_volume");

//                entity.Property(e => e.CondNetMetricVolume).HasColumnName("cond_net_metric_volume");

//                entity.Property(e => e.CondTgrsBoeVolume).HasColumnName("cond_tgrs_boe_volume");

//                entity.Property(e => e.CondTgrsImperialVolume).HasColumnName("cond_tgrs_imperial_volume");

//                entity.Property(e => e.CondTgrsMcfeVolume).HasColumnName("cond_tgrs_mcfe_volume");

//                entity.Property(e => e.CondTgrsMetricVolume).HasColumnName("cond_tgrs_metric_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneGrsBoeVolume).HasColumnName("ethane_grs_boe_volume");

//                entity.Property(e => e.EthaneGrsImperialVolume).HasColumnName("ethane_grs_imperial_volume");

//                entity.Property(e => e.EthaneGrsMcfeVolume).HasColumnName("ethane_grs_mcfe_volume");

//                entity.Property(e => e.EthaneGrsMetricVolume).HasColumnName("ethane_grs_metric_volume");

//                entity.Property(e => e.EthaneNetBoeVolume).HasColumnName("ethane_net_boe_volume");

//                entity.Property(e => e.EthaneNetImperialVolume).HasColumnName("ethane_net_imperial_volume");

//                entity.Property(e => e.EthaneNetMcfeVolume).HasColumnName("ethane_net_mcfe_volume");

//                entity.Property(e => e.EthaneNetMetricVolume).HasColumnName("ethane_net_metric_volume");

//                entity.Property(e => e.EthaneTgrsBoeVolume).HasColumnName("ethane_tgrs_boe_volume");

//                entity.Property(e => e.EthaneTgrsImperialVolume).HasColumnName("ethane_tgrs_imperial_volume");

//                entity.Property(e => e.EthaneTgrsMcfeVolume).HasColumnName("ethane_tgrs_mcfe_volume");

//                entity.Property(e => e.EthaneTgrsMetricVolume).HasColumnName("ethane_tgrs_metric_volume");

//                entity.Property(e => e.GasGrsBoeVolume).HasColumnName("gas_grs_boe_volume");

//                entity.Property(e => e.GasGrsImperialVolume).HasColumnName("gas_grs_imperial_volume");

//                entity.Property(e => e.GasGrsMcfeVolume).HasColumnName("gas_grs_mcfe_volume");

//                entity.Property(e => e.GasGrsMetricVolume).HasColumnName("gas_grs_metric_volume");

//                entity.Property(e => e.GasNetBoeVolume).HasColumnName("gas_net_boe_volume");

//                entity.Property(e => e.GasNetImperialVolume).HasColumnName("gas_net_imperial_volume");

//                entity.Property(e => e.GasNetMcfeVolume).HasColumnName("gas_net_mcfe_volume");

//                entity.Property(e => e.GasNetMetricVolume).HasColumnName("gas_net_metric_volume");

//                entity.Property(e => e.GasTgrsBoeVolume).HasColumnName("gas_tgrs_boe_volume");

//                entity.Property(e => e.GasTgrsImperialVolume).HasColumnName("gas_tgrs_imperial_volume");

//                entity.Property(e => e.GasTgrsMcfeVolume).HasColumnName("gas_tgrs_mcfe_volume");

//                entity.Property(e => e.GasTgrsMetricVolume).HasColumnName("gas_tgrs_metric_volume");

//                entity.Property(e => e.OilGrsBoeVolume).HasColumnName("oil_grs_boe_volume");

//                entity.Property(e => e.OilGrsImperialVolume).HasColumnName("oil_grs_imperial_volume");

//                entity.Property(e => e.OilGrsMcfeVolume).HasColumnName("oil_grs_mcfe_volume");

//                entity.Property(e => e.OilGrsMetricVolume).HasColumnName("oil_grs_metric_volume");

//                entity.Property(e => e.OilNetBoeVolume).HasColumnName("oil_net_boe_volume");

//                entity.Property(e => e.OilNetImperialVolume).HasColumnName("oil_net_imperial_volume");

//                entity.Property(e => e.OilNetMcfeVolume).HasColumnName("oil_net_mcfe_volume");

//                entity.Property(e => e.OilNetMetricVolume).HasColumnName("oil_net_metric_volume");

//                entity.Property(e => e.OilTgrsBoeVolume).HasColumnName("oil_tgrs_boe_volume");

//                entity.Property(e => e.OilTgrsImperialVolume).HasColumnName("oil_tgrs_imperial_volume");

//                entity.Property(e => e.OilTgrsMcfeVolume).HasColumnName("oil_tgrs_mcfe_volume");

//                entity.Property(e => e.OilTgrsMetricVolume).HasColumnName("oil_tgrs_metric_volume");

//                entity.Property(e => e.PentaneGrsBoeVolume).HasColumnName("pentane_grs_boe_volume");

//                entity.Property(e => e.PentaneGrsImperialVolume).HasColumnName("pentane_grs_imperial_volume");

//                entity.Property(e => e.PentaneGrsMcfeVolume).HasColumnName("pentane_grs_mcfe_volume");

//                entity.Property(e => e.PentaneGrsMetricVolume).HasColumnName("pentane_grs_metric_volume");

//                entity.Property(e => e.PentaneNetBoeVolume).HasColumnName("pentane_net_boe_volume");

//                entity.Property(e => e.PentaneNetImperialVolume).HasColumnName("pentane_net_imperial_volume");

//                entity.Property(e => e.PentaneNetMcfeVolume).HasColumnName("pentane_net_mcfe_volume");

//                entity.Property(e => e.PentaneNetMetricVolume).HasColumnName("pentane_net_metric_volume");

//                entity.Property(e => e.PentaneTgrsBoeVolume).HasColumnName("pentane_tgrs_boe_volume");

//                entity.Property(e => e.PentaneTgrsImperialVolume).HasColumnName("pentane_tgrs_imperial_volume");

//                entity.Property(e => e.PentaneTgrsMcfeVolume).HasColumnName("pentane_tgrs_mcfe_volume");

//                entity.Property(e => e.PentaneTgrsMetricVolume).HasColumnName("pentane_tgrs_metric_volume");

//                entity.Property(e => e.PropaneGrsBoeVolume).HasColumnName("propane_grs_boe_volume");

//                entity.Property(e => e.PropaneGrsImperialVolume).HasColumnName("propane_grs_imperial_volume");

//                entity.Property(e => e.PropaneGrsMcfeVolume).HasColumnName("propane_grs_mcfe_volume");

//                entity.Property(e => e.PropaneGrsMetricVolume).HasColumnName("propane_grs_metric_volume");

//                entity.Property(e => e.PropaneNetBoeVolume).HasColumnName("propane_net_boe_volume");

//                entity.Property(e => e.PropaneNetImperialVolume).HasColumnName("propane_net_imperial_volume");

//                entity.Property(e => e.PropaneNetMcfeVolume).HasColumnName("propane_net_mcfe_volume");

//                entity.Property(e => e.PropaneNetMetricVolume).HasColumnName("propane_net_metric_volume");

//                entity.Property(e => e.PropaneTgrsBoeVolume).HasColumnName("propane_tgrs_boe_volume");

//                entity.Property(e => e.PropaneTgrsImperialVolume).HasColumnName("propane_tgrs_imperial_volume");

//                entity.Property(e => e.PropaneTgrsMcfeVolume).HasColumnName("propane_tgrs_mcfe_volume");

//                entity.Property(e => e.PropaneTgrsMetricVolume).HasColumnName("propane_tgrs_metric_volume");
//            });

//            modelBuilder.Entity<TStgRevenueModel>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_Revenue_Model", "Mktg_ReportLoads");

//                entity.Property(e => e.AccountingLineItemName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Accounting Line Item Name");

//                entity.Property(e => e.Amendment).HasMaxLength(255);

//                entity.Property(e => e.CodeName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Code Name");

//                entity.Property(e => e.DeliveryDate)
//                    .HasMaxLength(255)
//                    .HasColumnName("Delivery Date");

//                entity.Property(e => e.DeltaVsSettlement).HasColumnName("Delta vs Settlement (%)");

//                entity.Property(e => e.GrossPriceM3).HasColumnName("Gross Price ($/m3)");

//                entity.Property(e => e.Id)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("id");

//                entity.Property(e => e.NetPriceM3).HasColumnName("Net Price ($/m3)");

//                entity.Property(e => e.NetbackPriceNetOfOpexM3).HasColumnName("Netback Price net of Opex ($/m3)");

//                entity.Property(e => e.OffsetAncillaryTrucking)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - Ancillary Trucking");

//                entity.Property(e => e.OffsetBaseTrucking)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - Base Trucking");

//                entity.Property(e => e.OffsetEnbridgeWadf)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - ENBRIDGE WADF");

//                entity.Property(e => e.OffsetFractionation).HasColumnName("Offset - Fractionation");

//                entity.Property(e => e.OffsetLossAllowance)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - Loss Allowance");

//                entity.Property(e => e.OffsetOther)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - Other");

//                entity.Property(e => e.OffsetTariff)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - Tariff");

//                entity.Property(e => e.OffsetTransportation).HasColumnName("Offset - Transportation");

//                entity.Property(e => e.OffsetWadf)
//                    .HasMaxLength(255)
//                    .HasColumnName("Offset - WADF");

//                entity.Property(e => e.OpexAncillaryTruckingMonth)
//                    .HasMaxLength(255)
//                    .HasColumnName("Opex - Ancillary Trucking ($/month)");

//                entity.Property(e => e.OpexAncillaryTruckingRateM3)
//                    .HasMaxLength(255)
//                    .HasColumnName("Opex - Ancillary Trucking Rate ($/m3)");

//                entity.Property(e => e.OpexBaseTruckingMonth)
//                    .HasMaxLength(255)
//                    .HasColumnName("Opex - Base Trucking ($/month)");

//                entity.Property(e => e.OpexBaseTruckingRateM3)
//                    .HasMaxLength(255)
//                    .HasColumnName("Opex - Base Trucking Rate ($/m3)");

//                entity.Property(e => e.OpexTransportationMonth).HasColumnName("Opex - Transportation ($/month)");

//                entity.Property(e => e.OpexTransportationRateM3).HasColumnName("Opex - Transportation Rate ($/m3)");

//                entity.Property(e => e.OpexTransportationTakeOrPayMonth).HasColumnName("Opex - Transportation Take or Pay ($/month)");

//                entity.Property(e => e.OpexTransportationTakeOrPayRateM3).HasColumnName("Opex - Transportation Take or Pay Rate ($/m3)");

//                entity.Property(e => e.Penalty).HasMaxLength(255);

//                entity.Property(e => e.ProducingLocation)
//                    .HasMaxLength(255)
//                    .HasColumnName("Producing Location");

//                entity.Property(e => e.ProducingLocationName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Producing Location Name");

//                entity.Property(e => e.ProducingMeterStationCode)
//                    .HasMaxLength(20)
//                    .HasColumnName("Producing Meter Station Code");

//                entity.Property(e => e.ProductionSalesCode)
//                    .HasMaxLength(255)
//                    .HasColumnName("Production-Sales Code");

//                entity.Property(e => e.PropertyCommonName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Property Common Name");

//                entity.Property(e => e.PurchaserId).HasColumnName("Purchaser ID");

//                entity.Property(e => e.PurchaserName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Purchaser Name");

//                entity.Property(e => e.SalesLocation)
//                    .HasMaxLength(255)
//                    .HasColumnName("Sales Location");

//                entity.Property(e => e.SalesLocationName)
//                    .HasMaxLength(255)
//                    .HasColumnName("Sales Location Name");

//                entity.Property(e => e.SalesVolumeM3Month).HasColumnName("Sales Volume (m3/month)");

//                entity.Property(e => e.SettlementDeltaMonth).HasColumnName("Settlement Delta ($/month)");

//                entity.Property(e => e.SettlementInputMonth).HasColumnName("Settlement Input ($/month)");

//                entity.Property(e => e.SettlementMonth).HasColumnName("Settlement ($/month)");

//                entity.Property(e => e.SettlementNetTruckingTranspotOpexMonth).HasColumnName("Settlement Net Trucking & Transpot Opex ($/month)");

//                entity.Property(e => e.SpecOrMix)
//                    .HasMaxLength(255)
//                    .HasColumnName("Spec or Mix");

//                entity.Property(e => e.SubProduct)
//                    .HasMaxLength(255)
//                    .HasColumnName("Sub Product");

//                entity.Property(e => e.Timeofload)
//                    .HasColumnType("smalldatetime")
//                    .HasColumnName("timeofload");
//            });

//            modelBuilder.Entity<TStgTypeCurvesCurrentScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_type_curves_current_scenario", "stage");

//                entity.Property(e => e.IsCurrentScenario)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_current_scenario")
//                    .IsFixedLength();

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<TStgValnavBaseDeclineEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_valnav_base_decline_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<TStgValnavBudgetEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_valnav_budget_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<TStgValnavReservesEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_valnav_reserves_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<TStgValnavReservesXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_valnav_reserves_xls", "stage");

//                entity.Property(e => e.AccountingMonth)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("accounting_month");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ReserveCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category");

//                entity.Property(e => e.ReservesProperty)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("reserves_property");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.SourceFile)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("source_file");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TStgValnavTypecurvesEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_stg_valnav_typecurves_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<TTmpTextExecption>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_tmp_text_execptions", "stage");

//                entity.Property(e => e.ReplacementString)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("Replacement_String");

//                entity.Property(e => e.Rn).HasColumnName("rn");

//                entity.Property(e => e.String)
//                    .HasMaxLength(200)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<TTypecurvesCodeLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_code_lookup", "stage_valnav");

//                entity.Property(e => e.CodeType)
//                    .HasMaxLength(50)
//                    .HasColumnName("CODE_TYPE");

//                entity.Property(e => e.CodeValue).HasColumnName("CODE_VALUE");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");
//            });

//            modelBuilder.Entity<TTypecurvesCompany>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_company", "stage_valnav");

//                entity.Property(e => e.DefaultWorkingInterest).HasColumnName("DEFAULT_WORKING_INTEREST");

//                entity.Property(e => e.Enabled).HasColumnName("ENABLED");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.UseInNewCaseInterests).HasColumnName("USE_IN_NEW_CASE_INTERESTS");
//            });

//            modelBuilder.Entity<TTypecurvesCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_custom_field_def", "stage_valnav");

//                entity.Property(e => e.DefType).HasColumnName("DEF_TYPE");

//                entity.Property(e => e.DefaultListValue)
//                    .HasMaxLength(4000)
//                    .HasColumnName("DEFAULT_LIST_VALUE");

//                entity.Property(e => e.EnforceValues).HasColumnName("ENFORCE_VALUES");

//                entity.Property(e => e.Format)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORMAT");

//                entity.Property(e => e.ImperialUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("IMPERIAL_UNIT");

//                entity.Property(e => e.MetricUnit)
//                    .HasMaxLength(50)
//                    .HasColumnName("METRIC_UNIT");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.Precision).HasColumnName("PRECISION");

//                entity.Property(e => e.SecurityEnabled).HasColumnName("SECURITY_ENABLED");

//                entity.Property(e => e.UsageType).HasColumnName("USAGE_TYPE");
//            });

//            modelBuilder.Entity<TTypecurvesEntCompanyInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_company_interest", "stage_valnav");

//                entity.Property(e => e.CompanyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COMPANY_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TTypecurvesEntCustomField>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_custom_field", "stage_valnav");

//                entity.Property(e => e.DateValue).HasColumnName("DATE_VALUE");

//                entity.Property(e => e.NumericValue).HasColumnName("NUMERIC_VALUE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(50)
//                    .HasColumnName("STRING_VALUE");

//                entity.Property(e => e.UserFieldId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_FIELD_ID");
//            });

//            modelBuilder.Entity<TTypecurvesEntDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_detail", "stage_valnav");

//                entity.Property(e => e.BottomholeLatitude).HasColumnName("BOTTOMHOLE_LATITUDE");

//                entity.Property(e => e.BottomholeLongitude).HasColumnName("BOTTOMHOLE_LONGITUDE");

//                entity.Property(e => e.ChangeReasonDetailId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_DETAIL_ID");

//                entity.Property(e => e.ChangeReasonEntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CHANGE_REASON_ENTITY_ID");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.CrossPlotDistribution).HasColumnName("CROSS_PLOT_DISTRIBUTION");

//                entity.Property(e => e.CrossPlotIpCalc)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_IP_CALC");

//                entity.Property(e => e.CrossPlotNormlzBase)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_BASE");

//                entity.Property(e => e.CrossPlotNormlzEnabled).HasColumnName("CROSS_PLOT_NORMLZ_ENABLED");

//                entity.Property(e => e.CrossPlotNormlzField)
//                    .HasMaxLength(80)
//                    .HasColumnName("CROSS_PLOT_NORMLZ_FIELD");

//                entity.Property(e => e.CrossPlotNumMonths).HasColumnName("CROSS_PLOT_NUM_MONTHS");

//                entity.Property(e => e.CrossPlotProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CROSS_PLOT_PRODUCT_ID");

//                entity.Property(e => e.CrossPlotProductType).HasColumnName("CROSS_PLOT_PRODUCT_TYPE");

//                entity.Property(e => e.CrossPlotUseInitRate).HasColumnName("CROSS_PLOT_USE_INIT_RATE");

//                entity.Property(e => e.CurrentMonth).HasColumnName("CURRENT_MONTH");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(100)
//                    .HasColumnName("DATA_SOURCE");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.FactorId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FACTOR_ID");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(100)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FieldCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("FIELD_CODE");

//                entity.Property(e => e.FirstInjMonth).HasColumnName("FIRST_INJ_MONTH");

//                entity.Property(e => e.FirstMonthWithDaily).HasColumnName("FIRST_MONTH_WITH_DAILY");

//                entity.Property(e => e.FirstProdMonth).HasColumnName("FIRST_PROD_MONTH");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.IncludeInReserves).HasColumnName("INCLUDE_IN_RESERVES");

//                entity.Property(e => e.IsGrouped).HasColumnName("IS_GROUPED");

//                entity.Property(e => e.LastInjMonth).HasColumnName("LAST_INJ_MONTH");

//                entity.Property(e => e.LastMonthWithDaily).HasColumnName("LAST_MONTH_WITH_DAILY");

//                entity.Property(e => e.LastProdMonth).HasColumnName("LAST_PROD_MONTH");

//                entity.Property(e => e.LastUpdateDate).HasColumnName("LAST_UPDATE_DATE");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(50)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.License)
//                    .HasMaxLength(20)
//                    .HasColumnName("LICENSE");

//                entity.Property(e => e.Licensee)
//                    .HasMaxLength(100)
//                    .HasColumnName("LICENSEE");

//                entity.Property(e => e.OilDensity).HasColumnName("OIL_DENSITY");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .HasColumnName("OPERATOR");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(100)
//                    .HasColumnName("POOL");

//                entity.Property(e => e.PoolCode)
//                    .HasMaxLength(25)
//                    .HasColumnName("POOL_CODE");

//                entity.Property(e => e.PrimaryApi)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRIMARY_API");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(100)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.ProductListId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_LIST_ID");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReviewState).HasColumnName("REVIEW_STATE");

//                entity.Property(e => e.RigReleaseDate).HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.RootGroupId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ROOT_GROUP_ID");

//                entity.Property(e => e.SuppressDefaultCalcSetup).HasColumnName("SUPPRESS_DEFAULT_CALC_SETUP");

//                entity.Property(e => e.SurfaceLatitude).HasColumnName("SURFACE_LATITUDE");

//                entity.Property(e => e.SurfaceLongitude).HasColumnName("SURFACE_LONGITUDE");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIT");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellProfileType).HasColumnName("WELL_PROFILE_TYPE");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(100)
//                    .HasColumnName("WELL_STATUS");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(20)
//                    .HasColumnName("WELL_TYPE");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(50)
//                    .HasColumnName("ZONE");
//            });

//            modelBuilder.Entity<TTypecurvesEntLeaseInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_lease_interest", "stage_valnav");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");
//            });

//            modelBuilder.Entity<TTypecurvesEntPlan>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_plan", "stage_valnav");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.LastModifiedDate).HasColumnName("LAST_MODIFIED_DATE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReviewState).HasColumnName("REVIEW_STATE");
//            });

//            modelBuilder.Entity<TTypecurvesEntProductInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_product_interest", "stage_valnav");

//                entity.Property(e => e.AffectedByCalcDate).HasColumnName("AFFECTED_BY_CALC_DATE");

//                entity.Property(e => e.CustomData)
//                    .HasMaxLength(4000)
//                    .HasColumnName("CUSTOM_DATA");

//                entity.Property(e => e.EndDate).HasColumnName("END_DATE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT");

//                entity.Property(e => e.StartDate).HasColumnName("START_DATE");

//                entity.Property(e => e.UseManualRoyalty).HasColumnName("USE_MANUAL_ROYALTY");
//            });

//            modelBuilder.Entity<TTypecurvesEntReservesCache>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_reserves_cache", "stage_valnav");

//                entity.Property(e => e.ActualForecastStart).HasColumnName("ACTUAL_FORECAST_START");

//                entity.Property(e => e.CachedOnTimeType).HasColumnName("CACHED_ON_TIME_TYPE");

//                entity.Property(e => e.EnergyContent).HasColumnName("ENERGY_CONTENT");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastStartDate).HasColumnName("FORECAST_START_DATE");

//                entity.Property(e => e.FuelLoss).HasColumnName("FUEL_LOSS");

//                entity.Property(e => e.HasVolumetrics).HasColumnName("HAS_VOLUMETRICS");

//                entity.Property(e => e.OnTime).HasColumnName("ON_TIME");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ProcessLoss).HasColumnName("PROCESS_LOSS");

//                entity.Property(e => e.RemainingSalesGas).HasColumnName("REMAINING_SALES_GAS");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.Rgip).HasColumnName("RGIP");

//                entity.Property(e => e.SurfaceLoss).HasColumnName("SURFACE_LOSS");

//                entity.Property(e => e.TechnicalWi).HasColumnName("TECHNICAL_WI");

//                entity.Property(e => e.TotalGasLoss).HasColumnName("TOTAL_GAS_LOSS");
//            });

//            modelBuilder.Entity<TTypecurvesEntReservesCategory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_reserves_category", "stage_valnav");

//                entity.Property(e => e.AbandonmentDelay).HasColumnName("ABANDONMENT_DELAY");

//                entity.Property(e => e.AbandonmentValue).HasColumnName("ABANDONMENT_VALUE");

//                entity.Property(e => e.AutocalcProcessLoss).HasColumnName("AUTOCALC_PROCESS_LOSS");

//                entity.Property(e => e.CalculationDate).HasColumnName("CALCULATION_DATE");

//                entity.Property(e => e.ChanceOfOccurrence).HasColumnName("CHANCE_OF_OCCURRENCE");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("CHANCE_OF_SUCCESS");

//                entity.Property(e => e.EconChangeDate).HasColumnName("ECON_CHANGE_DATE");

//                entity.Property(e => e.EconomicLimitApply).HasColumnName("ECONOMIC_LIMIT_APPLY");

//                entity.Property(e => e.EconomicLimitDelay).HasColumnName("ECONOMIC_LIMIT_DELAY");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.ForecastChangeDate).HasColumnName("FORECAST_CHANGE_DATE");

//                entity.Property(e => e.ForecastChangeUserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("FORECAST_CHANGE_USER_ID");

//                entity.Property(e => e.HasEconomicResults).HasColumnName("HAS_ECONOMIC_RESULTS");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.PriceSetId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_SET_ID");

//                entity.Property(e => e.ProjectStart).HasColumnName("PROJECT_START");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.SalvageDelay).HasColumnName("SALVAGE_DELAY");

//                entity.Property(e => e.SalvageValue).HasColumnName("SALVAGE_VALUE");

//                entity.Property(e => e.TerminationDate).HasColumnName("TERMINATION_DATE");
//            });

//            modelBuilder.Entity<TTypecurvesEntReversionInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_reversion_interest", "stage_valnav");

//                entity.Property(e => e.CapCostInterest).HasColumnName("CAP_COST_INTEREST");

//                entity.Property(e => e.FacilityInterest).HasColumnName("FACILITY_INTEREST");

//                entity.Property(e => e.FreeholdInterestReceivable).HasColumnName("FREEHOLD_INTEREST_RECEIVABLE");

//                entity.Property(e => e.GorDeductionPayable).HasColumnName("GOR_DEDUCTION_PAYABLE");

//                entity.Property(e => e.GorDeductionReceivable).HasColumnName("GOR_DEDUCTION_RECEIVABLE");

//                entity.Property(e => e.GorPayable).HasColumnName("GOR_PAYABLE");

//                entity.Property(e => e.GorReceivable).HasColumnName("GOR_RECEIVABLE");

//                entity.Property(e => e.NorPayable).HasColumnName("NOR_PAYABLE");

//                entity.Property(e => e.NorReceivable).HasColumnName("NOR_RECEIVABLE");

//                entity.Property(e => e.NpiPayable).HasColumnName("NPI_PAYABLE");

//                entity.Property(e => e.NpiReceivable).HasColumnName("NPI_RECEIVABLE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostInterest).HasColumnName("OP_COST_INTEREST");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PoolingFactor).HasColumnName("POOLING_FACTOR");

//                entity.Property(e => e.ReversionDate).HasColumnName("REVERSION_DATE");

//                entity.Property(e => e.ReversionType).HasColumnName("REVERSION_TYPE");

//                entity.Property(e => e.ReversionValue).HasColumnName("REVERSION_VALUE");

//                entity.Property(e => e.RoyaltyDeduction).HasColumnName("ROYALTY_DEDUCTION");

//                entity.Property(e => e.RoyaltyFactor).HasColumnName("ROYALTY_FACTOR");

//                entity.Property(e => e.SortIndex).HasColumnName("SORT_INDEX");

//                entity.Property(e => e.TractFactor).HasColumnName("TRACT_FACTOR");

//                entity.Property(e => e.WorkingInterest).HasColumnName("WORKING_INTEREST");
//            });

//            modelBuilder.Entity<TTypecurvesEntSharedPlanDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_ent_shared_plan_data", "stage_valnav");

//                entity.Property(e => e.AcidConcentration).HasColumnName("ACID_CONCENTRATION");

//                entity.Property(e => e.AcidFractureVolume).HasColumnName("ACID_FRACTURE_VOLUME");

//                entity.Property(e => e.AllowNegativeWedge).HasColumnName("ALLOW_NEGATIVE_WEDGE");

//                entity.Property(e => e.ApplyTerminationToChildren).HasColumnName("APPLY_TERMINATION_TO_CHILDREN");

//                entity.Property(e => e.CasingFlange).HasColumnName("CASING_FLANGE");

//                entity.Property(e => e.CompletionType).HasColumnName("COMPLETION_TYPE");

//                entity.Property(e => e.CurrencyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CURRENCY_ID");

//                entity.Property(e => e.ForecastMode).HasColumnName("FORECAST_MODE");

//                entity.Property(e => e.FormationTemperature).HasColumnName("FORMATION_TEMPERATURE");

//                entity.Property(e => e.GasProductType)
//                    .HasMaxLength(50)
//                    .HasColumnName("GAS_PRODUCT_TYPE");

//                entity.Property(e => e.GrossCompInterval).HasColumnName("GROSS_COMP_INTERVAL");

//                entity.Property(e => e.HonorChildLimit).HasColumnName("HONOR_CHILD_LIMIT");

//                entity.Property(e => e.KellyBushing).HasColumnName("KELLY_BUSHING");

//                entity.Property(e => e.LateralLength).HasColumnName("LATERAL_LENGTH");

//                entity.Property(e => e.MeasuredDepth).HasColumnName("MEASURED_DEPTH");

//                entity.Property(e => e.MidPointPerf).HasColumnName("MID_POINT_PERF");

//                entity.Property(e => e.OilProductType)
//                    .HasMaxLength(50)
//                    .HasColumnName("OIL_PRODUCT_TYPE");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PerfBottom).HasColumnName("PERF_BOTTOM");

//                entity.Property(e => e.PerfTop).HasColumnName("PERF_TOP");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.PoolDatum).HasColumnName("POOL_DATUM");

//                entity.Property(e => e.PoolDatumCorrection).HasColumnName("POOL_DATUM_CORRECTION");

//                entity.Property(e => e.RingFenceCalculationId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RING_FENCE_CALCULATION_ID");

//                entity.Property(e => e.RingFenceRegimeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RING_FENCE_REGIME_ID");

//                entity.Property(e => e.SpudDate).HasColumnName("SPUD_DATE");

//                entity.Property(e => e.TotalLateralLength).HasColumnName("TOTAL_LATERAL_LENGTH");

//                entity.Property(e => e.TotalMeasuredDepth).HasColumnName("TOTAL_MEASURED_DEPTH");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("TOTAL_PROPPANT_PLACED");

//                entity.Property(e => e.TrueVerticalDepth).HasColumnName("TRUE_VERTICAL_DEPTH");

//                entity.Property(e => e.TrueVerticalDepthAvg).HasColumnName("TRUE_VERTICAL_DEPTH_AVG");

//                entity.Property(e => e.TrueVerticalDepthMax).HasColumnName("TRUE_VERTICAL_DEPTH_MAX");

//                entity.Property(e => e.UseUneconomicAbanRules).HasColumnName("USE_UNECONOMIC_ABAN_RULES");

//                entity.Property(e => e.WellDatum).HasColumnName("WELL_DATUM");
//            });

//            modelBuilder.Entity<TTypecurvesEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_entity", "stage_valnav");

//                entity.Property(e => e.EntityType).HasColumnName("ENTITY_TYPE");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("FORMATTED_ID");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.SortingId)
//                    .HasMaxLength(100)
//                    .HasColumnName("SORTING_ID");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("UNIQUE_ID");
//            });

//            modelBuilder.Entity<TTypecurvesFiscPriceDeck>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_fisc_price_deck", "stage_valnav");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastChangeDate).HasColumnName("LAST_CHANGE_DATE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");
//            });

//            modelBuilder.Entity<TTypecurvesFiscProductListValue>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_fisc_product_list_value", "stage_valnav");

//                entity.Property(e => e.IsPrimary).HasColumnName("IS_PRIMARY");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.ProductClass).HasColumnName("PRODUCT_CLASS");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.ProductIndex).HasColumnName("PRODUCT_INDEX");
//            });

//            modelBuilder.Entity<TTypecurvesFiscReservesProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_fisc_reserves_product", "stage_valnav");

//                entity.Property(e => e.AssociatedProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("ASSOCIATED_PRODUCT");

//                entity.Property(e => e.IncludeInRecon).HasColumnName("INCLUDE_IN_RECON");

//                entity.Property(e => e.LongName)
//                    .HasMaxLength(50)
//                    .HasColumnName("LONG_NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.QueryNameFragment)
//                    .HasMaxLength(50)
//                    .HasColumnName("QUERY_NAME_FRAGMENT");

//                entity.Property(e => e.ShortName)
//                    .HasMaxLength(50)
//                    .HasColumnName("SHORT_NAME");

//                entity.Property(e => e.SortOrder).HasColumnName("SORT_ORDER");
//            });

//            modelBuilder.Entity<TTypecurvesFiscScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_fisc_scenario", "stage_valnav");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(2000)
//                    .HasColumnName("DESCRIPTION");

//                entity.Property(e => e.LastChangeDate).HasColumnName("LAST_CHANGE_DATE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(205)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OverridePlanParameters).HasColumnName("OVERRIDE_PLAN_PARAMETERS");

//                entity.Property(e => e.OwnedBy)
//                    .HasMaxLength(50)
//                    .HasColumnName("OWNED_BY");

//                entity.Property(e => e.ScenarioType).HasColumnName("SCENARIO_TYPE");
//            });

//            modelBuilder.Entity<TTypecurvesFiscScenarioParam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_fisc_scenario_params", "stage_valnav");

//                entity.Property(e => e.AllowNegWedge).HasColumnName("ALLOW_NEG_WEDGE");

//                entity.Property(e => e.CapActEconCalcOpt).HasColumnName("CAP_ACT_ECON_CALC_OPT");

//                entity.Property(e => e.CapCostFactor).HasColumnName("CAP_COST_FACTOR");

//                entity.Property(e => e.CapCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("CAP_COST_TEMPLATE_ID");

//                entity.Property(e => e.CooOverride).HasColumnName("COO_OVERRIDE");

//                entity.Property(e => e.CosOverride).HasColumnName("COS_OVERRIDE");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EconLimitCalcType).HasColumnName("ECON_LIMIT_CALC_TYPE");

//                entity.Property(e => e.EconLimitDelay).HasColumnName("ECON_LIMIT_DELAY");

//                entity.Property(e => e.EconLimitDiscount).HasColumnName("ECON_LIMIT_DISCOUNT");

//                entity.Property(e => e.EnableAbandonment).HasColumnName("ENABLE_ABANDONMENT");

//                entity.Property(e => e.EnableEconLimit).HasColumnName("ENABLE_ECON_LIMIT");

//                entity.Property(e => e.EnableSaskSurcharge).HasColumnName("ENABLE_SASK_SURCHARGE");

//                entity.Property(e => e.EnableSharedCalculation).HasColumnName("ENABLE_SHARED_CALCULATION");

//                entity.Property(e => e.EscalatePrice).HasColumnName("ESCALATE_PRICE");

//                entity.Property(e => e.InflationOverride).HasColumnName("INFLATION_OVERRIDE");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OBJECT_ID");

//                entity.Property(e => e.OpCostFactor).HasColumnName("OP_COST_FACTOR");

//                entity.Property(e => e.OpCostTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("OP_COST_TEMPLATE_ID");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PARENT_ID");

//                entity.Property(e => e.PlanId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_ID");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.PriceFactor).HasColumnName("PRICE_FACTOR");

//                entity.Property(e => e.PriceTemplateId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_TEMPLATE_ID");

//                entity.Property(e => e.ProductionFactor).HasColumnName("PRODUCTION_FACTOR");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.UseOverlappingHistory).HasColumnName("USE_OVERLAPPING_HISTORY");
//            });

//            modelBuilder.Entity<TTypecurvesResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<TTypecurvesResultsBtax>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_btax", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.DaysInStep).HasColumnName("DAYS_IN_STEP");

//                entity.Property(e => e.FailureCap).HasColumnName("FAILURE_CAP");

//                entity.Property(e => e.FailureNetRevenue).HasColumnName("FAILURE_NET_REVENUE");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.GrossProdWellCount).HasColumnName("GROSS_PROD_WELL_COUNT");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossWellCount).HasColumnName("GROSS_WELL_COUNT");

//                entity.Property(e => e.IsAnnual).HasColumnName("IS_ANNUAL");

//                entity.Property(e => e.MonthsInStep).HasColumnName("MONTHS_IN_STEP");

//                entity.Property(e => e.NetOpIncome).HasColumnName("NET_OP_INCOME");

//                entity.Property(e => e.NetOpIncomeNpv1).HasColumnName("NET_OP_INCOME_NPV1");

//                entity.Property(e => e.NetOpIncomeNpv2).HasColumnName("NET_OP_INCOME_NPV2");

//                entity.Property(e => e.NetOpIncomeNpv3).HasColumnName("NET_OP_INCOME_NPV3");

//                entity.Property(e => e.NetOpIncomeNpv4).HasColumnName("NET_OP_INCOME_NPV4");

//                entity.Property(e => e.NetOpIncomeNpv5).HasColumnName("NET_OP_INCOME_NPV5");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProducingDays).HasColumnName("PRODUCING_DAYS");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("ROY_ADJ_GOR");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyAdjNpi).HasColumnName("ROY_ADJ_NPI");

//                entity.Property(e => e.RoyAdjOtherOverrides).HasColumnName("ROY_ADJ_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("ROY_ADJ_TOTAL");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrGor).HasColumnName("ROY_GR_GOR");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.RoyGrNpi).HasColumnName("ROY_GR_NPI");

//                entity.Property(e => e.RoyGrOtherOverrides).HasColumnName("ROY_GR_OTHER_OVERRIDES");

//                entity.Property(e => e.RoyMineralTax).HasColumnName("ROY_MINERAL_TAX");

//                entity.Property(e => e.SaskCapSurcharge).HasColumnName("SASK_CAP_SURCHARGE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessCap).HasColumnName("SUCCESS_CAP");

//                entity.Property(e => e.SuccessNetRevenue).HasColumnName("SUCCESS_NET_REVENUE");

//                entity.Property(e => e.TaxCredit).HasColumnName("TAX_CREDIT");

//                entity.Property(e => e.WiProdWellCount).HasColumnName("WI_PROD_WELL_COUNT");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiWellCount).HasColumnName("WI_WELL_COUNT");
//            });

//            modelBuilder.Entity<TTypecurvesResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume).HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume).HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume).HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<TTypecurvesResultsCost>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_cost", "stage_valnav");

//                entity.Property(e => e.CapGrAbandonment).HasColumnName("CAP_GR_ABANDONMENT");

//                entity.Property(e => e.CapGrCanAllowance).HasColumnName("CAP_GR_CAN_ALLOWANCE");

//                entity.Property(e => e.CapGrCanDevelopment).HasColumnName("CAP_GR_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapGrCanExploration).HasColumnName("CAP_GR_CAN_EXPLORATION");

//                entity.Property(e => e.CapGrCanProperty).HasColumnName("CAP_GR_CAN_PROPERTY");

//                entity.Property(e => e.CapGrOther).HasColumnName("CAP_GR_OTHER");

//                entity.Property(e => e.CapGrSalvage).HasColumnName("CAP_GR_SALVAGE");

//                entity.Property(e => e.CapGrUsGg).HasColumnName("CAP_GR_US_GG");

//                entity.Property(e => e.CapGrUsIntangible).HasColumnName("CAP_GR_US_INTANGIBLE");

//                entity.Property(e => e.CapGrUsPropLease).HasColumnName("CAP_GR_US_PROP_LEASE");

//                entity.Property(e => e.CapGrUsTangible).HasColumnName("CAP_GR_US_TANGIBLE");

//                entity.Property(e => e.CapUnriskedAbandonment).HasColumnName("CAP_UNRISKED_ABANDONMENT");

//                entity.Property(e => e.CapUnriskedCanAllowance).HasColumnName("CAP_UNRISKED_CAN_ALLOWANCE");

//                entity.Property(e => e.CapUnriskedCanDevelopment).HasColumnName("CAP_UNRISKED_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapUnriskedCanExploration).HasColumnName("CAP_UNRISKED_CAN_EXPLORATION");

//                entity.Property(e => e.CapUnriskedCanProperty).HasColumnName("CAP_UNRISKED_CAN_PROPERTY");

//                entity.Property(e => e.CapUnriskedSalvage).HasColumnName("CAP_UNRISKED_SALVAGE");

//                entity.Property(e => e.CapUnriskedUsGg).HasColumnName("CAP_UNRISKED_US_GG");

//                entity.Property(e => e.CapUnriskedUsIntangible).HasColumnName("CAP_UNRISKED_US_INTANGIBLE");

//                entity.Property(e => e.CapUnriskedUsPropLease).HasColumnName("CAP_UNRISKED_US_PROP_LEASE");

//                entity.Property(e => e.CapUnriskedUsTangible).HasColumnName("CAP_UNRISKED_US_TANGIBLE");

//                entity.Property(e => e.CapWiAbandonment).HasColumnName("CAP_WI_ABANDONMENT");

//                entity.Property(e => e.CapWiCanAllowance).HasColumnName("CAP_WI_CAN_ALLOWANCE");

//                entity.Property(e => e.CapWiCanDevelopment).HasColumnName("CAP_WI_CAN_DEVELOPMENT");

//                entity.Property(e => e.CapWiCanExploration).HasColumnName("CAP_WI_CAN_EXPLORATION");

//                entity.Property(e => e.CapWiCanProperty).HasColumnName("CAP_WI_CAN_PROPERTY");

//                entity.Property(e => e.CapWiOther).HasColumnName("CAP_WI_OTHER");

//                entity.Property(e => e.CapWiSalvage).HasColumnName("CAP_WI_SALVAGE");

//                entity.Property(e => e.CapWiUsGg).HasColumnName("CAP_WI_US_GG");

//                entity.Property(e => e.CapWiUsIntangible).HasColumnName("CAP_WI_US_INTANGIBLE");

//                entity.Property(e => e.CapWiUsPropLease).HasColumnName("CAP_WI_US_PROP_LEASE");

//                entity.Property(e => e.CapWiUsTangible).HasColumnName("CAP_WI_US_TANGIBLE");

//                entity.Property(e => e.OpFiGrFixed).HasColumnName("OP_FI_GR_FIXED");

//                entity.Property(e => e.OpFiGrVariable).HasColumnName("OP_FI_GR_VARIABLE");

//                entity.Property(e => e.OpFiWiFixed).HasColumnName("OP_FI_WI_FIXED");

//                entity.Property(e => e.OpFiWiVariable).HasColumnName("OP_FI_WI_VARIABLE");

//                entity.Property(e => e.OpGrOtherRevenue).HasColumnName("OP_GR_OTHER_REVENUE");

//                entity.Property(e => e.OpWiGrFixed).HasColumnName("OP_WI_GR_FIXED");

//                entity.Property(e => e.OpWiGrVariable).HasColumnName("OP_WI_GR_VARIABLE");

//                entity.Property(e => e.OpWiOtherRevenue).HasColumnName("OP_WI_OTHER_REVENUE");

//                entity.Property(e => e.OpWiWiFixed).HasColumnName("OP_WI_WI_FIXED");

//                entity.Property(e => e.OpWiWiVariable).HasColumnName("OP_WI_WI_VARIABLE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");
//            });

//            modelBuilder.Entity<TTypecurvesResultsCostDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_cost_detail", "stage_valnav");

//                entity.Property(e => e.CostDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COST_DEFINITION_ID");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("FAILURE_GROSS_VALUE");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("FAILURE_INTEREST_VALUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("SUCCESS_GROSS_VALUE");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("SUCCESS_INTEREST_VALUE");
//            });

//            modelBuilder.Entity<TTypecurvesResultsLookup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_lookup", "stage_valnav");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.PlanDefinitionId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PLAN_DEFINITION_ID");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("RESERVE_CATEGORY_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.ResultType).HasColumnName("RESULT_TYPE");

//                entity.Property(e => e.ScenarioId)
//                    .HasMaxLength(50)
//                    .HasColumnName("SCENARIO_ID");
//            });

//            modelBuilder.Entity<TTypecurvesResultsRegime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_regime", "stage_valnav");

//                entity.Property(e => e.AdValorem).HasColumnName("AD_VALOREM");

//                entity.Property(e => e.AdValoremBasis).HasColumnName("AD_VALOREM_BASIS");

//                entity.Property(e => e.BasicTax).HasColumnName("BASIC_TAX");

//                entity.Property(e => e.Bonus).HasColumnName("BONUS");

//                entity.Property(e => e.CostRecovery).HasColumnName("COST_RECOVERY");

//                entity.Property(e => e.Credits).HasColumnName("CREDITS");

//                entity.Property(e => e.Dda).HasColumnName("DDA");

//                entity.Property(e => e.DesignatedRor).HasColumnName("DESIGNATED_ROR");

//                entity.Property(e => e.Dmo).HasColumnName("DMO");

//                entity.Property(e => e.Expense).HasColumnName("EXPENSE");

//                entity.Property(e => e.Income).HasColumnName("INCOME");

//                entity.Property(e => e.InvestmentCredits).HasColumnName("INVESTMENT_CREDITS");

//                entity.Property(e => e.ProfitRevenue).HasColumnName("PROFIT_REVENUE");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.Royalty).HasColumnName("ROYALTY");

//                entity.Property(e => e.ServiceFee).HasColumnName("SERVICE_FEE");

//                entity.Property(e => e.Severance).HasColumnName("SEVERANCE");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.Tranche).HasColumnName("TRANCHE");

//                entity.Property(e => e.Uplift).HasColumnName("UPLIFT");
//            });

//            modelBuilder.Entity<TTypecurvesResultsSummary>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_summary", "stage_valnav");

//                entity.Property(e => e.AbandonDate).HasColumnName("ABANDON_DATE");

//                entity.Property(e => e.AtaxNetRevenue).HasColumnName("ATAX_NET_REVENUE");

//                entity.Property(e => e.AtaxNpv1).HasColumnName("ATAX_NPV1");

//                entity.Property(e => e.AtaxNpv2).HasColumnName("ATAX_NPV2");

//                entity.Property(e => e.AtaxNpv3).HasColumnName("ATAX_NPV3");

//                entity.Property(e => e.AtaxNpv4).HasColumnName("ATAX_NPV4");

//                entity.Property(e => e.AtaxNpv5).HasColumnName("ATAX_NPV5");

//                entity.Property(e => e.AtaxPayout).HasColumnName("ATAX_PAYOUT");

//                entity.Property(e => e.AtaxProfitRatio).HasColumnName("ATAX_PROFIT_RATIO");

//                entity.Property(e => e.AtaxProfitRatioNpv1).HasColumnName("ATAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.AtaxProfitRatioNpv2).HasColumnName("ATAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.AtaxProfitRatioNpv3).HasColumnName("ATAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.AtaxProfitRatioNpv4).HasColumnName("ATAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.AtaxProfitRatioNpv5).HasColumnName("ATAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.AtaxRor).HasColumnName("ATAX_ROR");

//                entity.Property(e => e.BtaxNetRevenue).HasColumnName("BTAX_NET_REVENUE");

//                entity.Property(e => e.BtaxNpv1).HasColumnName("BTAX_NPV1");

//                entity.Property(e => e.BtaxNpv2).HasColumnName("BTAX_NPV2");

//                entity.Property(e => e.BtaxNpv3).HasColumnName("BTAX_NPV3");

//                entity.Property(e => e.BtaxNpv4).HasColumnName("BTAX_NPV4");

//                entity.Property(e => e.BtaxNpv5).HasColumnName("BTAX_NPV5");

//                entity.Property(e => e.BtaxPayout).HasColumnName("BTAX_PAYOUT");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("BTAX_PROFIT_RATIO");

//                entity.Property(e => e.BtaxProfitRatioNpv1).HasColumnName("BTAX_PROFIT_RATIO_NPV1");

//                entity.Property(e => e.BtaxProfitRatioNpv2).HasColumnName("BTAX_PROFIT_RATIO_NPV2");

//                entity.Property(e => e.BtaxProfitRatioNpv3).HasColumnName("BTAX_PROFIT_RATIO_NPV3");

//                entity.Property(e => e.BtaxProfitRatioNpv4).HasColumnName("BTAX_PROFIT_RATIO_NPV4");

//                entity.Property(e => e.BtaxProfitRatioNpv5).HasColumnName("BTAX_PROFIT_RATIO_NPV5");

//                entity.Property(e => e.BtaxRor).HasColumnName("BTAX_ROR");

//                entity.Property(e => e.CalculationApplyEconLimit).HasColumnName("CALCULATION_APPLY_ECON_LIMIT");

//                entity.Property(e => e.CalculationCoo).HasColumnName("CALCULATION_COO");

//                entity.Property(e => e.CalculationCos).HasColumnName("CALCULATION_COS");

//                entity.Property(e => e.CalculationType).HasColumnName("CALCULATION_TYPE");

//                entity.Property(e => e.CapCoshareBoe).HasColumnName("CAP_COSHARE_BOE");

//                entity.Property(e => e.CapNetBoe).HasColumnName("CAP_NET_BOE");

//                entity.Property(e => e.CapWiBoe).HasColumnName("CAP_WI_BOE");

//                entity.Property(e => e.CountryId)
//                    .HasMaxLength(50)
//                    .HasColumnName("COUNTRY_ID");

//                entity.Property(e => e.DiscountDate).HasColumnName("DISCOUNT_DATE");

//                entity.Property(e => e.EntityCurrencyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_CURRENCY_ID");

//                entity.Property(e => e.EntityList)
//                    .HasMaxLength(50)
//                    .HasColumnName("ENTITY_LIST");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("ENTITY_NAME");

//                entity.Property(e => e.ExplorerTypeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("EXPLORER_TYPE_ID");

//                entity.Property(e => e.ForecastEnd).HasColumnName("FORECAST_END");

//                entity.Property(e => e.ForecastStart).HasColumnName("FORECAST_START");

//                entity.Property(e => e.HasReportValue).HasColumnName("HAS_REPORT_VALUE");

//                entity.Property(e => e.HierarchyId)
//                    .HasMaxLength(50)
//                    .HasColumnName("HIERARCHY_ID");

//                entity.Property(e => e.InitialGenWi).HasColumnName("INITIAL_GEN_WI");

//                entity.Property(e => e.InputPrimaryProduct).HasColumnName("INPUT_PRIMARY_PRODUCT");

//                entity.Property(e => e.OpCoshareBoe).HasColumnName("OP_COSHARE_BOE");

//                entity.Property(e => e.OpNetBoe).HasColumnName("OP_NET_BOE");

//                entity.Property(e => e.OpWiBoe).HasColumnName("OP_WI_BOE");

//                entity.Property(e => e.PriceDeckId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRICE_DECK_ID");

//                entity.Property(e => e.ProductionStart).HasColumnName("PRODUCTION_START");

//                entity.Property(e => e.ProvinceId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PROVINCE_ID");

//                entity.Property(e => e.ReferenceDate).HasColumnName("REFERENCE_DATE");

//                entity.Property(e => e.RegimeId)
//                    .HasMaxLength(50)
//                    .HasColumnName("REGIME_ID");

//                entity.Property(e => e.ResultDelta).HasColumnName("RESULT_DELTA");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.TaxCalculationId)
//                    .HasMaxLength(50)
//                    .HasColumnName("TAX_CALCULATION_ID");

//                entity.Property(e => e.TaxEnd).HasColumnName("TAX_END");

//                entity.Property(e => e.TaxPaid).HasColumnName("TAX_PAID");

//                entity.Property(e => e.TerminationDate).HasColumnName("TERMINATION_DATE");

//                entity.Property(e => e.UserId)
//                    .HasMaxLength(50)
//                    .HasColumnName("USER_ID");
//            });

//            modelBuilder.Entity<TTypecurvesResultsSummaryProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_typecurves_results_summary_product", "stage_valnav");

//                entity.Property(e => e.InitialWi).HasColumnName("INITIAL_WI");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.TechCumGrossVolume).HasColumnName("TECH_CUM_GROSS_VOLUME");

//                entity.Property(e => e.TechCumNetVolume).HasColumnName("TECH_CUM_NET_VOLUME");

//                entity.Property(e => e.TechCumRawGrossVolume).HasColumnName("TECH_CUM_RAW_GROSS_VOLUME");

//                entity.Property(e => e.TechCumRawNetVolume).HasColumnName("TECH_CUM_RAW_NET_VOLUME");

//                entity.Property(e => e.TechCumRawRiVolume).HasColumnName("TECH_CUM_RAW_RI_VOLUME");

//                entity.Property(e => e.TechCumRawWiVolume).HasColumnName("TECH_CUM_RAW_WI_VOLUME");

//                entity.Property(e => e.TechCumRiVolume).HasColumnName("TECH_CUM_RI_VOLUME");

//                entity.Property(e => e.TechCumWiVolume).HasColumnName("TECH_CUM_WI_VOLUME");

//                entity.Property(e => e.TechRemGrossVolume).HasColumnName("TECH_REM_GROSS_VOLUME");

//                entity.Property(e => e.TechRemNetVolume).HasColumnName("TECH_REM_NET_VOLUME");

//                entity.Property(e => e.TechRemRawGrossVolume).HasColumnName("TECH_REM_RAW_GROSS_VOLUME");

//                entity.Property(e => e.TechRemRawNetVolume).HasColumnName("TECH_REM_RAW_NET_VOLUME");

//                entity.Property(e => e.TechRemRawRiVolume).HasColumnName("TECH_REM_RAW_RI_VOLUME");

//                entity.Property(e => e.TechRemRawWiVolume).HasColumnName("TECH_REM_RAW_WI_VOLUME");

//                entity.Property(e => e.TechRemRiVolume).HasColumnName("TECH_REM_RI_VOLUME");

//                entity.Property(e => e.TechRemWiVolume).HasColumnName("TECH_REM_WI_VOLUME");
//            });

//            modelBuilder.Entity<TValnavDimHierarchyHistory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_dim_hierarchy_history", "stage");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA");

//                entity.Property(e => e.AreaDisplay)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA_DISPLAY");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA_NAME");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_GROUP");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_QUARTER");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("BUDGET_YEAR");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_GROUP");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_TYPE");

//                entity.Property(e => e.CcName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NAME");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CGU");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("CHANCE_OF_SUCCESS");

//                entity.Property(e => e.CurrentReserveProperty)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("CURRENT_RESERVE_PROPERTY");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DE_RISK");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("DEPTH_GCI");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT");

//                entity.Property(e => e.DistrictDisplay)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT_DISPLAY");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT_NAME");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("DRILL_DAYS");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_GUID");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY");

//                entity.Property(e => e.FacilityDisplay)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_DISPLAY");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_NAME");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FORMATTED_UWI");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("NRA");

//                entity.Property(e => e.OnProdDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_PROD_DATE");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("OP_NONOP");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PRODUCT");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("REGION");

//                entity.Property(e => e.RegionDisplay)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REGION_DISPLAY");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("REGION_NAME");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("RESERVE_REALIZED_DATE");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("ROYALTY_INCOME_INTEREST");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_CC_NAME");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_CC_NUM");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_DIRECTION");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("WORKING_INTEREST");

//                entity.Property(e => e.YearEndReserveProperty)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("YEAR_END_RESERVE_PROPERTY");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("ZONE_PLAY");
//            });

//            modelBuilder.Entity<TValnavDimHierarchySource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_dim_hierarchy_source", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Incentive_Type");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength).HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SourceDb)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("source_db");

//                entity.Property(e => e.SourceDbSortKey).HasColumnName("source_db_sort_key");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<TValnavOnstreamDateBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_onstream_date_budget", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<TValnavOnstreamDateReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_onstream_date_reserves", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<TValnavOnstreamDateTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_onstream_date_typecurves", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<TValnavXlsReservesUwi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_valnav_xls_reserves_uwis", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<TVendorInvoice>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_vendor_invoices", "stage");

//                entity.Property(e => e.InvcId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.VendorId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.VendorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_name");
//            });

//            modelBuilder.Entity<TWellviewVendorLibrary>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_vendor_library", "stage");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(255)
//                    .IsUnicode(false);

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<TWellviewWvtWvca>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvcas", "stage");

//                entity.Property(e => e.Centralizers)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("centralizers");

//                entity.Property(e => e.Centralizersstandoffavg).HasColumnName("centralizersstandoffavg");

//                entity.Property(e => e.Centralizersstandoffmin).HasColumnName("centralizersstandoffmin");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Contractor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contractor");

//                entity.Property(e => e.Depthbtm).HasColumnName("depthbtm");

//                entity.Property(e => e.Depthcutpull).HasColumnName("depthcutpull");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Dttmcutpull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmcutpull");

//                entity.Property(e => e.Dttmonbottom)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmonbottom");

//                entity.Property(e => e.Dttmoutofhole)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmoutofhole");

//                entity.Property(e => e.Dttmpickup)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmpickup");

//                entity.Property(e => e.Dttmpull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmpull");

//                entity.Property(e => e.Dttmrun)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmrun");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecjobpull)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobpull");

//                entity.Property(e => e.Idrecjobpulltk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobpulltk");

//                entity.Property(e => e.Idrecjobrun)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobrun");

//                entity.Property(e => e.Idrecjobruntk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobruntk");

//                entity.Property(e => e.Idrecwellbore)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellbore");

//                entity.Property(e => e.Idrecwellboretk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellboretk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Latposition)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("latposition");

//                entity.Property(e => e.Notecutpull)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("notecutpull");

//                entity.Property(e => e.Operatingpresslimit).HasColumnName("operatingpresslimit");

//                entity.Property(e => e.Proposedcutpull).HasColumnName("proposedcutpull");

//                entity.Property(e => e.Proposedpull).HasColumnName("proposedpull");

//                entity.Property(e => e.Proposedrun).HasColumnName("proposedrun");

//                entity.Property(e => e.Pullreason)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pullreason");

//                entity.Property(e => e.Pullreasondetail)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pullreasondetail");

//                entity.Property(e => e.Reasoncutpull)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("reasoncutpull");

//                entity.Property(e => e.Scratchers)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("scratchers");

//                entity.Property(e => e.Stringwtdown).HasColumnName("stringwtdown");

//                entity.Property(e => e.Stringwtup).HasColumnName("stringwtup");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Tension).HasColumnName("tension");

//                entity.Property(e => e.Travelequipwt).HasColumnName("travelequipwt");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Volumeshoetrack).HasColumnName("volumeshoetrack");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjob>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjob", "stage");

//                entity.Property(e => e.Chartofaccounts)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("chartofaccounts");

//                entity.Property(e => e.Client)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("client");

//                entity.Property(e => e.Complexityindex)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("complexityindex");

//                entity.Property(e => e.Costfinalactual).HasColumnName("costfinalactual");

//                entity.Property(e => e.Currencycode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("currencycode");

//                entity.Property(e => e.Currencyexchangerate).HasColumnName("currencyexchangerate");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmspud)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmspud");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Dttmstartplan)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstartplan");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrectub)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectub");

//                entity.Property(e => e.Idrectubtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrectubtk");

//                entity.Property(e => e.Idrecwellbore)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellbore");

//                entity.Property(e => e.Idrecwellboretk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellboretk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Jobida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobida");

//                entity.Property(e => e.Jobidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobidb");

//                entity.Property(e => e.Jobidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("jobidc");

//                entity.Property(e => e.Jobsubtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("jobsubtyp");

//                entity.Property(e => e.Jobtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("jobtyp");

//                entity.Property(e => e.Objective)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("objective");

//                entity.Property(e => e.Objectivegeo)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("objectivegeo");

//                entity.Property(e => e.Rateactualcond).HasColumnName("rateactualcond");

//                entity.Property(e => e.Rateactualgas).HasColumnName("rateactualgas");

//                entity.Property(e => e.Rateactualoil).HasColumnName("rateactualoil");

//                entity.Property(e => e.Rateactualwater).HasColumnName("rateactualwater");

//                entity.Property(e => e.Ratetargetcond).HasColumnName("ratetargetcond");

//                entity.Property(e => e.Ratetargetgas).HasColumnName("ratetargetgas");

//                entity.Property(e => e.Ratetargetoil).HasColumnName("ratetargetoil");

//                entity.Property(e => e.Ratetargetwater).HasColumnName("ratetargetwater");

//                entity.Property(e => e.Responsiblegrp1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp1");

//                entity.Property(e => e.Responsiblegrp2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp2");

//                entity.Property(e => e.Responsiblegrp3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("responsiblegrp3");

//                entity.Property(e => e.Resulttechnical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("resulttechnical");

//                entity.Property(e => e.Status1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status1");

//                entity.Property(e => e.Status2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("status2");

//                entity.Property(e => e.Summary)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summary");

//                entity.Property(e => e.Summarygeo)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summarygeo");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Targetdepth).HasColumnName("targetdepth");

//                entity.Property(e => e.Targetform)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("targetform");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Wvtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("wvtyp");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobafe>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobafe", "stage");

//                entity.Property(e => e.Afenumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afenumber");

//                entity.Property(e => e.Afenumbersupp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afenumbersupp");

//                entity.Property(e => e.Afestatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afestatus");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Costtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("costtyp");

//                entity.Property(e => e.Dttmafe)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmafe");

//                entity.Property(e => e.Dttmafeclose)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmafeclose");

//                entity.Property(e => e.Exclude).HasColumnName("exclude");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Projectname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("projectname");

//                entity.Property(e => e.Projectrefnumber)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("projectrefnumber");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.Workingint).HasColumnName("workingint");

//                entity.Property(e => e.Workingintnote)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("workingintnote");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobdrillstring>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobdrillstring", "stage");

//                entity.Property(e => e.Bitno)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("bitno");

//                entity.Property(e => e.Bittfa).HasColumnName("bittfa");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Dircontrolmethod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dircontrolmethod");

//                entity.Property(e => e.Dttmoutofhole)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmoutofhole");

//                entity.Property(e => e.Dttmpickup)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmpickup");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecbit)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecbit");

//                entity.Property(e => e.Idrecbittk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecbittk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Proposed).HasColumnName("proposed");

//                entity.Property(e => e.Stringno).HasColumnName("stringno");

//                entity.Property(e => e.Stringobjective)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("stringobjective");

//                entity.Property(e => e.Stringresult)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("stringresult");

//                entity.Property(e => e.Stringresultdetail)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("stringresultdetail");

//                entity.Property(e => e.Stringresultnote)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("stringresultnote");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Travelequipwt).HasColumnName("travelequipwt");

//                entity.Property(e => e.Triphookloadmax).HasColumnName("triphookloadmax");

//                entity.Property(e => e.Tripnote)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("tripnote");

//                entity.Property(e => e.Tripoverpullmax).HasColumnName("tripoverpullmax");

//                entity.Property(e => e.Triprateinavg).HasColumnName("triprateinavg");

//                entity.Property(e => e.Triprateinmax).HasColumnName("triprateinmax");

//                entity.Property(e => e.Triprateoutavg).HasColumnName("triprateoutavg");

//                entity.Property(e => e.Triprateoutmax).HasColumnName("triprateoutmax");

//                entity.Property(e => e.Wearbearing)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("wearbearing");

//                entity.Property(e => e.Weardull)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("weardull");

//                entity.Property(e => e.Weargauge)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("weargauge");

//                entity.Property(e => e.Wearinner).HasColumnName("wearinner");

//                entity.Property(e => e.Wearloc)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("wearloc");

//                entity.Property(e => e.Wearother)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("wearother");

//                entity.Property(e => e.Wearouter).HasColumnName("wearouter");

//                entity.Property(e => e.Wearpulled)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("wearpulled");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobdrillstringdrillparam>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobdrillstringdrillparam", "stage");

//                entity.Property(e => e.Bhaanpres).HasColumnName("bhaanpres");

//                entity.Property(e => e.Bhtemp).HasColumnName("bhtemp");

//                entity.Property(e => e.Depthend).HasColumnName("depthend");

//                entity.Property(e => e.Depthstart).HasColumnName("depthstart");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Ecdendoverride).HasColumnName("ecdendoverride");

//                entity.Property(e => e.Excludefromnewhole).HasColumnName("excludefromnewhole");

//                entity.Property(e => e.Gasinjrate).HasColumnName("gasinjrate");

//                entity.Property(e => e.Gasreturnrate).HasColumnName("gasreturnrate");

//                entity.Property(e => e.Hookloadoffbottom).HasColumnName("hookloadoffbottom");

//                entity.Property(e => e.Hookloadpickup).HasColumnName("hookloadpickup");

//                entity.Property(e => e.Hookloadrotating).HasColumnName("hookloadrotating");

//                entity.Property(e => e.Hookloadslackoff).HasColumnName("hookloadslackoff");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecwellbore)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellbore");

//                entity.Property(e => e.Idrecwellboretk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecwellboretk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Injtemp).HasColumnName("injtemp");

//                entity.Property(e => e.Liquidinjrate).HasColumnName("liquidinjrate");

//                entity.Property(e => e.Liquidinjrateriser).HasColumnName("liquidinjrateriser");

//                entity.Property(e => e.Liquidreturnrate).HasColumnName("liquidreturnrate");

//                entity.Property(e => e.Note)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("note");

//                entity.Property(e => e.Refnostand)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("refnostand");

//                entity.Property(e => e.Ropinst).HasColumnName("ropinst");

//                entity.Property(e => e.Rpmmotor).HasColumnName("rpmmotor");

//                entity.Property(e => e.Rpmstring).HasColumnName("rpmstring");

//                entity.Property(e => e.Sppdiff).HasColumnName("sppdiff");

//                entity.Property(e => e.Sppdrill).HasColumnName("sppdrill");

//                entity.Property(e => e.Surfannpres).HasColumnName("surfannpres");

//                entity.Property(e => e.Surfanntemp).HasColumnName("surfanntemp");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szodvgstab).HasColumnName("szodvgstab");

//                entity.Property(e => e.Tfo).HasColumnName("tfo");

//                entity.Property(e => e.Tforef)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tforef");

//                entity.Property(e => e.Tmcirc).HasColumnName("tmcirc");

//                entity.Property(e => e.Tmdrill).HasColumnName("tmdrill");

//                entity.Property(e => e.Tmother).HasColumnName("tmother");

//                entity.Property(e => e.Tmtrip).HasColumnName("tmtrip");

//                entity.Property(e => e.Torquedrill).HasColumnName("torquedrill");

//                entity.Property(e => e.Torqueoffbtm).HasColumnName("torqueoffbtm");

//                entity.Property(e => e.Torqueunits)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("torqueunits");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Wob).HasColumnName("wob");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobreport>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobreport", "stage");

//                entity.Property(e => e.Condhole)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condhole");

//                entity.Property(e => e.Condlease)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condlease");

//                entity.Property(e => e.Condroad)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condroad");

//                entity.Property(e => e.Condtemp).HasColumnName("condtemp");

//                entity.Property(e => e.Condwave)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condwave");

//                entity.Property(e => e.Condweather)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condweather");

//                entity.Property(e => e.Condwind)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("condwind");

//                entity.Property(e => e.Depthtvdendprojmethod)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("depthtvdendprojmethod");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Durationsinceltinc).HasColumnName("durationsinceltinc");

//                entity.Property(e => e.Durationsincerptinc).HasColumnName("durationsincerptinc");

//                entity.Property(e => e.Gasbackgroundavg).HasColumnName("gasbackgroundavg");

//                entity.Property(e => e.Gasbackgroundmax).HasColumnName("gasbackgroundmax");

//                entity.Property(e => e.Gasconnectionavg).HasColumnName("gasconnectionavg");

//                entity.Property(e => e.Gasconnectionmax).HasColumnName("gasconnectionmax");

//                entity.Property(e => e.Gasdrillavg).HasColumnName("gasdrillavg");

//                entity.Property(e => e.Gasdrillmax).HasColumnName("gasdrillmax");

//                entity.Property(e => e.Gastripavg).HasColumnName("gastripavg");

//                entity.Property(e => e.Gastripmax).HasColumnName("gastripmax");

//                entity.Property(e => e.H2smax).HasColumnName("h2smax");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecnextcas)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnextcas");

//                entity.Property(e => e.Idrecnextcastk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecnextcastk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Plannextrptops)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("plannextrptops");

//                entity.Property(e => e.Remarks)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("remarks");

//                entity.Property(e => e.Rigtime).HasColumnName("rigtime");

//                entity.Property(e => e.Rpttmactops)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("rpttmactops");

//                entity.Property(e => e.Statusend)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("statusend");

//                entity.Property(e => e.Summaryops)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("summaryops");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobreportcostgen>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobreportcostgen", "stage");

//                entity.Property(e => e.Code1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code1");

//                entity.Property(e => e.Code2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code2");

//                entity.Property(e => e.Code3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code3");

//                entity.Property(e => e.Code4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code4");

//                entity.Property(e => e.Code5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code5");

//                entity.Property(e => e.Code6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("code6");

//                entity.Property(e => e.Cost).HasColumnName("cost");

//                entity.Property(e => e.Des)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("des");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecafecustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustom");

//                entity.Property(e => e.Idrecafecustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecafecustomtk");

//                entity.Property(e => e.Idrecintervalproblemcustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecintervalproblemcustom");

//                entity.Property(e => e.Idrecintervalproblemcustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecintervalproblemcustomtk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idrecphasecustom)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecphasecustom");

//                entity.Property(e => e.Idrecphasecustomtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecphasecustomtk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Intervalproblempct).HasColumnName("intervalproblempct");

//                entity.Property(e => e.Note)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("note");

//                entity.Property(e => e.Opscategory)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("opscategory");

//                entity.Property(e => e.Polineno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("polineno");

//                entity.Property(e => e.Pono)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pono");

//                entity.Property(e => e.Sn)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sn");

//                entity.Property(e => e.Syscarryfwdp).HasColumnName("syscarryfwdp");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysseq).HasColumnName("sysseq");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Ticketno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ticketno");

//                entity.Property(e => e.Unschedtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("unschedtyp");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");

//                entity.Property(e => e.Vendorsubcode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorsubcode");

//                entity.Property(e => e.Workorderno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("workorderno");
//            });

//            modelBuilder.Entity<TWellviewWvtWvjobrig>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvjobrig", "stage");

//                entity.Property(e => e.Anchorlinetyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("anchorlinetyp");

//                entity.Property(e => e.Anchormaxtension).HasColumnName("anchormaxtension");

//                entity.Property(e => e.Anchorno).HasColumnName("anchorno");

//                entity.Property(e => e.Anchortyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("anchortyp");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Contractor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contractor");

//                entity.Property(e => e.Contractorparent)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("contractorparent");

//                entity.Property(e => e.Contracttyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("contracttyp");

//                entity.Property(e => e.Depthmax).HasColumnName("depthmax");

//                entity.Property(e => e.Derricktyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("derricktyp");

//                entity.Property(e => e.Drawworkmake)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drawworkmake");

//                entity.Property(e => e.Drawworkmodel)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drawworkmodel");

//                entity.Property(e => e.Drawworktyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drawworktyp");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Heightmastclearance).HasColumnName("heightmastclearance");

//                entity.Property(e => e.Heightsubclear).HasColumnName("heightsubclear");

//                entity.Property(e => e.Hookloadmax).HasColumnName("hookloadmax");

//                entity.Property(e => e.Idrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrec");

//                entity.Property(e => e.Idrecjobcontactcontractor)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobcontactcontractor");

//                entity.Property(e => e.Idrecjobcontactcontractortk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecjobcontactcontractortk");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Inventoryno)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("inventoryno");

//                entity.Property(e => e.Lengthchokeline).HasColumnName("lengthchokeline");

//                entity.Property(e => e.Lengthkillline).HasColumnName("lengthkillline");

//                entity.Property(e => e.Maxvariableload).HasColumnName("maxvariableload");

//                entity.Property(e => e.Postyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("postyp");

//                entity.Property(e => e.Power).HasColumnName("power");

//                entity.Property(e => e.Powertyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("powertyp");

//                entity.Property(e => e.Proposed).HasColumnName("proposed");

//                entity.Property(e => e.Purpose)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("purpose");

//                entity.Property(e => e.Refheight).HasColumnName("refheight");

//                entity.Property(e => e.Rigno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rigno");

//                entity.Property(e => e.Rigrateref).HasColumnName("rigrateref");

//                entity.Property(e => e.Rotarysystem)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rotarysystem");

//                entity.Property(e => e.Setbackcapacity).HasColumnName("setbackcapacity");

//                entity.Property(e => e.Slipjtextmax).HasColumnName("slipjtextmax");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Szidchokeline).HasColumnName("szidchokeline");

//                entity.Property(e => e.Szidkillline).HasColumnName("szidkillline");

//                entity.Property(e => e.Torquemax).HasColumnName("torquemax");

//                entity.Property(e => e.Transportloads).HasColumnName("transportloads");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Volsurfline).HasColumnName("volsurfline");

//                entity.Property(e => e.Waterdepthmax).HasColumnName("waterdepthmax");

//                entity.Property(e => e.Weightblock).HasColumnName("weightblock");
//            });

//            modelBuilder.Entity<TWellviewWvtWvwellheader>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("t_wellview_wvt_wvwellheader", "stage");

//                entity.Property(e => e.Agent)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("agent");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.Basin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("basin");

//                entity.Property(e => e.Basincode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("basincode");

//                entity.Property(e => e.Com)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("com");

//                entity.Property(e => e.Country)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("country");

//                entity.Property(e => e.County)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("county");

//                entity.Property(e => e.Currentwellstatus1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("currentwellstatus1");

//                entity.Property(e => e.Currentwellstatus2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("currentwellstatus2");

//                entity.Property(e => e.Directionstowell)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("directionstowell");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("division");

//                entity.Property(e => e.Divisioncode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("divisioncode");

//                entity.Property(e => e.Dttmabandon)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmabandon");

//                entity.Property(e => e.Dttmfirstprod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmfirstprod");

//                entity.Property(e => e.Dttmrr)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmrr");

//                entity.Property(e => e.Dttmspud)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmspud");

//                entity.Property(e => e.Dttmwellclass)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmwellclass");

//                entity.Property(e => e.Dttmwelllic)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmwelllic");

//                entity.Property(e => e.Elvcasflange).HasColumnName("elvcasflange");

//                entity.Property(e => e.Elvground).HasColumnName("elvground");

//                entity.Property(e => e.Elvlat).HasColumnName("elvlat");

//                entity.Property(e => e.Elvmudline).HasColumnName("elvmudline");

//                entity.Property(e => e.Elvorigkb).HasColumnName("elvorigkb");

//                entity.Property(e => e.Elvtubhead).HasColumnName("elvtubhead");

//                entity.Property(e => e.Environmentsensitive).HasColumnName("environmentsensitive");

//                entity.Property(e => e.Ewdist).HasColumnName("ewdist");

//                entity.Property(e => e.Ewflag)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("ewflag");

//                entity.Property(e => e.Fieldcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldcode");

//                entity.Property(e => e.Fieldname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldname");

//                entity.Property(e => e.Fieldoffice)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldoffice");

//                entity.Property(e => e.Fieldofficecode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("fieldofficecode");

//                entity.Property(e => e.Govauthority)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("govauthority");

//                entity.Property(e => e.Hih2s).HasColumnName("hih2s");

//                entity.Property(e => e.Hisitp).HasColumnName("hisitp");

//                entity.Property(e => e.Idrecelvhistory)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecelvhistory");

//                entity.Property(e => e.Idrecelvhistorytk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecelvhistorytk");

//                entity.Property(e => e.Idwell)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idwell");

//                entity.Property(e => e.Latitude).HasColumnName("latitude");

//                entity.Property(e => e.Latlongdatum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongdatum");

//                entity.Property(e => e.Latlongsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("latlongsource");

//                entity.Property(e => e.Lease)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("lease");

//                entity.Property(e => e.Leasecode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("leasecode");

//                entity.Property(e => e.Legalsurveyloc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurveyloc");

//                entity.Property(e => e.Legalsurveysubtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurveysubtyp");

//                entity.Property(e => e.Legalsurveytyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("legalsurveytyp");

//                entity.Property(e => e.Localtimezone).HasColumnName("localtimezone");

//                entity.Property(e => e.Locationnote)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("locationnote");

//                entity.Property(e => e.Locationref)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("locationref");

//                entity.Property(e => e.Locationsensitive).HasColumnName("locationsensitive");

//                entity.Property(e => e.Locationtyp)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("locationtyp");

//                entity.Property(e => e.Longitude).HasColumnName("longitude");

//                entity.Property(e => e.Nsdist).HasColumnName("nsdist");

//                entity.Property(e => e.Nsflag)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("nsflag");

//                entity.Property(e => e.Operated).HasColumnName("operated");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Operatorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("operatorcode");

//                entity.Property(e => e.Padcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padcode");

//                entity.Property(e => e.Padname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("padname");

//                entity.Property(e => e.Platform)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("platform");

//                entity.Property(e => e.Primaryfluiddes)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("primaryfluiddes");

//                entity.Property(e => e.Problemflag).HasColumnName("problemflag");

//                entity.Property(e => e.Riskclass)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("riskclass");

//                entity.Property(e => e.Slot)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("slot");

//                entity.Property(e => e.Stateprov)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("stateprov");

//                entity.Property(e => e.Surfacerights)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surfacerights");

//                entity.Property(e => e.Syscreatedate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syscreatedate");

//                entity.Property(e => e.Syscreateuser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syscreateuser");

//                entity.Property(e => e.Syslockchildren).HasColumnName("syslockchildren");

//                entity.Property(e => e.Syslockchildrenui).HasColumnName("syslockchildrenui");

//                entity.Property(e => e.Syslockdate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdate");

//                entity.Property(e => e.Syslockdatemaster)
//                    .HasColumnType("datetime")
//                    .HasColumnName("syslockdatemaster");

//                entity.Property(e => e.Syslockme).HasColumnName("syslockme");

//                entity.Property(e => e.Syslockmeui).HasColumnName("syslockmeui");

//                entity.Property(e => e.Sysmoddate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddate");

//                entity.Property(e => e.Sysmoddatedb)
//                    .HasColumnType("datetime")
//                    .HasColumnName("sysmoddatedb");

//                entity.Property(e => e.Sysmoduser)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduser");

//                entity.Property(e => e.Sysmoduserdb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sysmoduserdb");

//                entity.Property(e => e.Syssecuritytyp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("syssecuritytyp");

//                entity.Property(e => e.Systag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("systag");

//                entity.Property(e => e.Towndist).HasColumnName("towndist");

//                entity.Property(e => e.Townflag)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("townflag");

//                entity.Property(e => e.Townname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("townname");

//                entity.Property(e => e.Townstateprov)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("townstateprov");

//                entity.Property(e => e.Userboolean1).HasColumnName("userboolean1");

//                entity.Property(e => e.Userboolean2).HasColumnName("userboolean2");

//                entity.Property(e => e.Userboolean3).HasColumnName("userboolean3");

//                entity.Property(e => e.Userboolean4).HasColumnName("userboolean4");

//                entity.Property(e => e.Userboolean5).HasColumnName("userboolean5");

//                entity.Property(e => e.Userdttm1)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm1");

//                entity.Property(e => e.Userdttm2)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm2");

//                entity.Property(e => e.Userdttm3)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm3");

//                entity.Property(e => e.Userdttm4)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm4");

//                entity.Property(e => e.Userdttm5)
//                    .HasColumnType("datetime")
//                    .HasColumnName("userdttm5");

//                entity.Property(e => e.Usernum1).HasColumnName("usernum1");

//                entity.Property(e => e.Usernum2).HasColumnName("usernum2");

//                entity.Property(e => e.Usernum3).HasColumnName("usernum3");

//                entity.Property(e => e.Usernum4).HasColumnName("usernum4");

//                entity.Property(e => e.Usernum5).HasColumnName("usernum5");

//                entity.Property(e => e.Usernum6).HasColumnName("usernum6");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");

//                entity.Property(e => e.Usertxt10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt10");

//                entity.Property(e => e.Usertxt2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt2");

//                entity.Property(e => e.Usertxt3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt3");

//                entity.Property(e => e.Usertxt4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt4");

//                entity.Property(e => e.Usertxt5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt5");

//                entity.Property(e => e.Usertxt6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt6");

//                entity.Property(e => e.Usertxt7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt7");

//                entity.Property(e => e.Usertxt8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt8");

//                entity.Property(e => e.Usertxt9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt9");

//                entity.Property(e => e.Utmgridzone).HasColumnName("utmgridzone");

//                entity.Property(e => e.Utmsource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("utmsource");

//                entity.Property(e => e.Utmx).HasColumnName("utmx");

//                entity.Property(e => e.Utmy).HasColumnName("utmy");

//                entity.Property(e => e.Waterdepth).HasColumnName("waterdepth");

//                entity.Property(e => e.Waterdepthref)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("waterdepthref");

//                entity.Property(e => e.Wellclass)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellclass");

//                entity.Property(e => e.Wellconfig)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellconfig");

//                entity.Property(e => e.Wellida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellida");

//                entity.Property(e => e.Wellidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidb");

//                entity.Property(e => e.Wellidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidc");

//                entity.Property(e => e.Wellidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellidd");

//                entity.Property(e => e.Wellide)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("wellide");

//                entity.Property(e => e.Welllicensee)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("welllicensee");

//                entity.Property(e => e.Welllicenseno)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("welllicenseno");

//                entity.Property(e => e.Wellname)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("wellname");

//                entity.Property(e => e.Welltyp1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("welltyp1");

//                entity.Property(e => e.Welltyp2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("welltyp2");
//            });

//            modelBuilder.Entity<TableArray>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("TableArray", "dbo");

//                entity.Property(e => e.Ik)
//                    .ValueGeneratedOnAdd()
//                    .HasColumnName("ik");

//                entity.Property(e => e.Item)
//                    .HasMaxLength(128)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<TblTest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("TBL_TEST", "dbo");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<TestTbl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("testTBL", "dbo");

//                entity.Property(e => e.Cnt).HasColumnName("cnt");
//            });

//            modelBuilder.Entity<Tract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("TRACTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<TractMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("TRACT_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownMineralPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("CROWN_MINERAL_PERCENT");

//                entity.Property(e => e.FederalMineralPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FEDERAL_MINERAL_PERCENT");

//                entity.Property(e => e.FreeholdMineralPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FREEHOLD_MINERAL_PERCENT");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.LegalPresentation)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LEGAL_PRESENTATION");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ReportLiquidAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_LIQUID_AS_CONDENSATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("TRACT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<Unit>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("UNITS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<UnitMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("UNIT_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AdjustingBaseVolumeFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ADJUSTING_BASE_VOLUME_FLAG");

//                entity.Property(e => e.CalculationLevel)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CALCULATION_LEVEL");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY_OPERATOR_ID");

//                entity.Property(e => e.GovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MineralOwnershipAtTracFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MINERAL_OWNERSHIP_AT_TRAC_FLAG");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.OilRoyaltyEntitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("OIL_ROYALTY_ENTITY_SYS_ID");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RoyaltyEntitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_ENTITY_SYS_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.ThirdTierEorFactor)
//                    .HasColumnType("numeric(6, 4)")
//                    .HasColumnName("THIRD_TIER_EOR_FACTOR");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<UnitTract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("UNIT_TRACTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownAcquiredPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("CROWN_ACQUIRED_PERCENT");

//                entity.Property(e => e.CrownPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("CROWN_PERCENT");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FEDERAL_PERCENT");

//                entity.Property(e => e.FreeholdPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FREEHOLD_PERCENT");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("PRODUCTION_PERCENT");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.TractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("TRACT_ID");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.UnitizedWellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNITIZED_WELL_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<UnitWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("UNIT_WELLS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCT_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");
//            });

//            modelBuilder.Entity<UserAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("USER_ACCOUNTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AllControlGroupAccess)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALL_CONTROL_GROUP_ACCESS");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_CONTROL_GROUP_ID");

//                entity.Property(e => e.DefaultExpandAllFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_EXPAND_ALL_FLAG");

//                entity.Property(e => e.DefaultProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("DEFAULT_PRODUCTION_DATE");

//                entity.Property(e => e.HomePageSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("HOME_PAGE_SYS_ID");

//                entity.Property(e => e.InactiveUser)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("INACTIVE_USER");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.UserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_ID");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_NAME");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<VAcctNonCapitalExpenditure>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_acct_non_capital_expenditure", "stage");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(4204)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(201)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");
//            });

//            modelBuilder.Entity<VAfeCostEstimatesAfenav>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_afe_cost_estimates_afenav", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VAfeCostEstimatesQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_afe_cost_estimates_qbyte", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MajorGrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("major_grs_net_flag");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VAfeCostEstimatesSiteview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_afe_cost_estimates_siteview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VAfeCostEstimatesWellview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_afe_cost_estimates_wellview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeClientName)
//                    .HasMaxLength(4000)
//                    .HasColumnName("afe_client_name");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("contract_operator_client_id");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetIndicator)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_indicator");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OpCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("op_curr_code");

//                entity.Property(e => e.OpFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("op_flag");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("operator_client_id");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Organizations)
//                    .HasMaxLength(29)
//                    .HasColumnName("organizations");

//                entity.Property(e => e.PayoutType)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("payout_type");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProdMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("prod_mnth");

//                entity.Property(e => e.ProdYr).HasColumnName("prod_yr");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingCurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_curr_code");

//                entity.Property(e => e.RunId)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("run_id");

//                entity.Property(e => e.StartDate)
//                    .HasMaxLength(19)
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VAfenavSourceCostEstimate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_afenav_source_cost_estimates", "stage");

//                entity.Property(e => e.AfeDocumentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_document_id");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.Afenumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("AFENUMBER");

//                entity.Property(e => e.Amount)
//                    .HasColumnType("numeric(38, 14)")
//                    .HasColumnName("amount");

//                entity.Property(e => e.AmountDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("amount_date");

//                entity.Property(e => e.AmountType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("amount_type");

//                entity.Property(e => e.LegacyAfeid).HasColumnName("legacy_afeid");

//                entity.Property(e => e.NetGrs)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("net_grs");
//            });

//            modelBuilder.Entity<VBasedeclineResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_basedecline_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<VBonavistaUwiMasterList>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_bonavista_uwi_master_list", "stage_export");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("data_source");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.ValidFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("valid_flag");
//            });

//            modelBuilder.Entity<VBonavistaUwiMasterListProdviewExternalsException>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_bonavista_uwi_master_list_prodview_externals_exceptions", "stage_export");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");
//            });

//            modelBuilder.Entity<VBonavistaUwiMasterListV1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_bonavista_uwi_master_list_v1", "stage_export");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("data_source");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VBudgetResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_budget_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<VCcUwiMasterSource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_cc_uwi_master_source", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("data_source");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");
//            });

//            modelBuilder.Entity<VCsxWellLatestWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_csx_well_latest_working_interest", "stage_csx");

//                entity.Property(e => e.CsxCostCentre)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("csx_cost_centre");

//                entity.Property(e => e.CsxOwnershipPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("csx_ownership_percent");

//                entity.Property(e => e.CsxTotalWellWrkngIntrst)
//                    .HasColumnType("numeric(38, 8)")
//                    .HasColumnName("csx_total_well_wrkng_intrst");

//                entity.Property(e => e.DoiType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type")
//                    .IsFixedLength();

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_number")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_status")
//                    .IsFixedLength();

//                entity.Property(e => e.FormattedPartnerId).HasColumnName("formatted_partner_id");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("licence_number");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.NetOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("net_owner");

//                entity.Property(e => e.OriginalTerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("original_termination_date");

//                entity.Property(e => e.PartnerId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_id")
//                    .IsFixedLength();

//                entity.Property(e => e.PartnerType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_type")
//                    .IsFixedLength();

//                entity.Property(e => e.PctRnk).HasColumnName("pct_rnk");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<VCteVDimSourceScenarioFinanceDimScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_CTE_v_dim_source_scenario_finance_dim_scenario", "dbo");

//                entity.Property(e => e.HierarchyType)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_type");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VCtrlMarketingSalesPoint>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ctrl_marketing_sales_points", "datamart_marketing");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.SalesPointIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_idrec");

//                entity.Property(e => e.SalesPointName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_name");
//            });

//            modelBuilder.Entity<VCtrlMarketingSalesPoints2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ctrl_marketing_sales_points_2", "datamart_marketing");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.SalesPointIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_idrec");

//                entity.Property(e => e.SalesPointName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_name");
//            });

//            modelBuilder.Entity<VCtrlMarketingSalesPointsAll>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ctrl_marketing_sales_points_ALL", "datamart_marketing");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.SalesPointIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_idrec");

//                entity.Property(e => e.SalesPointName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_point_name");

//                entity.Property(e => e.Usertxt1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("usertxt1");
//            });

//            modelBuilder.Entity<VCtrlVolumesValanvTimePeriod>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ctrl_volumes_valanv_time_period", "stage");

//                entity.Property(e => e.Dates)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dates");

//                entity.Property(e => e.YearMonth)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("year_month");
//            });

//            modelBuilder.Entity<VCtrlVolumesValanvTimePeriodCte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("v_ctrl_volumes_valanv_time_period_CTE", "stage");
//            });

//            modelBuilder.Entity<VDimAccountCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_account_capital", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4204)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(201)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimAccountCapital2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_account_capital2", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimAccountFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_account_finance", "dbo");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula");

//                entity.Property(e => e.AccountLevel01FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_formula_property");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula");

//                entity.Property(e => e.AccountLevel02FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_formula_property");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula");

//                entity.Property(e => e.AccountLevel03FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_formula_property");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula");

//                entity.Property(e => e.AccountLevel04FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_formula_property");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula");

//                entity.Property(e => e.AccountLevel05FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_formula_property");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula");

//                entity.Property(e => e.AccountLevel06FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_formula_property");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula");

//                entity.Property(e => e.AccountLevel07FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_formula_property");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula");

//                entity.Property(e => e.AccountLevel08FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_formula_property");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula");

//                entity.Property(e => e.AccountLevel09FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_formula_property");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10Formula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula");

//                entity.Property(e => e.AccountLevel10FormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_formula_property");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_description");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.EstmaAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_description");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.GcartAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_description");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.TaxopAccountDescription)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_description");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimAccountLeaseop>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_account_leaseops", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimAccumapLicense>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_accumap_license", "stage_ihs");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Licensee");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("date")
//                    .HasColumnName("License_Date");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("License_Number");
//            });

//            modelBuilder.Entity<VDimAccumapOperator>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_accumap_operator", "stage_ihs");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.OperatorAbrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_abrev");

//                entity.Property(e => e.OperatorDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_desc");
//            });

//            modelBuilder.Entity<VDimAccumapWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_accumap_wells", "stage_ihs");

//                entity.Property(e => e.AfeAmount)
//                    .HasColumnType("numeric(38, 2)")
//                    .HasColumnName("afe_amount");

//                entity.Property(e => e.AverageStageSpacing)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("average_stage_spacing");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLocation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("Bottom_Hole_Location");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.CasingType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("casing_type");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("completion_date");

//                entity.Property(e => e.ConfidentialIndicator)
//                    .HasMaxLength(61)
//                    .IsUnicode(false)
//                    .HasColumnName("Confidential_Indicator");

//                entity.Property(e => e.CurrentEventSequence)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Event_Sequence");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Licensee");

//                entity.Property(e => e.CurrentStatus)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Status");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.Fluid)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid");

//                entity.Property(e => e.FluidPerStage)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid_per_stage");

//                entity.Property(e => e.FluidPerStimLength)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid_per_stim_length");

//                entity.Property(e => e.FracCost)
//                    .HasColumnType("numeric(38, 2)")
//                    .HasColumnName("frac_cost");

//                entity.Property(e => e.FracEndDate)
//                    .HasColumnType("date")
//                    .HasColumnName("frac_end_date");

//                entity.Property(e => e.FracStartDate)
//                    .HasColumnType("date")
//                    .HasColumnName("frac_start_date");

//                entity.Property(e => e.GroundElevation)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("ground_elevation");

//                entity.Property(e => e.HighestLowerDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("highest_lower_depth");

//                entity.Property(e => e.KbElevation)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("kb_elevation");

//                entity.Property(e => e.Lahee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.LastStatusUpdate)
//                    .HasColumnType("date")
//                    .HasColumnName("Last_Status_Update");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("date")
//                    .HasColumnName("License_Date");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("License_Number");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.LowestUpperDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("lowest_upper_depth");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(12)
//                    .IsUnicode(false);

//                entity.Property(e => e.NumOfStages).HasColumnName("num_of_stages");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("On_Production_Date");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.OperatorAbrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_abrev");

//                entity.Property(e => e.OperatorDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_desc");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.ProppantPlaced)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed");

//                entity.Property(e => e.ProppantPlacedPerStage)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed_per_stage");

//                entity.Property(e => e.ProppantPlacedPerStimLength)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed_per_stim_length");

//                entity.Property(e => e.ProppantPumped)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped");

//                entity.Property(e => e.ProppantPumpedPerStage)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped_per_stage");

//                entity.Property(e => e.ProppantPumpedPerStimLength)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped_per_stim_length");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(20)
//                    .IsUnicode(false);

//                entity.Property(e => e.Range)
//                    .HasMaxLength(9)
//                    .IsUnicode(false);

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("date")
//                    .HasColumnName("Rig_Release");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(11)
//                    .IsUnicode(false);

//                entity.Property(e => e.ServiceCompany)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("service_company");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("date")
//                    .HasColumnName("Spud_Date");

//                entity.Property(e => e.StimulatedLength)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("stimulated_length");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("Surface_Location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalStageCount)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("total_stage_count");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(12)
//                    .IsUnicode(false);

//                entity.Property(e => e.TreatmentType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("treatment_type");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.WaterPerStage)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("water_per_stage");

//                entity.Property(e => e.WaterPerStimLength)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("water_per_stim_length");

//                entity.Property(e => e.WaterVolume)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("water_volume");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("well_id");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Name");

//                entity.Property(e => e.WellRowCount).HasColumnName("well_row_count");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Type");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<VDimAccumapWellsTest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_accumap_wells_TEST", "stage_ihs");

//                entity.Property(e => e.AfeAmount)
//                    .HasColumnType("numeric(38, 2)")
//                    .HasColumnName("afe_amount");

//                entity.Property(e => e.AverageStageSpacing)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("average_stage_spacing");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLocation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("Bottom_Hole_Location");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.CasingType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("casing_type");

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("completion_date");

//                entity.Property(e => e.ConfidentialIndicator)
//                    .HasMaxLength(61)
//                    .IsUnicode(false)
//                    .HasColumnName("Confidential_Indicator");

//                entity.Property(e => e.CurrentEventSequence)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Event_Sequence");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Licensee");

//                entity.Property(e => e.CurrentStatus)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Current_Status");

//                entity.Property(e => e.EndTime)
//                    .HasColumnType("date")
//                    .HasColumnName("end_time");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.Fluid)
//                    .HasMaxLength(44)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid");

//                entity.Property(e => e.FluidPerStage)
//                    .HasMaxLength(103)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid_per_stage");

//                entity.Property(e => e.FluidPerStimLength)
//                    .HasMaxLength(105)
//                    .IsUnicode(false)
//                    .HasColumnName("fluid_per_stim_length");

//                entity.Property(e => e.FracCost)
//                    .HasColumnType("numeric(38, 2)")
//                    .HasColumnName("frac_cost");

//                entity.Property(e => e.GroundElevation)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("ground_elevation");

//                entity.Property(e => e.HighestLowerDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("highest_lower_depth");

//                entity.Property(e => e.KbElevation)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("kb_elevation");

//                entity.Property(e => e.Lahee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.LastStatusUpdate)
//                    .HasColumnType("date")
//                    .HasColumnName("Last_Status_Update");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("date")
//                    .HasColumnName("License_Date");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("License_Number");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.LowestUpperDepth)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("lowest_upper_depth");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(12)
//                    .IsUnicode(false);

//                entity.Property(e => e.NumOfStages).HasColumnName("num_of_stages");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("On_Production_Date");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.OperatorAbrev)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_abrev");

//                entity.Property(e => e.OperatorDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("operator_desc");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.ProppantPlaced)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed");

//                entity.Property(e => e.ProppantPlacedPerStage)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed_per_stage");

//                entity.Property(e => e.ProppantPlacedPerStimLength)
//                    .HasMaxLength(105)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_placed_per_stim_length");

//                entity.Property(e => e.ProppantPumped)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped");

//                entity.Property(e => e.ProppantPumpedPerStage)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped_per_stage");

//                entity.Property(e => e.ProppantPumpedPerStimLength)
//                    .HasMaxLength(105)
//                    .IsUnicode(false)
//                    .HasColumnName("proppant_pumped_per_stim_length");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(20)
//                    .IsUnicode(false);

//                entity.Property(e => e.Range)
//                    .HasMaxLength(9)
//                    .IsUnicode(false);

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("date")
//                    .HasColumnName("Rig_Release");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(11)
//                    .IsUnicode(false);

//                entity.Property(e => e.ServiceCompany)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("service_company");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("date")
//                    .HasColumnName("Spud_Date");

//                entity.Property(e => e.StartTime)
//                    .HasColumnType("date")
//                    .HasColumnName("start_time");

//                entity.Property(e => e.StimulatedLength)
//                    .HasMaxLength(121)
//                    .IsUnicode(false)
//                    .HasColumnName("stimulated_length");

//                entity.Property(e => e.StimulatedLengthValue)
//                    .HasColumnType("numeric(15, 5)")
//                    .HasColumnName("stimulated_length_value");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("Surface_Location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalStageCount)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("total_stage_count");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(12)
//                    .IsUnicode(false);

//                entity.Property(e => e.TreatmentType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("treatment_type");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);

//                entity.Property(e => e.WaterPerStage)
//                    .HasMaxLength(103)
//                    .IsUnicode(false)
//                    .HasColumnName("water_per_stage");

//                entity.Property(e => e.WaterPerStimLength)
//                    .HasMaxLength(105)
//                    .IsUnicode(false)
//                    .HasColumnName("water_per_stim_length");

//                entity.Property(e => e.WaterVolume)
//                    .HasMaxLength(44)
//                    .IsUnicode(false)
//                    .HasColumnName("water_volume");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("well_id");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Name");

//                entity.Property(e => e.WellRowCount).HasColumnName("well_row_count");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Type");

//                entity.Property(e => e.Zone)
//                    .HasMaxLength(60)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<VDimActivityPeriod>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_activity_period", "data_mart_metrix");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasColumnType("date")
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimAfeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_afe_type", "dbo");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.AfeTypeDesc)
//                    .HasMaxLength(4010)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_desc");

//                entity.Property(e => e.AfeTypeGroup)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group");

//                entity.Property(e => e.ParentAfeType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_afe_type");

//                entity.Property(e => e.ReportingLevelCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_level_code");
//            });

//            modelBuilder.Entity<VDimArContract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_ar_contract", "data_mart_metrix");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimAuthorizationForExpenditure>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_authorization_for_expenditure", "dbo");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("accrual_flag");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClassCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_class_code");

//                entity.Property(e => e.AfeDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeGcaFcc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_GCA_FCC");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNameAttribute)
//                    .HasMaxLength(53)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name_attribute");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatusCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_code");

//                entity.Property(e => e.AfeStatusDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_description");

//                entity.Property(e => e.AfeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_code");

//                entity.Property(e => e.AfeTypeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_description");

//                entity.Property(e => e.AfeTypeGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group");

//                entity.Property(e => e.AfeTypeGroupDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group_desc");

//                entity.Property(e => e.AfeUdf1Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_1_code");

//                entity.Property(e => e.AfeUdf20Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_20_code");

//                entity.Property(e => e.AfeUdf5Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_5_code");

//                entity.Property(e => e.AfeUdf7Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_7_code");

//                entity.Property(e => e.AllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("alloc_amt");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("allow_other_orgs_code");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetActivityYear)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_activity_year");

//                entity.Property(e => e.BudgetActivityYearDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_activity_year_desc");

//                entity.Property(e => e.CapitalAccrualCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_cc_num");

//                entity.Property(e => e.CapitalAccrualMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_method_code");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_exp_code");

//                entity.Property(e => e.CcList)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_list");

//                entity.Property(e => e.CipTransferFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cip_transfer_flag");

//                entity.Property(e => e.ClientId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("client_id");

//                entity.Property(e => e.ClientName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("client_name");

//                entity.Property(e => e.CommitmentDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("commitment_date");

//                entity.Property(e => e.CorpCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_code");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("country_code");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("curr_code");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("default_gl_sub_code");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DoiTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type_code");

//                entity.Property(e => e.DueDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("due_date");

//                entity.Property(e => e.EffectiveDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EquipComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("equip_component_amt");

//                entity.Property(e => e.ExtrapolatedBudgetYear).HasColumnName("extrapolated_budget_year");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.GeologistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geologist_assigned");

//                entity.Property(e => e.GeophysicistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geophysicist_assigned");

//                entity.Property(e => e.InternalApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("internal_approver");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_flag");

//                entity.Property(e => e.JobEndDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("job_end_date");

//                entity.Property(e => e.JobStartDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("job_start_date");

//                entity.Property(e => e.LastAccruedDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("last_accrued_date");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("last_updt_date");

//                entity.Property(e => e.LastUpdtStatusDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("last_updt_status_date");

//                entity.Property(e => e.LastUpdtStatusUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_status_user");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_user");

//                entity.Property(e => e.ManagerName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("manager_name");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("managing_org_id");

//                entity.Property(e => e.NetEstimatePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_estimate_pct");

//                entity.Property(e => e.NumberOfCcs).HasColumnName("Number_of_CCs");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.OriginalAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("original_alloc_amt");

//                entity.Property(e => e.OverheadEndDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("overhead_end_date");

//                entity.Property(e => e.OverheadStartDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("overhead_start_date");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ownership_org_id");

//                entity.Property(e => e.PrimaryLocation)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_location");

//                entity.Property(e => e.PrimaryUwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_uwi");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectJustificationComments)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("project_justification_comments");

//                entity.Property(e => e.ProposalDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("proposal_date");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.RefOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ref_org_id");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportingAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("reporting_alloc_amt");

//                entity.Property(e => e.RigName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_name");

//                entity.Property(e => e.RigNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_number");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.SuccessEffortTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("success_effort_type_code");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TermDate)
//                    .HasMaxLength(30)
//                    .HasColumnName("term_date");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("term_user");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("translation_rate");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("use_jibe_edits_flag");

//                entity.Property(e => e.UwiAlias)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_alias");

//                entity.Property(e => e.UwiSortElement1)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_1");

//                entity.Property(e => e.UwiSortElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_2");

//                entity.Property(e => e.UwiSortElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_3");

//                entity.Property(e => e.UwiSortElement4)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_4");

//                entity.Property(e => e.UwiSortElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_5");

//                entity.Property(e => e.UwiSortElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_6");

//                entity.Property(e => e.UwiSortElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_7");

//                entity.Property(e => e.UwiSortElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_8");

//                entity.Property(e => e.UwiSortElement9)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_9");

//                entity.Property(e => e.WellviewHorizontalDepth).HasColumnName("wellview_horizontal_depth");

//                entity.Property(e => e.WellviewIntermediateCasingDepth).HasColumnName("wellview_intermediate_casing_depth");

//                entity.Property(e => e.WellviewRigReleaseDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_rig_release_date");

//                entity.Property(e => e.WellviewSpudDate)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_spud_date");

//                entity.Property(e => e.WellviewTotalDepth).HasColumnName("wellview_total_depth");

//                entity.Property(e => e.WrhseComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("wrhse_component_amt");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimChargeFormula>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_charge_formula", "data_mart_metrix");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FormulaDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formula_description");

//                entity.Property(e => e.RetrievalCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_code");

//                entity.Property(e => e.RetrievalDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_description");
//            });

//            modelBuilder.Entity<VDimChargeSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_charge_sequence", "data_mart_metrix");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");
//            });

//            modelBuilder.Entity<VDimChargeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_charge_type", "data_mart_metrix");

//                entity.Property(e => e.ChargeType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type");

//                entity.Property(e => e.ChargeTypeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_description");

//                entity.Property(e => e.ChargeTypeName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_name");

//                entity.Property(e => e.ChargeTypeShort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_short");

//                entity.Property(e => e.ChargeTypeSpecificCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_specific_code");

//                entity.Property(e => e.IsActive)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_active");
//            });

//            modelBuilder.Entity<VDimControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_control_group", "data_mart_metrix");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.ControlGroupName)
//                    .HasMaxLength(150)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_name");

//                entity.Property(e => e.ControlGroupPaResponsibleUser)
//                    .HasMaxLength(250)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_pa_responsible_user");

//                entity.Property(e => e.ControlGroupRegion)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_region");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pa_responsible_user_id");
//            });

//            modelBuilder.Entity<VDimCorporateHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_corporate_hierarchy", "dbo");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.QbyteSurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_surface_location");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sask_resource_surcharge");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimCorporateHierarchyBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_corporate_hierarchy_BCD", "dbo");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group01)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group01");

//                entity.Property(e => e.Group02)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group02");

//                entity.Property(e => e.Group03)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group03");

//                entity.Property(e => e.Group04)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group04");

//                entity.Property(e => e.Group05)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group05");

//                entity.Property(e => e.Group06)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group06");

//                entity.Property(e => e.Group07)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group07");

//                entity.Property(e => e.Group08)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group08");

//                entity.Property(e => e.Group09)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group09");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.QbyteSurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_surface_location");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sask_resource_surcharge");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimDateAccounting>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_accounting", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateAccountingCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_accounting_capital", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateAccountingFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_accounting_finance", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateAccountingLeaseop>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_accounting_leaseops", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateActivityAccumap>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_activity_accumap", "stage_ihs");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasColumnType("date")
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateActivityCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_activity_capital", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateActivityFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_activity_finance", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateActivityLeaseop>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_activity_leaseops", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateActivityVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_activity_volumes", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimDateCostCentreCreated>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_cost_centre_created", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateCostCentreTerm>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_cost_centre_term", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateCostCentreTerminated>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_cost_centre_terminated", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateRigLastProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_rig_last_production", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateRigOnProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_rig_on_production", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateRigOnProduction1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_rig_on_production", "stage_ihs");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");
//            });

//            modelBuilder.Entity<VDimDateRigRelease>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_rig_release", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDateSpud>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_date_spud", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number")
//                    .IsFixedLength();

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimDeliverySequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_delivery_sequence", "data_mart_metrix");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimDueDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_due_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimExpenseEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_expense_entity", "data_mart_metrix");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Cost_Centre_Code");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntityTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_type_code");

//                entity.Property(e => e.EntityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_type_desc");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<VDimFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_facility", "data_mart_metrix");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_cost_centre_code");

//                entity.Property(e => e.FacilityGovernmentCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_government_code");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_id");

//                entity.Property(e => e.FacilityOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_name");

//                entity.Property(e => e.FacilityPaResponsibleUser)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user");

//                entity.Property(e => e.FacilityPaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user_id");

//                entity.Property(e => e.FacilityProductionStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_production_status");

//                entity.Property(e => e.FacilityProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_province");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("facility_sys_id");

//                entity.Property(e => e.FacilityTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_code");

//                entity.Property(e => e.FacilityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_desc");

//                entity.Property(e => e.RegistryFacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_facility_name");

//                entity.Property(e => e.RegistryOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_Operator_Name");
//            });

//            modelBuilder.Entity<VDimGrossNet>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_gross_net", "dbo");

//                entity.Property(e => e.GrossNetAlias)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_alias");

//                entity.Property(e => e.GrossNetId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_id");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.GrossNetProperty)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_property");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimInvoiceDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_invoice_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimInvoiceNumber>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_invoice_number", "dbo");

//                entity.Property(e => e.HoldDate)
//                    .HasColumnType("date")
//                    .HasColumnName("hold_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_id");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.PaymentStatusCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_status_code");

//                entity.Property(e => e.PaymentStatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_status_desc");
//            });

//            modelBuilder.Entity<VDimInvoiceType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_invoice_type", "dbo");

//                entity.Property(e => e.CtrlMajorAcct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ctrl_major_acct");

//                entity.Property(e => e.CtrlMinorAcct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("ctrl_minor_acct");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.InvoiceTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_type_code");

//                entity.Property(e => e.InvoiceTypeDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_type_description");

//                entity.Property(e => e.InvoiceTypeLongDesc)
//                    .HasMaxLength(550)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_type_long_desc");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimIttestRun>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_ITTest_Run", "dbo");

//                entity.Property(e => e.RunDate)
//                    .HasMaxLength(19)
//                    .IsUnicode(false);

//                entity.Property(e => e.RunKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("run_key");
//            });

//            modelBuilder.Entity<VDimNormalizedDay>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_normalized_day", "dbo");

//                entity.Property(e => e.DayKey).HasColumnName("Day_Key");

//                entity.Property(e => e.DayName2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name2");
//            });

//            modelBuilder.Entity<VDimNormalizedMonth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_normalized_month", "dbo");

//                entity.Property(e => e.MonthKey).HasColumnName("Month_Key");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");
//            });

//            modelBuilder.Entity<VDimNormalizedTime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_normalized_time", "stage_ihs");

//                entity.Property(e => e.DayName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name");

//                entity.Property(e => e.DayName2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name2");

//                entity.Property(e => e.DayNumber).HasColumnName("day_number");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.WeekName)
//                    .HasMaxLength(22)
//                    .IsUnicode(false)
//                    .HasColumnName("week_name");

//                entity.Property(e => e.WeekNumber).HasColumnName("week_number");
//            });

//            modelBuilder.Entity<VDimOrganization>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_organization", "dbo");

//                entity.Property(e => e.OrganizationId).HasColumnName("organization_id");

//                entity.Property(e => e.OrganizationName)
//                    .HasMaxLength(53)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_name");

//                entity.Property(e => e.OrganizationTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_type_code");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimOwner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_owner", "data_mart_metrix");

//                entity.Property(e => e.OwnerGovtCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Govt_Code");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_ID");

//                entity.Property(e => e.OwnerName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Name");

//                entity.Property(e => e.OwnerProvince)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Owner_Province");

//                entity.Property(e => e.SortKey).HasColumnName("sortKey");
//            });

//            modelBuilder.Entity<VDimPaymentType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_payment_type", "data_mart_metrix");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Payment_Type");

//                entity.Property(e => e.PaymentTypeName)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("Payment_Type_Name");
//            });

//            modelBuilder.Entity<VDimProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_product", "data_mart_metrix");

//                entity.Property(e => e.GroupSortKey).HasColumnName("group_sort_key");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.ProductGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group");

//                entity.Property(e => e.ProductGroupTotal)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_group_total");

//                entity.Property(e => e.ProductGroupTotalSort).HasColumnName("product_group_total_sort");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimPurchaser>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_purchaser", "data_mart_metrix");

//                entity.Property(e => e.PurchaserGrouping)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_grouping");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_name");
//            });

//            modelBuilder.Entity<VDimPurchaserSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_purchaser_sequence", "data_mart_metrix");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimRevenueEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_revenue_entity", "data_mart_metrix");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<VDimRoyaltyObligationSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_royalty_obligation_sequence", "data_mart_metrix");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");

//                entity.Property(e => e.SortKey).HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimRoyaltyPayor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_royalty_payor", "data_mart_metrix");

//                entity.Property(e => e.RoyaltyPayorId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor_id");

//                entity.Property(e => e.RoyaltyPayorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor_name");
//            });

//            modelBuilder.Entity<VDimRoyaltyType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_royalty_type", "data_mart_metrix");

//                entity.Property(e => e.OpNonOp)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("op_non_op");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type_code");

//                entity.Property(e => e.SalesTypeSortKey).HasColumnName("sales_type_sort_key");
//            });

//            modelBuilder.Entity<VDimSalesTik>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_sales_tik", "data_mart_metrix");

//                entity.Property(e => e.SalesAndTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Sales_and_TIK");

//                entity.Property(e => e.SalesAndTikName)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("Sales_and_tik_name");
//            });

//            modelBuilder.Entity<VDimSalesType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_sales_type", "data_mart_metrix");

//                entity.Property(e => e.OpNonOp)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("op_non_op");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type_code");

//                entity.Property(e => e.SalesTypeSortKey).HasColumnName("sales_type_sort_key");
//            });

//            modelBuilder.Entity<VDimScenarioCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_scenario_capital", "dbo");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimScenarioFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_scenario_finance", "dbo");

//                entity.Property(e => e.PostedLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_01");

//                entity.Property(e => e.PostedLevel01SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_01_sort_key");

//                entity.Property(e => e.PostedLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_02");

//                entity.Property(e => e.PostedLevel02SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_02_sort_key");

//                entity.Property(e => e.PostedLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_03");

//                entity.Property(e => e.PostedLevel03SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_03_sort_key");

//                entity.Property(e => e.PostedLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_04");

//                entity.Property(e => e.PostedLevel04SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_04_sort_key");

//                entity.Property(e => e.PostedLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_05");

//                entity.Property(e => e.PostedLevel05SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("posted_level_05_sort_key");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.UnpostedLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_01");

//                entity.Property(e => e.UnpostedLevel01SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_01_sort_key");

//                entity.Property(e => e.UnpostedLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_02");

//                entity.Property(e => e.UnpostedLevel02SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_02_sort_key");

//                entity.Property(e => e.UnpostedLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_03");

//                entity.Property(e => e.UnpostedLevel03SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_03_sort_key");

//                entity.Property(e => e.UnpostedLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_04");

//                entity.Property(e => e.UnpostedLevel04SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_04_sort_key");

//                entity.Property(e => e.UnpostedLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_05");

//                entity.Property(e => e.UnpostedLevel05SortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_level_05_sort_key");

//                entity.Property(e => e.UnpostedScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unposted_scenario_key");
//            });

//            modelBuilder.Entity<VDimScenarioLeaseop>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_scenario_leaseops", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimScenarioLeaseopsBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_scenario_leaseops_BCD", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimScenarioVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_scenario_volumes", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimSourceAccountQbyteHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_account_qbyte_hierarchy", "stage");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_path");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<VDimSourceAccountQbyteHierarchyFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_account_qbyte_hierarchy_finance", "stage");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AccountLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_desc");

//                entity.Property(e => e.AccountLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_01_sort_key");

//                entity.Property(e => e.AccountLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_desc");

//                entity.Property(e => e.AccountLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_02_sort_key");

//                entity.Property(e => e.AccountLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_desc");

//                entity.Property(e => e.AccountLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_03_sort_key");

//                entity.Property(e => e.AccountLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_desc");

//                entity.Property(e => e.AccountLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_04_sort_key");

//                entity.Property(e => e.AccountLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_desc");

//                entity.Property(e => e.AccountLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_05_sort_key");

//                entity.Property(e => e.AccountLevel06Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_desc");

//                entity.Property(e => e.AccountLevel06SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_06_sort_key");

//                entity.Property(e => e.AccountLevel07Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_desc");

//                entity.Property(e => e.AccountLevel07SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_07_sort_key");

//                entity.Property(e => e.AccountLevel08Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_desc");

//                entity.Property(e => e.AccountLevel08SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_08_sort_key");

//                entity.Property(e => e.AccountLevel09Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_desc");

//                entity.Property(e => e.AccountLevel09SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_09_sort_key");

//                entity.Property(e => e.AccountLevel10Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_desc");

//                entity.Property(e => e.AccountLevel10SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_level_10_sort_key");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DepAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_account_group");

//                entity.Property(e => e.DepAccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("dep_account_id");

//                entity.Property(e => e.DepChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("dep_child_alias");

//                entity.Property(e => e.DepClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_class_code_description");

//                entity.Property(e => e.DepGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_gl_account");

//                entity.Property(e => e.DepGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("dep_gl_account_description");

//                entity.Property(e => e.DepLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_desc");

//                entity.Property(e => e.DepLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_01_sort_key");

//                entity.Property(e => e.DepLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_desc");

//                entity.Property(e => e.DepLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_02_sort_key");

//                entity.Property(e => e.DepLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_desc");

//                entity.Property(e => e.DepLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_03_sort_key");

//                entity.Property(e => e.DepLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_desc");

//                entity.Property(e => e.DepLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_04_sort_key");

//                entity.Property(e => e.DepLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_desc");

//                entity.Property(e => e.DepLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_level_05_sort_key");

//                entity.Property(e => e.DepMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_major_account");

//                entity.Property(e => e.DepMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("dep_major_account_description");

//                entity.Property(e => e.DepMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_major_class_code");

//                entity.Property(e => e.DepMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_minor_account");

//                entity.Property(e => e.DepParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("dep_parent_id");

//                entity.Property(e => e.DepSortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_sort_key");

//                entity.Property(e => e.DepUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("dep_unary_operator");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.EstmaAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_account_group");

//                entity.Property(e => e.EstmaAccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("estma_account_id");

//                entity.Property(e => e.EstmaChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("estma_child_alias");

//                entity.Property(e => e.EstmaClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_class_code_description");

//                entity.Property(e => e.EstmaGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_gl_account");

//                entity.Property(e => e.EstmaGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("estma_gl_account_description");

//                entity.Property(e => e.EstmaLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_desc");

//                entity.Property(e => e.EstmaLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_01_sort_key");

//                entity.Property(e => e.EstmaLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_desc");

//                entity.Property(e => e.EstmaLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_02_sort_key");

//                entity.Property(e => e.EstmaLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_desc");

//                entity.Property(e => e.EstmaLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_03_sort_key");

//                entity.Property(e => e.EstmaLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_desc");

//                entity.Property(e => e.EstmaLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_04_sort_key");

//                entity.Property(e => e.EstmaLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_desc");

//                entity.Property(e => e.EstmaLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_level_05_sort_key");

//                entity.Property(e => e.EstmaMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_major_account");

//                entity.Property(e => e.EstmaMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("estma_major_account_description");

//                entity.Property(e => e.EstmaMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_major_class_code");

//                entity.Property(e => e.EstmaMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_minor_account");

//                entity.Property(e => e.EstmaParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("estma_parent_id");

//                entity.Property(e => e.EstmaSortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_sort_key");

//                entity.Property(e => e.EstmaUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("estma_unary_operator");

//                entity.Property(e => e.GcartAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_account_group");

//                entity.Property(e => e.GcartAccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gcart_account_id");

//                entity.Property(e => e.GcartChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gcart_child_alias");

//                entity.Property(e => e.GcartClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_class_code_description");

//                entity.Property(e => e.GcartGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_gl_account");

//                entity.Property(e => e.GcartGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gcart_gl_account_description");

//                entity.Property(e => e.GcartLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_desc");

//                entity.Property(e => e.GcartLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_01_sort_key");

//                entity.Property(e => e.GcartLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_desc");

//                entity.Property(e => e.GcartLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_02_sort_key");

//                entity.Property(e => e.GcartLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_desc");

//                entity.Property(e => e.GcartLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_03_sort_key");

//                entity.Property(e => e.GcartLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_desc");

//                entity.Property(e => e.GcartLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_04_sort_key");

//                entity.Property(e => e.GcartLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_desc");

//                entity.Property(e => e.GcartLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_level_05_sort_key");

//                entity.Property(e => e.GcartMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_major_account");

//                entity.Property(e => e.GcartMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gcart_major_account_description");

//                entity.Property(e => e.GcartMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_major_class_code");

//                entity.Property(e => e.GcartMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_minor_account");

//                entity.Property(e => e.GcartParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gcart_parent_id");

//                entity.Property(e => e.GcartSortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_sort_key");

//                entity.Property(e => e.GcartUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("gcart_unary_operator");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("hierarchy_path");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance).HasColumnName("is_Finance");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.TaxopAccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_account_group");

//                entity.Property(e => e.TaxopAccountId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("taxop_account_id");

//                entity.Property(e => e.TaxopChildAlias)
//                    .HasMaxLength(1000)
//                    .HasColumnName("taxop_child_alias");

//                entity.Property(e => e.TaxopClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_class_code_description");

//                entity.Property(e => e.TaxopGlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_gl_account");

//                entity.Property(e => e.TaxopGlAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("taxop_gl_account_description");

//                entity.Property(e => e.TaxopLevel01Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_desc");

//                entity.Property(e => e.TaxopLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_01_sort_key");

//                entity.Property(e => e.TaxopLevel02Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_desc");

//                entity.Property(e => e.TaxopLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_02_sort_key");

//                entity.Property(e => e.TaxopLevel03Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_desc");

//                entity.Property(e => e.TaxopLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_03_sort_key");

//                entity.Property(e => e.TaxopLevel04Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_desc");

//                entity.Property(e => e.TaxopLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_04_sort_key");

//                entity.Property(e => e.TaxopLevel05Desc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_desc");

//                entity.Property(e => e.TaxopLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_level_05_sort_key");

//                entity.Property(e => e.TaxopMajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_major_account");

//                entity.Property(e => e.TaxopMajorAccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("taxop_major_account_description");

//                entity.Property(e => e.TaxopMajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_major_class_code");

//                entity.Property(e => e.TaxopMinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_minor_account");

//                entity.Property(e => e.TaxopParentId)
//                    .HasMaxLength(1000)
//                    .HasColumnName("taxop_parent_id");

//                entity.Property(e => e.TaxopSortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_sort_key");

//                entity.Property(e => e.TaxopUnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("taxop_unary_operator");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<VDimSourceEntityCostCentreHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_entity_cost_centre_hierarchy", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimSourceEntityUwiHierarchyAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_entity_uwi_hierarchy_attributes", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(29)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.IhsWellName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("ihs_well_name");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_station");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimSourceEntityValnavEntitiesGlj>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_entity_valnav_entities_GLJ", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimSourceEntityValnavEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_entity_valnav_entities", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(29)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Incentive_Type");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength).HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimSourceEntityValnavHistoryEntity>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_entity_valnav_history_entities", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReserveProperty)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserve_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(10, 5)")
//                    .HasColumnName("working_interest");

//                entity.Property(e => e.YearEndReserveProperty)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserve_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimSourceFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_facility", "data_mart_metrix");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_cost_centre_code");

//                entity.Property(e => e.FacilityGovernmentCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_government_code");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_id");

//                entity.Property(e => e.FacilityOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_operator_name");

//                entity.Property(e => e.FacilityPaResponsibleUser)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user");

//                entity.Property(e => e.FacilityPaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_pa_responsible_user_id");

//                entity.Property(e => e.FacilityProductionStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_production_status");

//                entity.Property(e => e.FacilityProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_province");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("facility_sys_id");

//                entity.Property(e => e.FacilityTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_code");

//                entity.Property(e => e.FacilityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_desc");

//                entity.Property(e => e.RegistryFacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_facility_name");

//                entity.Property(e => e.RegistryOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_Operator_Name");
//            });

//            modelBuilder.Entity<VDimSourceMetrixArContract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_ar_contract", "STAGE_METRIX");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VDimSourceMetrixChargeFormula>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_charge_formula", "STAGE_METRIX");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FormulaDescription)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("formula_description");

//                entity.Property(e => e.RetrievalCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_code");

//                entity.Property(e => e.RetrievalDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("retrieval_description");
//            });

//            modelBuilder.Entity<VDimSourceMetrixChargeType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_charge_type", "STAGE_METRIX");

//                entity.Property(e => e.ChargeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type");

//                entity.Property(e => e.ChargeTypeDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_description");

//                entity.Property(e => e.ChargeTypeName)
//                    .HasMaxLength(79)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_name");

//                entity.Property(e => e.ChargeTypeShort)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_short");

//                entity.Property(e => e.ChargeTypeSpecificCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_specific_code");

//                entity.Property(e => e.IsActive)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_active");
//            });

//            modelBuilder.Entity<VDimSourceMetrixControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_control_groups", "STAGE_METRIX");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTROL_GROUP_ID");

//                entity.Property(e => e.ControlGroupName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Control_Group_Name");

//                entity.Property(e => e.ControlGroupPaResponsibleUser)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Control_Group_PA_Responsible_User");

//                entity.Property(e => e.ControlGroupRegion)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Control_Group_Region");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_Responsible_User_ID");
//            });

//            modelBuilder.Entity<VDimSourceMetrixDeliverySequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_delivery_sequence", "STAGE_METRIX");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");
//            });

//            modelBuilder.Entity<VDimSourceMetrixFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_facility", "STAGE_METRIX");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Entity_Type");

//                entity.Property(e => e.EntityTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_TYPE_CODE");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Code");

//                entity.Property(e => e.FacilityCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Cost_Centre_Code");

//                entity.Property(e => e.FacilityGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Government_Code");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_ID");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Name");

//                entity.Property(e => e.FacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Operator_ID");

//                entity.Property(e => e.FacilityOperatorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Operator_Name");

//                entity.Property(e => e.FacilityPaResponsibleUser)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_PA_Responsible_User");

//                entity.Property(e => e.FacilityPaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_PA_Responsible_User_ID");

//                entity.Property(e => e.FacilityProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Production_Status");

//                entity.Property(e => e.FacilitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("Facility_Sys_ID");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<VDimSourceMetrixOwner>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_owners", "STAGE_METRIX");

//                entity.Property(e => e.OwnerGovtCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_govt_code");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.OwnerName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_name");

//                entity.Property(e => e.OwnerProvince)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_province");
//            });

//            modelBuilder.Entity<VDimSourceMetrixProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_products", "STAGE_METRIX");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Product_Code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Product_Description");

//                entity.Property(e => e.ProductGroup)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("Product_Group");

//                entity.Property(e => e.ProductGroupSort).HasColumnName("Product_Group_sort");

//                entity.Property(e => e.ProductGroupTotal)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Product_Group_Total");

//                entity.Property(e => e.ProductGroupTotalSort).HasColumnName("Product_Group_Total_sort");

//                entity.Property(e => e.ProductSortOrder)
//                    .HasColumnType("numeric(19, 0)")
//                    .HasColumnName("Product_Sort_Order");
//            });

//            modelBuilder.Entity<VDimSourceMetrixPurchaserSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_purchaser_sequence", "STAGE_METRIX");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");
//            });

//            modelBuilder.Entity<VDimSourceMetrixRoyaltyObligationSequence>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_royalty_obligation_sequence", "STAGE_METRIX");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");
//            });

//            modelBuilder.Entity<VDimSourceMetrixSalesType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_sales_type", "STAGE_METRIX");

//                entity.Property(e => e.IsRoyalty).HasColumnName("is_royalty");

//                entity.Property(e => e.IsSales).HasColumnName("is_sales");

//                entity.Property(e => e.OpNonOp)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Op_Non_Op");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Sales_Type");

//                entity.Property(e => e.SalesTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Sales_Type_Code");

//                entity.Property(e => e.SalesTypeSortKey)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("Sales_Type_Sort_Key");
//            });

//            modelBuilder.Entity<VDimSourceMetrixTargetFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_target_facility", "STAGE_METRIX");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("Entity_Type");

//                entity.Property(e => e.EntityTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_TYPE_CODE");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("Facility_Code");

//                entity.Property(e => e.TargetFacilityGovernmentCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_Government_Code");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_ID");

//                entity.Property(e => e.TargetFacilityName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_Name");

//                entity.Property(e => e.TargetFacilityOperatorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_Operator_ID");

//                entity.Property(e => e.TargetFacilityOperatorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_Operator_Name");

//                entity.Property(e => e.TargetFacilityProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_Province");

//                entity.Property(e => e.TargetFacilityRegistryEntityType)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("Target_Facility_registry_entity_type");
//            });

//            modelBuilder.Entity<VDimSourceMetrixWellTract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_metrix_well_tracts", "STAGE_METRIX");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Cost_Centre_Code");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrownRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("crown_royalty_percent");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("federal_percent");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Formatted_UWI");

//                entity.Property(e => e.FreeholdRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("freehold_royalty_percent");

//                entity.Property(e => e.OilRoyaltyEntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Oil_Royalty_Entity_ID");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Primary_Product");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Status");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportLiquidAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("Report_Liquid_as_Condensate");

//                entity.Property(e => e.ReserveCode)
//                    .HasMaxLength(59)
//                    .IsUnicode(false)
//                    .HasColumnName("Reserve_Code");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyEntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Royalty_Entity_ID");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.UniqueIdentifier)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Unique_Identifier");

//                entity.Property(e => e.UnitCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Cost_Centre_Code");

//                entity.Property(e => e.UnitGovtCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Govt_Code");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_ID");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Name");

//                entity.Property(e => e.UnitProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Province");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Facility_id");

//                entity.Property(e => e.WellPaResponsibleUser)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User");

//                entity.Property(e => e.WellPaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User_ID");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_ID");

//                entity.Property(e => e.WellTractName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Name");

//                entity.Property(e => e.WellTractProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Province");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("Well_Tract_Sys_ID");

//                entity.Property(e => e.WellTractType)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type");

//                entity.Property(e => e.WellTractTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type_Code");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<VDimSourceOrganization>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_organizations", "stage");

//                entity.Property(e => e.AdminCostCentre)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("admin_cost_centre");

//                entity.Property(e => e.CashCallDrawDownFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cash_call_draw_down_flag");

//                entity.Property(e => e.CountryForTaxation).HasColumnName("country_for_taxation");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.FiscalYearEnd)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("fiscal_year_end");

//                entity.Property(e => e.GstRegistrationNumber)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("gst_registration_number");

//                entity.Property(e => e.IsBaMatchingEntry)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_ba_matching_entry");

//                entity.Property(e => e.JibInvoiceOrgId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_invoice_org_id");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_update_user");

//                entity.Property(e => e.MultiTierJibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("multi_tier_jib_flag");

//                entity.Property(e => e.NonStandardVolumeEntryFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("non_standard_volume_entry_flag");

//                entity.Property(e => e.OperatingCurrencyCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("operating_currency_code");

//                entity.Property(e => e.OrganizationId).HasColumnName("organization_id");

//                entity.Property(e => e.OrganizationName)
//                    .HasMaxLength(53)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_name");

//                entity.Property(e => e.OrganizationTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("organization_type_code");

//                entity.Property(e => e.ProfileGroupCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("profile_group_code");

//                entity.Property(e => e.ReportingCurrencyCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_currency_code");

//                entity.Property(e => e.SelfSustainingFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("self_sustaining_flag");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.TerminationUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("termination_user");
//            });

//            modelBuilder.Entity<VDimSourceScenarioFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_source_scenario_finance", "stage");

//                entity.Property(e => e.HierarchyType)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_type");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioLevel01)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_01");

//                entity.Property(e => e.ScenarioLevel01SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_01_sort_key");

//                entity.Property(e => e.ScenarioLevel02)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_02");

//                entity.Property(e => e.ScenarioLevel02SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_02_sort_key");

//                entity.Property(e => e.ScenarioLevel03)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_03");

//                entity.Property(e => e.ScenarioLevel03SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_03_sort_key");

//                entity.Property(e => e.ScenarioLevel04)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_04");

//                entity.Property(e => e.ScenarioLevel04SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_04_sort_key");

//                entity.Property(e => e.ScenarioLevel05)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_05");

//                entity.Property(e => e.ScenarioLevel05SortKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_level_05_sort_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimTargetFacility>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_target_facility", "data_mart_metrix");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_code");

//                entity.Property(e => e.FacilityTypeDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_type_desc");

//                entity.Property(e => e.RegistryFacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_facility_name");

//                entity.Property(e => e.RegistryOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("registry_Operator_Name");

//                entity.Property(e => e.TargetFacilityGovernmentCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_government_code");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TargetFacilityName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_name");

//                entity.Property(e => e.TargetFacilityOperatorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_operator_id");

//                entity.Property(e => e.TargetFacilityOperatorName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_operator_name");

//                entity.Property(e => e.TargetFacilityProvince)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_province");
//            });

//            modelBuilder.Entity<VDimUwiCorporateHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_uwi_corporate_hierarchy", "dbo");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimValnavAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_account", "dbo");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.AccountFormula)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula");

//                entity.Property(e => e.AccountFormulaProperty)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_formula_property");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.QbyteMajorMinor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_major_minor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.Source)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("source");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimValnavActivityDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_activity_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimValnavCorporateHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_corporate_hierarchy", "dbo");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BaseDeclineFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("base_decline_flag");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimValnavCorporateHierarchyBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_corporate_hierarchy_BCD", "dbo");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BaseDeclineFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("base_decline_flag");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Group01)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group01");

//                entity.Property(e => e.Group02)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group02");

//                entity.Property(e => e.Group03)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group03");

//                entity.Property(e => e.Group04)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group04");

//                entity.Property(e => e.Group05)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group05");

//                entity.Property(e => e.Group06)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group06");

//                entity.Property(e => e.Group07)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group07");

//                entity.Property(e => e.Group08)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group08");

//                entity.Property(e => e.Group09)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group09");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VDimValnavCurrentPriorBudgetScenarioSource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_current_prior_budget_scenario_source", "dbo");

//                entity.Property(e => e.Isleaf).HasColumnName("isleaf");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimValnavGrossNet>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_gross_net", "dbo");

//                entity.Property(e => e.GrossNetAlias)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_alias");

//                entity.Property(e => e.GrossNetId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_id");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimValnavNormalizedMonth>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_normalized_month", "dbo");

//                entity.Property(e => e.DayName)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("day_name");

//                entity.Property(e => e.DayNumber).HasColumnName("day_number");

//                entity.Property(e => e.MonthName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("month_name");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.WeekName)
//                    .HasMaxLength(22)
//                    .IsUnicode(false)
//                    .HasColumnName("week_name");

//                entity.Property(e => e.WeekNumber).HasColumnName("week_number");
//            });

//            modelBuilder.Entity<VDimValnavReserveCategory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_reserve_category", "dbo");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ReserveCategoryAlias)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_alias");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimValnavReserveRealizedDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_reserve_realized_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimValnavScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_scenario", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimValnavScenarioBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_valnav_scenario_BCD", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(55)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimVendor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_vendor", "dbo");

//                entity.Property(e => e.Aboriginal)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("aboriginal");

//                entity.Property(e => e.ApCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ap_credit_days");

//                entity.Property(e => e.ArCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_credit_days");

//                entity.Property(e => e.BaCreditStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_credit_status");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_type_code");

//                entity.Property(e => e.EncanaBaNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("encana_ba_number");

//                entity.Property(e => e.GovtEntity)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_entity");

//                entity.Property(e => e.GovtParent)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_parent");

//                entity.Property(e => e.HoldDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hold_date");

//                entity.Property(e => e.InactiveDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("inactive_date");

//                entity.Property(e => e.InvoiceId)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_id");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_code");

//                entity.Property(e => e.VendorAlias)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_alias");

//                entity.Property(e => e.VendorGrouping)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_grouping");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VendorSort)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_sort");
//            });

//            modelBuilder.Entity<VDimVnReservesActivityDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_vnReserves_activity_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_date");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");
//            });

//            modelBuilder.Entity<VDimVnReservesReserveRealizedDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_vnReserves_reserve_realized_date", "dbo");

//                entity.Property(e => e.CalendarMonthName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name");

//                entity.Property(e => e.CalendarMonthNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_month_name_short");

//                entity.Property(e => e.CalendarMonthNumber).HasColumnName("calendar_month_number");

//                entity.Property(e => e.CalendarQuarterName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name");

//                entity.Property(e => e.CalendarQuarterNameShort)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_quarter_name_short");

//                entity.Property(e => e.CalendarQuarterNumber).HasColumnName("calendar_quarter_number");

//                entity.Property(e => e.CalendarYearName)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_name")
//                    .IsFixedLength();

//                entity.Property(e => e.CalendarYearNumber)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("calendar_year_number");

//                entity.Property(e => e.DateKey).HasColumnName("date_key");

//                entity.Property(e => e.DayOfMonth).HasColumnName("day_of_month");

//                entity.Property(e => e.DayOfMonthDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_dd");

//                entity.Property(e => e.DayOfMonthWithSuffix)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_month_with_suffix");

//                entity.Property(e => e.DayOfWeekInMonth).HasColumnName("day_of_Week_in_month");

//                entity.Property(e => e.DayOfWeekName)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name");

//                entity.Property(e => e.DayOfWeekNameShort)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("day_of_week_name_short");

//                entity.Property(e => e.DayOfWeekNumber).HasColumnName("day_of_week_number");

//                entity.Property(e => e.DayOfYearNumber).HasColumnName("day_of_Year_number");

//                entity.Property(e => e.DaysSince20000101).HasColumnName("days_since_20000101");

//                entity.Property(e => e.FirstDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("first_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.FullDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("full_Date");

//                entity.Property(e => e.HolidayDescription)
//                    .HasMaxLength(64)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_description");

//                entity.Property(e => e.HolidayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("holiday_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.LastDayOfCalendarMonthFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("last_Day_of_Calendar_month_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.MonthsSince20000101).HasColumnName("months_since_20000101");

//                entity.Property(e => e.QuartersSince20000101).HasColumnName("quarters_since_20000101");

//                entity.Property(e => e.WeekDayFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("weekDay_flag")
//                    .IsFixedLength();

//                entity.Property(e => e.WeekOfMonthNumber).HasColumnName("week_of_month_number");

//                entity.Property(e => e.WeekOfYearNumber).HasColumnName("week_of_year_number");

//                entity.Property(e => e.WeekOfYearNumberDd)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("week_of_year_number_dd");

//                entity.Property(e => e.WeekStartDateDdMonYyyy)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("week_start_date_dd_mon_yyyy");

//                entity.Property(e => e.WeekStartDateFull)
//                    .HasColumnType("datetime")
//                    .HasColumnName("week_start_date_full");

//                entity.Property(e => e.WeeksSince20000101).HasColumnName("weeks_since_20000101");

//                entity.Property(e => e.YearsSince20000101).HasColumnName("years_since_20000101");
//            });

//            modelBuilder.Entity<VDimVnreservesScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_VNReserves_scenario", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimVntypeCurvesScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_VNTypeCurves_scenario", "dbo");

//                entity.Property(e => e.ScenarioCubeName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_cube_name");

//                entity.Property(e => e.ScenarioDescription)
//                    .HasMaxLength(2000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_description");

//                entity.Property(e => e.ScenarioFormula)
//                    .HasMaxLength(1037)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula");

//                entity.Property(e => e.ScenarioFormulaProperty)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_formula_property");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1002)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioParentKey)
//                    .HasMaxLength(1002)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_parent_key");

//                entity.Property(e => e.ScenarioSortKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_sort_key");

//                entity.Property(e => e.UnaryOperator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unary_operator");
//            });

//            modelBuilder.Entity<VDimVoucherNumber>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_voucher_number", "dbo");

//                entity.Property(e => e.CreateDate).HasColumnName("create_date");

//                entity.Property(e => e.SrcCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("src_code");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");
//            });

//            modelBuilder.Entity<VDimVoucherType>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_voucher_type", "dbo");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");

//                entity.Property(e => e.VoucherTypeDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_desc");
//            });

//            modelBuilder.Entity<VDimWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_dim_well", "data_mart_metrix");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Cost_Centre_Code");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrownRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("crown_royalty_percent");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("federal_percent");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Formatted_UWI");

//                entity.Property(e => e.FreeholdRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("freehold_royalty_percent");

//                entity.Property(e => e.OilRoyaltyEntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Oil_Royalty_Entity_ID");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("Primary_Product");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Status");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportLiquidAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("Report_Liquid_as_Condensate");

//                entity.Property(e => e.ReserveCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Reserve_Code");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyEntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Royalty_Entity_ID");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.UniqueIdentifier)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unique_Identifier");

//                entity.Property(e => e.UnitCostCentreCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Cost_Centre_Code");

//                entity.Property(e => e.UnitGovtCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Govt_Code");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_ID");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Name");

//                entity.Property(e => e.UnitProvince)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Province");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("UWI");

//                entity.Property(e => e.WellFacilityId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Facility_id");

//                entity.Property(e => e.WellPaResponsibleUser)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User");

//                entity.Property(e => e.WellPaResponsibleUserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_PA_Responsible_User_ID");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_ID");

//                entity.Property(e => e.WellTractName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Name");

//                entity.Property(e => e.WellTractProvince)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Province");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("Well_Tract_Sys_ID");

//                entity.Property(e => e.WellTractType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type");

//                entity.Property(e => e.WellTractTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Type_Code");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<VEwfEventSequenceInfo>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ewf_event_sequence_info", "stage_export");

//                entity.Property(e => e.CostCenter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_center");

//                entity.Property(e => e.CurrentStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("current_status_date");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Modes)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("modes");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("pool");

//                entity.Property(e => e.ProductionZone)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("production_zone");

//                entity.Property(e => e.RowId).HasColumnName("row_id");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.Unit)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("unit");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellEventType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("well_event_type");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("well_type");

//                entity.Property(e => e.Wellbore)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("wellbore");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VEwfProdDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ewf_prod_data", "stage_export");

//                entity.Property(e => e.GasE3m3Volume).HasColumnName("gas_e3m3_volume");

//                entity.Property(e => e.LiquidsM3Volume).HasColumnName("liquids_m3_volume");

//                entity.Property(e => e.ProdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("prod_date");

//                entity.Property(e => e.RowId).HasColumnName("row_id");

//                entity.Property(e => e.Wellbore)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("wellbore");
//            });

//            modelBuilder.Entity<VEwfWellboreInfo>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ewf_wellbore_info", "stage_export");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.BottomHoleLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("bottom_hole_location");

//                entity.Property(e => e.ConfidentialIndicator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("confidential_indicator");

//                entity.Property(e => e.CurrentEventSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("current_event_sequence");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.CurrentUwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("current_uwi");

//                entity.Property(e => e.District)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.Field)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD");

//                entity.Property(e => e.FormattedWbid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_wbid");

//                entity.Property(e => e.Lahee)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("lahee");

//                entity.Property(e => e.LastStatusUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_status_update_date");

//                entity.Property(e => e.LicenseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("license_date");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_number");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionFacility)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_facility");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RowId).HasColumnName("row_id");

//                entity.Property(e => e.SortedWbid)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_wbid");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");

//                entity.Property(e => e.Wellbore)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("wellbore");
//            });

//            modelBuilder.Entity<VExceptionVolumesVsValnavUwiCostCentre>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_exception_volumes_vs_valnav_uwi_cost_centre", "stage");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.ValnavCostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_cost_centre");

//                entity.Property(e => e.ValnavCostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_cost_centre_name");

//                entity.Property(e => e.VolumesCostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("volumes_cost_centre");

//                entity.Property(e => e.VolumesCostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("volumes_cost_centre_name");

//                entity.Property(e => e.VolumesUwiSource)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("volumes_uwi_source");
//            });

//            modelBuilder.Entity<VExportToOplynxv6>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_export_to_oplynxv6", "stage_export");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.CostCenter)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_center");

//                entity.Property(e => e.Costcentrename)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("costcentrename");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.OplynxTag)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("oplynx_tag");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("working_interest_pct");
//            });

//            modelBuilder.Entity<VFactAccumap>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_accumap", "stage_ihs");

//                entity.Property(e => e.ActivityDate).HasColumnName("activity_date");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DayCounter).HasColumnName("day_counter");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.LicenseNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("License_Number");

//                entity.Property(e => e.NormalizedDaysKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_days_key");

//                entity.Property(e => e.OilBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("oil_metric_volume");

//                entity.Property(e => e.OnProdDateKey).HasColumnName("on_prod_date_key");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.PHours).HasColumnName("p_hours");

//                entity.Property(e => e.ProdmthDayCounter)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("prodmth_day_counter");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactApAr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_ap_ar", "dbo");

//                entity.Property(e => e.AccountingMonth).HasColumnName("accounting_month");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.Cad)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("cad");

//                entity.Property(e => e.DueDate).HasColumnName("due_date");

//                entity.Property(e => e.InvcId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_type_code");

//                entity.Property(e => e.InvoiceAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invoice_amount");

//                entity.Property(e => e.InvoiceDate).HasColumnName("invoice_date");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<VFactApArOpen>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_ap_ar_open", "dbo");

//                entity.Property(e => e.AccountingMonth).HasColumnName("accounting_month");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.CadOpen)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("cad_open");

//                entity.Property(e => e.DueDate).HasColumnName("due_date");

//                entity.Property(e => e.InvcId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_type_code");

//                entity.Property(e => e.InvoiceAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invoice_amount");

//                entity.Property(e => e.InvoiceDate).HasColumnName("invoice_date");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<VFactCapital>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_capital", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(201)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingPeriodKey).HasColumnName("accounting_period_key");

//                entity.Property(e => e.ActivityPeriodKey).HasColumnName("activity_period_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.AfeTerminationDateKey).HasColumnName("afe_termination_date_key");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.CcCreationDateKey).HasColumnName("cc_creation_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.CdnDollars).HasColumnName("cdn_dollars");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.UsDollars).HasColumnName("us_dollars");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFactFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_finance", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.CdnDollars).HasColumnName("cdn_dollars");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey).HasColumnName("organization_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFactIttest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_ITTest", "dbo");

//                entity.Property(e => e.RunKey)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("run_key");
//            });

//            modelBuilder.Entity<VFactLeaseop>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_leaseops", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(201)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFactLeaseopsBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_leaseops_BCD", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFactMetrix>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_metrix", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactMetrixFee>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_metrix_fees", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_code");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_cost_centre_code");

//                entity.Property(e => e.ExpenseEntityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expenseEntityID");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_owner_id");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("expense_value");

//                entity.Property(e => e.ExpenseVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_boe");

//                entity.Property(e => e.ExpenseVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_imperial");

//                entity.Property(e => e.ExpenseVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_metric");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("gst_value");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("pst_value");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_cost_centre_code");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_owner_id");
//            });

//            modelBuilder.Entity<VFactMetrixRoyalty>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_metrix_royalty", "data_mart_metrix");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.RoyaltyObligationSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_sequence");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyPayorId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor_id");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_value");

//                entity.Property(e => e.RoyaltyVolumeBoe)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_boe");

//                entity.Property(e => e.RoyaltyVolumeImperial)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_volume_imperial");

//                entity.Property(e => e.RoyaltyVolumeMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_metric");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceAllocatedSalesRawVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_allocated_sales_raw_volumes", "datamart_marketing");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.AllocatedVolume).HasColumnName("allocated_volume");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.RawVolume).HasColumnName("raw_volume");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesVolume).HasColumnName("sales_volume");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.UwiName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_name");
//            });

//            modelBuilder.Entity<VFactSourceApAr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_ap_ar", "stage");

//                entity.Property(e => e.AccountingMonth).HasColumnName("accounting_month");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.Cad)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("cad");

//                entity.Property(e => e.DueDate).HasColumnName("due_date");

//                entity.Property(e => e.InvcId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_id");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.InvcTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_type_code");

//                entity.Property(e => e.InvoiceAmount)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invoice_amount");

//                entity.Property(e => e.InvoiceDate).HasColumnName("invoice_date");

//                entity.Property(e => e.LiTypeCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("li_type_code");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_id");

//                entity.Property(e => e.VoucherNum)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_num");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<VFactSourceCostActualsQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_cost_actuals_qbyte", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobStatusId).HasColumnName("afe_job_status_id");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeJobTypeId).HasColumnName("afe_job_type_id");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.GrossNetIndicator)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_indicator");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OrganizationKey).HasColumnName("organization_key");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<VFactSourceCostEstimatesAfenav>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_cost_estimates_afenav", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("acct_per_date");

//                entity.Property(e => e.AcctPerId).HasColumnName("acct_per_id");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.ActvyMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("actvy_mnth");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.ActvyPerId).HasColumnName("actvy_per_id");

//                entity.Property(e => e.ActvyYr).HasColumnName("actvy_yr");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeId).HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobStatusId).HasColumnName("afe_job_status_id");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeJobTypeId).HasColumnName("afe_job_type_id");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetWedgeId)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_wedge_id");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VFactSourceCostEstimatesQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_cost_estimates_qbyte", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("acct_per_date");

//                entity.Property(e => e.AcctPerId).HasColumnName("acct_per_id");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.ActvyMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("actvy_mnth");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.ActvyPerId).HasColumnName("actvy_per_id");

//                entity.Property(e => e.ActvyYr).HasColumnName("actvy_yr");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeId).HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobStatusId).HasColumnName("afe_job_status_id");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeJobTypeId).HasColumnName("afe_job_type_id");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetWedgeId)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_wedge_id");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VFactSourceCostEstimatesSiteview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_cost_estimates_siteview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("acct_per_date");

//                entity.Property(e => e.AcctPerId).HasColumnName("acct_per_id");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.ActvyMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("actvy_mnth");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.ActvyPerId).HasColumnName("actvy_per_id");

//                entity.Property(e => e.ActvyYr).HasColumnName("actvy_yr");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeId).HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobStatusId).HasColumnName("afe_job_status_id");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeJobTypeId).HasColumnName("afe_job_type_id");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetWedgeId)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_wedge_id");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VFactSourceCostEstimatesWellview>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_cost_estimates_wellview", "stage");

//                entity.Property(e => e.AcctMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("acct_mnth");

//                entity.Property(e => e.AcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("acct_per_date");

//                entity.Property(e => e.AcctPerId).HasColumnName("acct_per_id");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.Acquisitions)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("acquisitions");

//                entity.Property(e => e.ActvyMnth)
//                    .HasMaxLength(9)
//                    .HasColumnName("actvy_mnth");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.ActvyPerId).HasColumnName("actvy_per_id");

//                entity.Property(e => e.ActvyYr).HasColumnName("actvy_yr");

//                entity.Property(e => e.AfeClientId)
//                    .HasMaxLength(28)
//                    .HasColumnName("afe_client_id");

//                entity.Property(e => e.AfeId).HasColumnName("afe_id");

//                entity.Property(e => e.AfeJobStatus1)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status1");

//                entity.Property(e => e.AfeJobStatus2)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_status2");

//                entity.Property(e => e.AfeJobStatusId).HasColumnName("afe_job_status_id");

//                entity.Property(e => e.AfeJobSubtype)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_subtype");

//                entity.Property(e => e.AfeJobType)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_job_type");

//                entity.Property(e => e.AfeJobTypeId).HasColumnName("afe_job_type_id");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.AfeStartDate)
//                    .HasMaxLength(20)
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatus)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status");

//                entity.Property(e => e.AfeType)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type");

//                entity.Property(e => e.BaseIncr)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("base_incr");

//                entity.Property(e => e.BudgetWedgeId)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_wedge_id");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.CanDollarAmt).HasColumnName("can_dollar_amt");

//                entity.Property(e => e.CapitalOrDryHoleExpense)
//                    .HasMaxLength(19)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_expense");

//                entity.Property(e => e.CapitalProjectNumber)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_project_number");

//                entity.Property(e => e.CcNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_number");

//                entity.Property(e => e.Dispositions)
//                    .HasMaxLength(35)
//                    .IsUnicode(false)
//                    .HasColumnName("dispositions");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(45)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(101)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.NetWorkingInterest)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_working_interest");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.Play)
//                    .HasMaxLength(33)
//                    .IsUnicode(false)
//                    .HasColumnName("play");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("project_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TaxStream)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_stream");

//                entity.Property(e => e.UsDollarAmt).HasColumnName("us_dollar_amt");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.VendorId)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_id");

//                entity.Property(e => e.WipExpenses)
//                    .HasMaxLength(23)
//                    .IsUnicode(false)
//                    .HasColumnName("wip_expenses");
//            });

//            modelBuilder.Entity<VFactSourceFdcHistoryFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_history_facts", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcIhsFull>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_ihs_full", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.GasBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.OilBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcIhsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_ihs_incr", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.GasBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.OilBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcProdviewDowntime>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_prodview_downtime", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcProdviewDowntimeIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_prodview_downtime_incr", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcProdviewInjection>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_prodview_injection", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");
//            });

//            modelBuilder.Entity<VFactSourceFdcProdviewInjectionIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_prodview_injection_incr", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(13)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");
//            });

//            modelBuilder.Entity<VFactSourceFdcQbyteSalesFull>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_qbyte_sales_full", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondBoeVolume).HasColumnName("cond_boe_volume");

//                entity.Property(e => e.CondImperialVolume).HasColumnName("cond_imperial_volume");

//                entity.Property(e => e.CondMcfeVolume).HasColumnName("cond_mcfe_volume");

//                entity.Property(e => e.CondMetricVolume).HasColumnName("cond_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcQbyteSalesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_qbyte_sales_incr", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondBoeVolume).HasColumnName("cond_boe_volume");

//                entity.Property(e => e.CondImperialVolume).HasColumnName("cond_imperial_volume");

//                entity.Property(e => e.CondMcfeVolume).HasColumnName("cond_mcfe_volume");

//                entity.Property(e => e.CondMetricVolume).HasColumnName("cond_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcValnavGljProductionVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_valnav_glj_production_volumes", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcValnavVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_valnav_volumes", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFdcValnavVolumesDaily>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_fdc_valnav_volumes_daily", "stage");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VFactSourceFinanceBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_finance_budgets", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LiId).HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey).HasColumnName("organization_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId).HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<VFactSourceLeaseopsOpexAccrual>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_leaseops_opex_accruals", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<VFactSourceLeaseopsValnavVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_leaseops_valnav_volumes", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTermDateKey).HasColumnName("cc_term_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProdDateKey).HasColumnName("on_prod_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.VendorKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<VFactSourceMarketing>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_marketing", "datamart_marketing");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityYearMonth)
//                    .HasMaxLength(62)
//                    .IsUnicode(false)
//                    .HasColumnName("activity_year_month");

//                entity.Property(e => e.AllocatedVolume).HasColumnName("allocated_volume");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.MeterName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_name");

//                entity.Property(e => e.PartnerName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_name");

//                entity.Property(e => e.RawVolume).HasColumnName("raw_volume");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(153)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SalesVolume).HasColumnName("sales_volume");

//                entity.Property(e => e.Typ)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ");

//                entity.Property(e => e.UwiName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_name");
//            });

//            modelBuilder.Entity<VFactSourceMetrixFee>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_fees", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_code");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EntityID");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false);

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_cost_centre_code");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_doi_sub_used");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_owner_id");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("expense_value");

//                entity.Property(e => e.ExpenseVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume");

//                entity.Property(e => e.ExpenseVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_boe");

//                entity.Property(e => e.ExpenseVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_imperial");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("gst_value");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("pst_value");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_cost_centre_code");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_doi_sub_used");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_owner_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixFeesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_fees_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ChargeSequenceNumber).HasColumnName("charge_sequence_number");

//                entity.Property(e => e.ChargeTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("charge_type_code");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EntityID");

//                entity.Property(e => e.EntityType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false);

//                entity.Property(e => e.ExpenseCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_cost_centre_code");

//                entity.Property(e => e.ExpenseDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_doi_sub_used");

//                entity.Property(e => e.ExpenseOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("expense_owner_id");

//                entity.Property(e => e.ExpenseValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("expense_value");

//                entity.Property(e => e.ExpenseVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume");

//                entity.Property(e => e.ExpenseVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_boe");

//                entity.Property(e => e.ExpenseVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("expense_volume_imperial");

//                entity.Property(e => e.FacilityChargeFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_charge_formula_id");

//                entity.Property(e => e.FacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_id");

//                entity.Property(e => e.GstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("gst_value");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.PstValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("pst_value");

//                entity.Property(e => e.RevenueCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_cost_centre_code");

//                entity.Property(e => e.RevenueDoiSubUsed)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_doi_sub_used");

//                entity.Property(e => e.RevenueOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("revenue_owner_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixInventoriesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_inventories_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixInventory>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_inventories", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(38, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixNonopSale>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_nonop_sales", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixNonopSalesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_nonop_sales_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixRoyalty>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_royalty", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_facility_id");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.RoyaltyObligationId)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_id");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Royalty_Type");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_value");

//                entity.Property(e => e.RoyaltyVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_boe");

//                entity.Property(e => e.RoyaltyVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_imperial");

//                entity.Property(e => e.RoyaltyVolumesMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volumes_metric");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixRoyaltyIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_royalty_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_facility_id");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.RoyaltyObligationId)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_id");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Royalty_Type");

//                entity.Property(e => e.RoyaltyValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("royalty_value");

//                entity.Property(e => e.RoyaltyVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_boe");

//                entity.Property(e => e.RoyaltyVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volume_imperial");

//                entity.Property(e => e.RoyaltyVolumesMetric)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("royalty_volumes_metric");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixSale>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_sales", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceMetrixSalesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_metrix_sales_incr", "STAGE_METRIX");

//                entity.Property(e => e.ActivityPeriod).HasColumnName("activity_period");

//                entity.Property(e => e.ActualGigajoules)
//                    .HasColumnType("numeric(12, 0)")
//                    .HasColumnName("actual_gigajoules");

//                entity.Property(e => e.ArContract)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_contract");

//                entity.Property(e => e.BatteryId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("battery_id");

//                entity.Property(e => e.ClosingInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("closing_inventory");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.DeliverySequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("delivery_sequence");

//                entity.Property(e => e.OpeningInventory)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("opening_inventory");

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("owner_id");

//                entity.Property(e => e.Product)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product");

//                entity.Property(e => e.ProductionVolume)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("production_volume");

//                entity.Property(e => e.PurchaserId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_id");

//                entity.Property(e => e.PurchaserSequence)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("purchaser_sequence");

//                entity.Property(e => e.RoyaltyPayor)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_payor");

//                entity.Property(e => e.SalesTik)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_tik");

//                entity.Property(e => e.SalesType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_type");

//                entity.Property(e => e.SalesValue)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value");

//                entity.Property(e => e.SalesValueNetOfTransport)
//                    .HasColumnType("numeric(11, 2)")
//                    .HasColumnName("sales_value_net_of_transport");

//                entity.Property(e => e.SalesVolume)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume");

//                entity.Property(e => e.SalesVolumeBoe)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_boe");

//                entity.Property(e => e.SalesVolumeImperial)
//                    .HasColumnType("numeric(9, 1)")
//                    .HasColumnName("sales_volume_imperial");

//                entity.Property(e => e.SourceFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("source_facility_id");

//                entity.Property(e => e.TargetFacilityId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("target_facility_id");

//                entity.Property(e => e.TransferReceived)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_received");

//                entity.Property(e => e.TransferSent)
//                    .HasColumnType("numeric(19, 1)")
//                    .HasColumnName("transfer_sent");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");
//            });

//            modelBuilder.Entity<VFactSourceOpexAccrualVoucherUploadDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_opex_accrual_voucher_upload_detail", "stage");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasMaxLength(10)
//                    .HasColumnName("ACTVY_PER_DATE")
//                    .IsFixedLength();

//                entity.Property(e => e.AfeItemNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("AFE_ITEM_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("AFE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.AlternateAddress)
//                    .HasMaxLength(10)
//                    .HasColumnName("ALTERNATE_ADDRESS")
//                    .IsFixedLength();

//                entity.Property(e => e.AlternateGlCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("ALTERNATE_GL_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.AttachmentRequiredFlag)
//                    .HasMaxLength(10)
//                    .HasColumnName("ATTACHMENT_REQUIRED_FLAG")
//                    .IsFixedLength();

//                entity.Property(e => e.BilledDate)
//                    .HasMaxLength(10)
//                    .HasColumnName("BILLED_DATE")
//                    .IsFixedLength();

//                entity.Property(e => e.BussinessAssociate)
//                    .HasMaxLength(10)
//                    .HasColumnName("BUSSINESS_ASSOCIATE")
//                    .IsFixedLength();

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(15)
//                    .HasColumnName("CC_NUM")
//                    .IsFixedLength();

//                entity.Property(e => e.ChequeMailTypeCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("CHEQUE_MAIL_TYPE_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.ContinuityCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("CONTINUITY_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.ContractNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("CONTRACT_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.DueDate)
//                    .HasMaxLength(10)
//                    .HasColumnName("DUE_DATE")
//                    .IsFixedLength();

//                entity.Property(e => e.EnterYToCreateNewInvoice)
//                    .HasMaxLength(10)
//                    .HasColumnName("ENTER_Y_TO_CREATE_NEW_INVOICE")
//                    .IsFixedLength();

//                entity.Property(e => e.Footnote)
//                    .HasMaxLength(10)
//                    .HasColumnName("FOOTNOTE")
//                    .IsFixedLength();

//                entity.Property(e => e.GlSubCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("GL_SUB_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.GorverningAgreementId)
//                    .HasMaxLength(10)
//                    .HasColumnName("GORVERNING_AGREEMENT_ID")
//                    .IsFixedLength();

//                entity.Property(e => e.GoverningAgreementTypeCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("GOVERNING_AGREEMENT_TYPE_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.HoldDate)
//                    .HasMaxLength(10)
//                    .HasColumnName("HOLD_DATE")
//                    .IsFixedLength();

//                entity.Property(e => e.InvoiceAlternateClientId)
//                    .HasMaxLength(10)
//                    .HasColumnName("INVOICE_ALTERNATE_CLIENT_ID")
//                    .IsFixedLength();

//                entity.Property(e => e.InvoiceApprovalShortName)
//                    .HasMaxLength(10)
//                    .HasColumnName("INVOICE_APPROVAL_SHORT_NAME")
//                    .IsFixedLength();

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(10)
//                    .HasColumnName("INVOICE_DATE")
//                    .IsFixedLength();

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("INVOICE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.InvoiceRemark)
//                    .HasMaxLength(10)
//                    .HasColumnName("INVOICE_REMARK")
//                    .IsFixedLength();

//                entity.Property(e => e.LineItemEneryAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("LINE_ITEM_ENERY_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.LineItemRemark)
//                    .HasMaxLength(10)
//                    .HasColumnName("LINE_ITEM_REMARK")
//                    .IsFixedLength();

//                entity.Property(e => e.LineItemsAlternateClientId)
//                    .HasMaxLength(10)
//                    .HasColumnName("LINE_ITEMS_ALTERNATE_CLIENT_ID")
//                    .IsFixedLength();

//                entity.Property(e => e.MainReportTranslationRate)
//                    .HasMaxLength(10)
//                    .HasColumnName("MAIN_REPORT_TRANSLATION_RATE")
//                    .IsFixedLength();

//                entity.Property(e => e.MainReportingAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("MAIN_REPORTING_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.MainReportingGrossUpAmt)
//                    .HasMaxLength(10)
//                    .HasColumnName("MAIN_REPORTING_GROSS_UP_AMT")
//                    .IsFixedLength();

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(10)
//                    .HasColumnName("MAJOR_ACCT")
//                    .IsFixedLength();

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(10)
//                    .HasColumnName("MINOR_ACCT")
//                    .IsFixedLength();

//                entity.Property(e => e.MiscellaneousCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("MISCELLANEOUS_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.NonStandardVolume)
//                    .HasMaxLength(10)
//                    .HasColumnName("NON_STANDARD_VOLUME")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingGrosUpEnergyValue)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_GROS_UP_ENERGY_VALUE")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingGrossUpAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_GROSS_UP_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingGrossUpVolume)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_GROSS_UP_VOLUME")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingGstAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_GST_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.OperatingTranslationRate)
//                    .HasMaxLength(10)
//                    .HasColumnName("OPERATING_TRANSLATION_RATE")
//                    .IsFixedLength();

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("ORG_ID");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("PAYMENT_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.PaymentFormatCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("PAYMENT_FORMAT_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.PaymentHandlingCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("PAYMENT_HANDLING_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.PurchaseOrderNumber)
//                    .HasMaxLength(10)
//                    .HasColumnName("PURCHASE_ORDER_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.QuickPay)
//                    .HasMaxLength(10)
//                    .HasColumnName("QUICK_PAY")
//                    .IsFixedLength();

//                entity.Property(e => e.SeparateChequeFlag)
//                    .HasMaxLength(10)
//                    .HasColumnName("SEPARATE_CHEQUE_FLAG")
//                    .IsFixedLength();

//                entity.Property(e => e.SourceInvoiceId)
//                    .HasMaxLength(10)
//                    .HasColumnName("SOURCE_INVOICE_ID")
//                    .IsFixedLength();

//                entity.Property(e => e.UserDefinedFlag)
//                    .HasMaxLength(10)
//                    .HasColumnName("USER_DEFINED_FLAG")
//                    .IsFixedLength();

//                entity.Property(e => e.Volume)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VOLUME");

//                entity.Property(e => e.Voucher)
//                    .HasColumnType("numeric(18, 0)")
//                    .HasColumnName("VOUCHER");

//                entity.Property(e => e.VoucherAmount)
//                    .HasMaxLength(50)
//                    .HasColumnName("VOUCHER_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.VoucherGrossUpAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("VOUCHER_GROSS_UP_AMOUNT")
//                    .IsFixedLength();

//                entity.Property(e => e.VoucherGstAmount)
//                    .HasMaxLength(10)
//                    .HasColumnName("VOUCHER_GST_AMOUNT")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<VFactSourceOpexAccrualVoucherUploadHeader>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_opex_accrual_voucher_upload_header", "stage");

//                entity.Property(e => e.AcctPeriod)
//                    .HasMaxLength(10)
//                    .HasColumnName("acct_period")
//                    .IsFixedLength();

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code")
//                    .IsFixedLength();

//                entity.Property(e => e.OrgId)
//                    .HasMaxLength(2)
//                    .HasColumnName("org_id")
//                    .IsFixedLength();

//                entity.Property(e => e.Remarks)
//                    .HasMaxLength(100)
//                    .HasColumnName("remarks")
//                    .IsFixedLength();

//                entity.Property(e => e.SourceCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("source_code")
//                    .IsFixedLength();

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(10)
//                    .HasColumnName("voucher_type")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<VFactSourcePowervision>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_powervision", "stage");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("account");

//                entity.Property(e => e.AccountDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("account_desc");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_desc");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.Document)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("document");

//                entity.Property(e => e.InvcAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("invc_amt");

//                entity.Property(e => e.InvcDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("invc_date");

//                entity.Property(e => e.InvcNum)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("invc_num");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.NetAcct)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("net_acct");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.PwrBaInfo)
//                    .HasMaxLength(254)
//                    .IsUnicode(false)
//                    .HasColumnName("pwr_ba_info");

//                entity.Property(e => e.PwrCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("pwr_create_date");

//                entity.Property(e => e.PwrLastApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("pwr_last_approver");

//                entity.Property(e => e.PwrWfPath)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("pwr_wf_path");

//                entity.Property(e => e.ReportingCurrAmt)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("reporting_curr_amt");

//                entity.Property(e => e.VoucherTypeCode)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type_code");
//            });

//            modelBuilder.Entity<VFactSourceQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_qbyte", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("boe_volume");

//                entity.Property(e => e.Cad)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_variable");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("imperial_volume");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance).HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("organization_key");

//                entity.Property(e => e.QbBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_boe_volume");

//                entity.Property(e => e.QbCad)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("qb_cad");

//                entity.Property(e => e.QbImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_imperial_volume");

//                entity.Property(e => e.QbMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_mcfe_volume");

//                entity.Property(e => e.QbMetricVolume)
//                    .HasColumnType("numeric(38, 13)")
//                    .HasColumnName("qb_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Usd)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("usd");

//                entity.Property(e => e.VendorKey)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<VFactSourceQbyteIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_qbyte_incr", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.AfeKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_key");

//                entity.Property(e => e.BoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("boe_volume");

//                entity.Property(e => e.Cad)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cad_variable");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("imperial_volume");

//                entity.Property(e => e.IsCapital).HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance).HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.IsVolumes).HasColumnName("is_volumes");

//                entity.Property(e => e.LiId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("li_id");

//                entity.Property(e => e.McfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("metric_volume");

//                entity.Property(e => e.OrganizationKey)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("organization_key");

//                entity.Property(e => e.QbBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_boe_volume");

//                entity.Property(e => e.QbCad)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("qb_cad");

//                entity.Property(e => e.QbImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_imperial_volume");

//                entity.Property(e => e.QbMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("qb_mcfe_volume");

//                entity.Property(e => e.QbMetricVolume)
//                    .HasColumnType("numeric(38, 13)")
//                    .HasColumnName("qb_metric_volume");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Usd)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("usd");

//                entity.Property(e => e.VendorKey)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("vendor_key");

//                entity.Property(e => e.VoucherId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("voucher_id");
//            });

//            modelBuilder.Entity<VFactSourceValnavCapitalBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_capital_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(50)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("failure_gross_value");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("failure_interest_value");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("success_gross_value");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("success_interest_value");
//            });

//            modelBuilder.Entity<VFactSourceValnavCapitalGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_capital_GLJreserves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(200)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("failure_gross_value");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("failure_interest_value");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("success_gross_value");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("success_interest_value");
//            });

//            modelBuilder.Entity<VFactSourceValnavCapitalTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_capital_typecurves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(50)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.FailureGrossValue).HasColumnName("failure_gross_value");

//                entity.Property(e => e.FailureInterestValue).HasColumnName("failure_interest_value");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.SuccessGrossValue).HasColumnName("success_gross_value");

//                entity.Property(e => e.SuccessInterestValue).HasColumnName("success_interest_value");
//            });

//            modelBuilder.Entity<VFactSourceValnavChanceOfSuccessBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_chance_of_success_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_budget", "stage");

//                entity.Property(e => e.BtaxPayoutMonths).HasColumnName("btax_payout_months");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("btax_profit_ratio");

//                entity.Property(e => e.BtaxRor).HasColumnName("btax_ror");

//                entity.Property(e => e.CapWiAbandonmentSalvage).HasColumnName("cap_wi_abandonment_salvage");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.NetOpIncome).HasColumnName("net_op_income");

//                entity.Property(e => e.Npv2).HasColumnName("npv2");

//                entity.Property(e => e.Npv3).HasColumnName("npv3");

//                entity.Property(e => e.Npv4).HasColumnName("npv4");

//                entity.Property(e => e.OpWiWiFixed).HasColumnName("op_wi_wi_fixed");

//                entity.Property(e => e.OpWiWiVariable).HasColumnName("op_wi_wi_variable");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("roy_adj_total");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsBudgetFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_budget_final", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_GLJreserves", "stage");

//                entity.Property(e => e.ActvyDate).HasColumnName("actvy_date");

//                entity.Property(e => e.BtaxNetRevenue).HasColumnName("btax_net_revenue");

//                entity.Property(e => e.BtaxNpv1).HasColumnName("btax_npv1");

//                entity.Property(e => e.BtaxNpv2).HasColumnName("btax_npv2");

//                entity.Property(e => e.BtaxNpv3).HasColumnName("btax_npv3");

//                entity.Property(e => e.BtaxNpv4).HasColumnName("btax_npv4");

//                entity.Property(e => e.BtaxNpv5).HasColumnName("btax_npv5");

//                entity.Property(e => e.BtaxPayoutMonths).HasColumnName("btax_payout_months");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("btax_profit_ratio");

//                entity.Property(e => e.BtaxRor).HasColumnName("btax_ror");

//                entity.Property(e => e.CapWiAbandonmentSalvage).HasColumnName("cap_wi_abandonment_salvage");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.NetOpIncome).HasColumnName("net_op_income");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("roy_adj_total");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Section).HasColumnName("section");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsGljreservesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_GLJreserves_final", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(200)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate).HasColumnName("onstream_date");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_typecurves", "stage");

//                entity.Property(e => e.BtaxPayoutMonths).HasColumnName("btax_payout_months");

//                entity.Property(e => e.BtaxProfitRatio).HasColumnName("btax_profit_ratio");

//                entity.Property(e => e.BtaxRor).HasColumnName("btax_ror");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.NetOpIncome).HasColumnName("net_op_income");

//                entity.Property(e => e.Npv2).HasColumnName("npv2");

//                entity.Property(e => e.Npv3).HasColumnName("npv3");

//                entity.Property(e => e.Npv4).HasColumnName("npv4");

//                entity.Property(e => e.OpWiWiFixed).HasColumnName("op_wi_wi_fixed");

//                entity.Property(e => e.OpWiWiVariable).HasColumnName("op_wi_wi_variable");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.RoyAdjTotal).HasColumnName("roy_adj_total");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VFactSourceValnavEconomicsTypecurvesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_economics_typecurves_final", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate).HasColumnName("onstream_date");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");
//            });

//            modelBuilder.Entity<VFactSourceValnavFinancialBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_financial_budget", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(83)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Wi).HasColumnName("WI");
//            });

//            modelBuilder.Entity<VFactSourceValnavFinancialGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_financial_GLJReserves", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(200)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavFinancialTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_financial_typecurves", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(82)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavFinancialXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_financial_xls", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavLateralLengthBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_lateral_length_budget", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionBaseDecline>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_base_decline", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiVolumeBoe).HasColumnName("fi_volume_boe");

//                entity.Property(e => e.FiVolumeImp).HasColumnName("fi_volume_imp");

//                entity.Property(e => e.FiVolumeMcfe).HasColumnName("fi_volume_mcfe");

//                entity.Property(e => e.FiVolumeMet).HasColumnName("fi_volume_met");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeImp).HasColumnName("gross_volume_imp");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate).HasColumnName("onstream_date");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeImp).HasColumnName("wi_volume_imp");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionBaseDeclineFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_base_decline_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(55)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiVolumeBoe).HasColumnName("fi_volume_boe");

//                entity.Property(e => e.FiVolumeImp).HasColumnName("fi_volume_imp");

//                entity.Property(e => e.FiVolumeMcfe).HasColumnName("fi_volume_mcfe");

//                entity.Property(e => e.FiVolumeMet).HasColumnName("fi_volume_met");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeImp).HasColumnName("gross_volume_imp");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeImp).HasColumnName("wi_volume_imp");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionBudgetFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_budget_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(55)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_GLJReserves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.FiVolumeBoe).HasColumnName("fi_volume_boe");

//                entity.Property(e => e.FiVolumeImp).HasColumnName("fi_volume_imp");

//                entity.Property(e => e.FiVolumeMcfe).HasColumnName("fi_volume_mcfe");

//                entity.Property(e => e.FiVolumeMet).HasColumnName("fi_volume_met");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeImp).HasColumnName("gross_volume_imp");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeImp).HasColumnName("wi_volume_imp");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionGljreservesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_GLJReserves_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(55)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_typecurves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.FiVolumeBoe).HasColumnName("fi_volume_boe");

//                entity.Property(e => e.FiVolumeImp).HasColumnName("fi_volume_imp");

//                entity.Property(e => e.FiVolumeMcfe).HasColumnName("fi_volume_mcfe");

//                entity.Property(e => e.FiVolumeMet).HasColumnName("fi_volume_met");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeImp).HasColumnName("gross_volume_imp");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.StepDate).HasColumnName("step_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeImp).HasColumnName("wi_volume_imp");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavProductionTypecurvesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_production_typecurves_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(55)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavQbyteWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_qbyte_working_interest", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFactSourceValnavReserveAddsCalculation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserve_adds_calculation", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.LastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_update_date");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(57)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.BookedDate).HasColumnName("booked_date");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.TechGrossVolume).HasColumnName("tech_gross_volume");

//                entity.Property(e => e.TechWiVolume).HasColumnName("tech_wi_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesBudgetFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_budget_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(57)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesBudgetRi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_budget_ri", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(54)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BookedDate).HasColumnName("booked_date");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_GLJreserves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(64)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.BookedDate).HasColumnName("booked_date");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeImp).HasColumnName("gross_volume_imp");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiVolumeBoe).HasColumnName("ri_volume_boe");

//                entity.Property(e => e.RiVolumeImp).HasColumnName("ri_volume_imp");

//                entity.Property(e => e.RiVolumeMcfe).HasColumnName("ri_volume_mcfe");

//                entity.Property(e => e.RiVolumeMet).HasColumnName("ri_volume_met");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeImp).HasColumnName("wi_volume_imp");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesGljreservesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_GLJReserves_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(64)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_typecurves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(54)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.BoeThermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.BookedDate).HasColumnName("booked_date");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.GrossVolumeBoe).HasColumnName("gross_volume_boe");

//                entity.Property(e => e.GrossVolumeMcfe).HasColumnName("gross_volume_mcfe");

//                entity.Property(e => e.GrossVolumeMet).HasColumnName("gross_volume_met");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasColumnType("numeric(8, 5)")
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.TechGrossVolume).HasColumnName("tech_gross_volume");

//                entity.Property(e => e.TechWiVolume).HasColumnName("tech_wi_volume");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiVolumeBoe).HasColumnName("wi_volume_boe");

//                entity.Property(e => e.WiVolumeMcfe).HasColumnName("wi_volume_mcfe");

//                entity.Property(e => e.WiVolumeMet).HasColumnName("wi_volume_met");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesTypecurvesFinal>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_typecurves_final", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(54)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey).HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavReservesXl>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_reserves_xls", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRevenuesRoyaltyByProductBaseDecline>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_revenues_royalty_by_product_base_decline", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(83)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRevenuesRoyaltyByProductBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_revenues_royalty_by_product_budget", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(83)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRevenuesRoyaltyByProductGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_revenues_royalty_by_product_GLJReserves", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(82)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRevenuesRoyaltyByProductTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_revenues_royalty_by_product_typecurves", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(82)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltiesBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalties_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltiesGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalties_GLJReserves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltiesTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalties_typecurves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltyByProductCalculationsBaseDecline>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalty_by_product_calculations_base_decline", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CrownRoyalty).HasColumnName("crown_royalty");

//                entity.Property(e => e.CrownRoyaltyDeductions).HasColumnName("crown_royalty_deductions");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiRevenue).HasColumnName("fi_revenue");

//                entity.Property(e => e.FreeholdRoyalty).HasColumnName("freehold_royalty");

//                entity.Property(e => e.FreeholdRoyaltyDeductions).HasColumnName("freehold_royalty_deductions");

//                entity.Property(e => e.GorRoyalty).HasColumnName("gor_royalty");

//                entity.Property(e => e.GorRoyaltyDeductions).HasColumnName("gor_royalty_deductions");

//                entity.Property(e => e.GrossRevenue).HasColumnName("gross_revenue");

//                entity.Property(e => e.IndianRoyalty).HasColumnName("indian_royalty");

//                entity.Property(e => e.MineralTaxRoyalty).HasColumnName("mineral_tax_royalty");

//                entity.Property(e => e.NetRevenue).HasColumnName("net_revenue");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiRevenue).HasColumnName("ri_revenue");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("roy_adj_crown");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("roy_adj_freehold");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("roy_adj_gor");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("roy_adj_indian");

//                entity.Property(e => e.RoyGrGor).HasColumnName("roy_gr_gor");

//                entity.Property(e => e.SaskCapSurchargeRoyalty).HasColumnName("sask_cap_surcharge_royalty");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.UnadjustedCrownRoyalty).HasColumnName("unadjusted_crown_royalty");

//                entity.Property(e => e.UnadjustedFreeholdRoyalty).HasColumnName("unadjusted_freehold_royalty");

//                entity.Property(e => e.UnadjustedGorRoyalty).HasColumnName("unadjusted_gor_royalty");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiRevenue).HasColumnName("wi_revenue");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltyByProductCalculationsBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalty_by_product_calculations_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CrownRoyalty).HasColumnName("crown_royalty");

//                entity.Property(e => e.CrownRoyaltyDeductions).HasColumnName("crown_royalty_deductions");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiRevenue).HasColumnName("fi_revenue");

//                entity.Property(e => e.FreeholdRoyalty).HasColumnName("freehold_royalty");

//                entity.Property(e => e.FreeholdRoyaltyDeductions).HasColumnName("freehold_royalty_deductions");

//                entity.Property(e => e.GorRoyalty).HasColumnName("gor_royalty");

//                entity.Property(e => e.GorRoyaltyDeductions).HasColumnName("gor_royalty_deductions");

//                entity.Property(e => e.GrossRevenue).HasColumnName("gross_revenue");

//                entity.Property(e => e.IndianRoyalty).HasColumnName("indian_royalty");

//                entity.Property(e => e.MineralTaxRoyalty).HasColumnName("mineral_tax_royalty");

//                entity.Property(e => e.NetRevenue).HasColumnName("net_revenue");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiRevenue).HasColumnName("ri_revenue");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("roy_adj_crown");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("roy_adj_freehold");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("roy_adj_gor");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("roy_adj_indian");

//                entity.Property(e => e.RoyGrGor).HasColumnName("roy_gr_gor");

//                entity.Property(e => e.SaskCapSurchargeRoyalty).HasColumnName("sask_cap_surcharge_royalty");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.UnadjustedCrownRoyalty).HasColumnName("unadjusted_crown_royalty");

//                entity.Property(e => e.UnadjustedFreeholdRoyalty).HasColumnName("unadjusted_freehold_royalty");

//                entity.Property(e => e.UnadjustedGorRoyalty).HasColumnName("unadjusted_gor_royalty");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiRevenue).HasColumnName("wi_revenue");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltyByProductCalculationsGljreserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalty_by_product_calculations_GLJReserves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CrownRoyalty).HasColumnName("crown_royalty");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiRevenue).HasColumnName("fi_revenue");

//                entity.Property(e => e.FreeholdRoyalty).HasColumnName("freehold_royalty");

//                entity.Property(e => e.GorRoyalty).HasColumnName("gor_royalty");

//                entity.Property(e => e.GrossRevenue).HasColumnName("gross_revenue");

//                entity.Property(e => e.IndianRoyalty).HasColumnName("indian_royalty");

//                entity.Property(e => e.MineralTaxRoyalty).HasColumnName("mineral_tax_royalty");

//                entity.Property(e => e.NetRevenue).HasColumnName("net_revenue");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiRevenue).HasColumnName("ri_revenue");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("roy_adj_crown");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("roy_adj_freehold");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("roy_adj_gor");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("roy_adj_indian");

//                entity.Property(e => e.SaskCapSurchargeRoyalty).HasColumnName("sask_cap_surcharge_royalty");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiRevenue).HasColumnName("wi_revenue");
//            });

//            modelBuilder.Entity<VFactSourceValnavRoyaltyByProductCalculationsTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_royalty_by_product_calculations_typecurves", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(55)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.CrownRoyalty).HasColumnName("crown_royalty");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FiRevenue).HasColumnName("fi_revenue");

//                entity.Property(e => e.FreeholdRoyalty).HasColumnName("freehold_royalty");

//                entity.Property(e => e.GorRoyalty).HasColumnName("gor_royalty");

//                entity.Property(e => e.GrossRevenue).HasColumnName("gross_revenue");

//                entity.Property(e => e.IndianRoyalty).HasColumnName("indian_royalty");

//                entity.Property(e => e.MineralTaxRoyalty).HasColumnName("mineral_tax_royalty");

//                entity.Property(e => e.NetRevenue).HasColumnName("net_revenue");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.ProductId).HasColumnName("product_id");

//                entity.Property(e => e.ReserveCategoryId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_id");

//                entity.Property(e => e.RiRevenue).HasColumnName("ri_revenue");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("roy_adj_crown");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("roy_adj_freehold");

//                entity.Property(e => e.RoyAdjGor).HasColumnName("roy_adj_gor");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("roy_adj_indian");

//                entity.Property(e => e.SaskCapSurchargeRoyalty).HasColumnName("sask_cap_surcharge_royalty");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WiRevenue).HasColumnName("wi_revenue");
//            });

//            modelBuilder.Entity<VFactSourceValnavWellCountsBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_source_valnav_well_counts_budget", "stage");

//                entity.Property(e => e.Accounts)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("accounts");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.ActvyDate).HasColumnName("actvy_date");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrsNet)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.ReserveCategoryId).HasColumnName("reserve_category_id");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.ScenarioType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_type");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VFactValnavFinancial>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_financial", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Wi).HasColumnName("wi");
//            });

//            modelBuilder.Entity<VFactValnavFinancialBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_financial_BCD", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Wi).HasColumnName("wi");
//            });

//            modelBuilder.Entity<VFactValnavFinancialCurrent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_financial_current", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.Wi).HasColumnName("wi");
//            });

//            modelBuilder.Entity<VFactValnavProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_production", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactValnavProductionBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_production_BCD", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactValnavProductionCurrent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_production_current", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactValnavReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_reserves", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactValnavReservesBcd>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_reserves_BCD", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactValnavReservesCurrent>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_valnav_reserves_current", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVnreservesFinancial>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNreserves_financial", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVnreservesProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNReserves_production", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVnreservesReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNReserves_reserves", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVntypecurvesFinancial>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNTypecurves_financial", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.KCad).HasColumnName("k_cad");

//                entity.Property(e => e.NormalizedDayKey).HasColumnName("normalized_day_key");

//                entity.Property(e => e.NormalizedMonthKey).HasColumnName("normalized_month_key");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVntypecurvesProduction>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNTypecurves_production", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedDayKey).HasColumnName("normalized_day_key");

//                entity.Property(e => e.NormalizedMonthKey).HasColumnName("normalized_month_key");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVntypecurvesReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_VNTypecurves_reserves", "dbo");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.NormalizedDayKey).HasColumnName("normalized_day_key");

//                entity.Property(e => e.NormalizedMonthKey).HasColumnName("normalized_month_key");

//                entity.Property(e => e.NormalizedTimeKey)
//                    .HasMaxLength(5)
//                    .IsUnicode(false)
//                    .HasColumnName("normalized_time_key");

//                entity.Property(e => e.NumberOfDays).HasColumnName("number_of_days");

//                entity.Property(e => e.ReserveCategoryKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_category_key");

//                entity.Property(e => e.ReserveRealizedDateKey).HasColumnName("reserve_realized_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");
//            });

//            modelBuilder.Entity<VFactVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fact_volumes", "dbo");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTerminationDateKey).HasColumnName("cc_termination_date_key");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.DataType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("data_type");

//                entity.Property(e => e.DayCounter).HasColumnName("day_counter");

//                entity.Property(e => e.DayCounter1).HasColumnName("day_counter1");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.EtlStatus)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("etl_status");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_C02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProducedWater).HasColumnName("injected_produced_water");

//                entity.Property(e => e.InjectedSourceWater).HasColumnName("injected_source_water");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.LastProductionDateKey).HasColumnName("last_production_date_key");

//                entity.Property(e => e.NormalizedDayKey).HasColumnName("normalized_day_key");

//                entity.Property(e => e.NormalizedMonthKey).HasColumnName("normalized_month_key");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.ProdmthDayCounter)
//                    .HasColumnType("numeric(8, 2)")
//                    .HasColumnName("prodmth_day_counter");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.StrokesPerMinute).HasColumnName("strokes_per_minute");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VFieldticketsFactsSource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_fieldtickets_facts_source", "openinvoice");

//                entity.Property(e => e.ApproverName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("approver_name");

//                entity.Property(e => e.BuyerDuns)
//                    .HasMaxLength(500)
//                    .HasColumnName("buyer_DUNS");

//                entity.Property(e => e.BuyerName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("buyer_name");

//                entity.Property(e => e.CadDollars).HasColumnName("cad_dollars");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.Description)
//                    .HasMaxLength(4000)
//                    .HasColumnName("description");

//                entity.Property(e => e.Driver)
//                    .HasMaxLength(1000)
//                    .HasColumnName("driver");

//                entity.Property(e => e.InvoicedStatus)
//                    .HasMaxLength(1000)
//                    .HasColumnName("invoiced_status");

//                entity.Property(e => e.ItemId)
//                    .HasMaxLength(100)
//                    .HasColumnName("item_id");

//                entity.Property(e => e.LastActionDatetime).HasColumnName("last_action_datetime");

//                entity.Property(e => e.LineitemDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_description");

//                entity.Property(e => e.LineitemNumber)
//                    .HasMaxLength(50)
//                    .HasColumnName("lineitem_number");

//                entity.Property(e => e.LineitemPayload)
//                    .HasMaxLength(1000)
//                    .HasColumnName("lineitem_payload");

//                entity.Property(e => e.LineitemProductServiceCode)
//                    .HasMaxLength(2000)
//                    .HasColumnName("lineitem_product_service_code");

//                entity.Property(e => e.LineitemProductServiceId)
//                    .HasMaxLength(500)
//                    .HasColumnName("lineitem_product_service_id");

//                entity.Property(e => e.M3Volumes).HasColumnName("m3_volumes");

//                entity.Property(e => e.Major)
//                    .HasMaxLength(100)
//                    .HasColumnName("major");

//                entity.Property(e => e.MajorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("major_description");

//                entity.Property(e => e.Minor)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor");

//                entity.Property(e => e.MinorDescription)
//                    .HasMaxLength(2000)
//                    .HasColumnName("minor_description");

//                entity.Property(e => e.OrderedbyUserid)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_userid");

//                entity.Property(e => e.OrderedbyUsername)
//                    .HasMaxLength(1000)
//                    .HasColumnName("orderedby_username");

//                entity.Property(e => e.ReferencingInvoiceNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("referencing_invoice_number");

//                entity.Property(e => e.ServiceDate)
//                    .HasColumnType("date")
//                    .HasColumnName("service_date");

//                entity.Property(e => e.SupplierName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_name");

//                entity.Property(e => e.SupplierNumber)
//                    .HasMaxLength(500)
//                    .HasColumnName("supplier_number");

//                entity.Property(e => e.SupplierSitename)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_sitename");

//                entity.Property(e => e.TicketNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_number");

//                entity.Property(e => e.TicketStatus)
//                    .HasMaxLength(500)
//                    .HasColumnName("ticket_status");

//                entity.Property(e => e.TicketType)
//                    .HasMaxLength(1000)
//                    .HasColumnName("ticket_type");

//                entity.Property(e => e.TotalAmount).HasColumnName("total_amount");

//                entity.Property(e => e.TruckNumber)
//                    .HasMaxLength(1000)
//                    .HasColumnName("truckNumber");
//            });

//            modelBuilder.Entity<VHierarchyAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_Hierarchy_Attributes", "stage_export");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.CostCenter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_center");

//                entity.Property(e => e.Costcentrename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("costcentrename");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("incentive_type");

//                entity.Property(e => e.InlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("inline_test_date");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsUwi).HasColumnName("is_uwi");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength)
//                    .HasColumnType("numeric(18, 11)")
//                    .HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("production_category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.RowId).HasColumnName("row_id");

//                entity.Property(e => e.RoyaltyIncomeInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.Wellbore)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("wellbore");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VIhsAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_ihs_attributes", "stage");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentLicensee)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("current_licensee");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(11)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.LastProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.Mode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("mode");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.Operator)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("operator");

//                entity.Property(e => e.OriginalLicensee)
//                    .HasMaxLength(240)
//                    .IsUnicode(false)
//                    .HasColumnName("original_licensee");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProvinceState)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("province_state");

//                entity.Property(e => e.RigRelease)
//                    .HasColumnType("datetime")
//                    .HasColumnName("rig_release");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(7, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("well_name");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");
//            });

//            modelBuilder.Entity<VInvoicesUsed>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_invoices_used", "openinvoice");

//                entity.Property(e => e.CurrencyCode)
//                    .HasMaxLength(10)
//                    .HasColumnName("currency_code");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDescription)
//                    .HasMaxLength(4000)
//                    .HasColumnName("invoice_description");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceNumberInuse)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number_inuse");

//                entity.Property(e => e.InvoiceTotal)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_total");

//                entity.Property(e => e.InvoiceType)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_type");

//                entity.Property(e => e.OverrideInvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("override_invoice_number");

//                entity.Property(e => e.Status)
//                    .HasMaxLength(50)
//                    .HasColumnName("status");

//                entity.Property(e => e.TransportClass)
//                    .HasMaxLength(100)
//                    .HasColumnName("transport_class");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");

//                entity.Property(e => e.VendorNumber).HasColumnName("vendor_number");

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type");
//            });

//            modelBuilder.Entity<VMdsSourceBcdCcCustomGrouping>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_mds_source_bcd_cc_custom_groupings", "stage");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(250)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .HasColumnName("group9");
//            });

//            modelBuilder.Entity<VMetrixUnitTract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_metrix_unit_tracts", "STAGE_METRIX");

//                entity.Property(e => e.CrownPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("Crown_Percent");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("Federal_Percent");

//                entity.Property(e => e.ProductionPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("Production_Percent");

//                entity.Property(e => e.TractId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("TRACT_ID");

//                entity.Property(e => e.UnitCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Cost_Centre_Code");

//                entity.Property(e => e.UnitGovtCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Govt_Code");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_ID");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Name");

//                entity.Property(e => e.UnitProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Province");
//            });

//            modelBuilder.Entity<VMetrixUnitWell>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_metrix_unit_wells", "STAGE_METRIX");

//                entity.Property(e => e.UnitCostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Cost_Centre_Code");

//                entity.Property(e => e.UnitGovtCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Govt_Code");

//                entity.Property(e => e.UnitId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_ID");

//                entity.Property(e => e.UnitName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Name");

//                entity.Property(e => e.UnitProvince)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("Unit_Province");

//                entity.Property(e => e.WellFacilityId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Facility_id");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("well_id");
//            });

//            modelBuilder.Entity<VOpeninvoiceDetail>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_openinvoice_details", "openinvoice");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(201)
//                    .HasColumnName("account");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.BaInfo)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_info");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_desc");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(201)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.InvcAmount)
//                    .HasMaxLength(50)
//                    .HasColumnName("invc_amount");

//                entity.Property(e => e.InvoiceCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("invoice_create_date");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDetailsUrl)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_details_url");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_status");

//                entity.Property(e => e.LastApprover)
//                    .HasMaxLength(201)
//                    .HasColumnName("last_approver");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.NetAcct)
//                    .HasMaxLength(201)
//                    .HasColumnName("net_acct");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type");
//            });

//            modelBuilder.Entity<VOpeninvoiceDetailsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_openinvoice_details_incr", "openinvoice");

//                entity.Property(e => e.Account)
//                    .HasMaxLength(201)
//                    .HasColumnName("account");

//                entity.Property(e => e.AccountDescription)
//                    .HasMaxLength(1000)
//                    .HasColumnName("account_description");

//                entity.Property(e => e.ActvyPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("actvy_per_date");

//                entity.Property(e => e.AfeDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.BaId).HasColumnName("ba_id");

//                entity.Property(e => e.BaInfo)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_info");

//                entity.Property(e => e.CcDesc)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_desc");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(201)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.DocumentNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("document_number");

//                entity.Property(e => e.InvcAmount)
//                    .HasMaxLength(50)
//                    .HasColumnName("invc_amount");

//                entity.Property(e => e.InvoiceCreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("invoice_create_date");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceDetailsUrl)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("invoice_details_url");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceStatus)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_status");

//                entity.Property(e => e.LastApprover)
//                    .HasMaxLength(201)
//                    .HasColumnName("last_approver");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.NetAcct)
//                    .HasMaxLength(201)
//                    .HasColumnName("net_acct");

//                entity.Property(e => e.OrgId).HasColumnName("org_id");

//                entity.Property(e => e.VoucherType)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("voucher_type");
//            });

//            modelBuilder.Entity<VOpeninvoiceXlsxAttachment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_openinvoice_xlsx_attachments", "openinvoice");

//                entity.Property(e => e.AttachmentKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("attachment_key");

//                entity.Property(e => e.Filename)
//                    .HasMaxLength(206)
//                    .HasColumnName("filename");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.LocationPath)
//                    .HasMaxLength(1000)
//                    .HasColumnName("location_path");
//            });

//            modelBuilder.Entity<VOpexBudgetSourceFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_opex_budget_source_facts", "stage");

//                entity.Property(e => e.AccountKey)
//                    .HasMaxLength(24)
//                    .IsUnicode(false)
//                    .HasColumnName("account_key");

//                entity.Property(e => e.AccountingMonthKey).HasColumnName("accounting_month_key");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.BoeVolume).HasColumnName("boe_volume");

//                entity.Property(e => e.Cad).HasColumnName("cad");

//                entity.Property(e => e.CadEconFixed).HasColumnName("cad_econ_fixed");

//                entity.Property(e => e.CadEconVariableGas).HasColumnName("cad_econ_variable_gas");

//                entity.Property(e => e.CadEconVariableOil).HasColumnName("cad_econ_variable_oil");

//                entity.Property(e => e.CadFixed).HasColumnName("cad_fixed");

//                entity.Property(e => e.CadVariable).HasColumnName("cad_variable");

//                entity.Property(e => e.CcCreateDateKey).HasColumnName("cc_create_date_key");

//                entity.Property(e => e.CcTermDateKey).HasColumnName("cc_term_date_key");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolume).HasColumnName("imperial_volume");

//                entity.Property(e => e.IsLeaseops).HasColumnName("is_leaseops");

//                entity.Property(e => e.McfeVolume).HasColumnName("mcfe_volume");

//                entity.Property(e => e.MetricVolume).HasColumnName("metric_volume");

//                entity.Property(e => e.OnProductionDateKey).HasColumnName("on_production_date_key");

//                entity.Property(e => e.RigReleaseDateKey).HasColumnName("rig_release_date_key");

//                entity.Property(e => e.ScenarioKey)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario_key");

//                entity.Property(e => e.SpudDateKey).HasColumnName("spud_date_key");

//                entity.Property(e => e.Usd).HasColumnName("usd");

//                entity.Property(e => e.VendorKey).HasColumnName("vendor_key");
//            });

//            modelBuilder.Entity<VOpexPwrappsScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_opex_pwrapps_scenarios", "stage");

//                entity.Property(e => e.Parent)
//                    .HasMaxLength(900)
//                    .IsUnicode(false)
//                    .HasColumnName("parent");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(900)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.SourceFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("source_flag");

//                entity.Property(e => e.TargetFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("target_flag");
//            });

//            modelBuilder.Entity<VOpexPwrappsSourceScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_opex_pwrapps_source_scenarios", "stage");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");
//            });

//            modelBuilder.Entity<VOpexPwrappsTargetScenario>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_opex_pwrapps_target_scenarios", "stage");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");
//            });

//            modelBuilder.Entity<VProdviewAllocatedVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_allocated_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Gassalesestimate).HasColumnName("gassalesestimate");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Unitidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidc");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");
//            });

//            modelBuilder.Entity<VProdviewAllocatedVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_allocated_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Facilityidd)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facilityidd");

//                entity.Property(e => e.Gassalesestimate).HasColumnName("gassalesestimate");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Prescas).HasColumnName("prescas");

//                entity.Property(e => e.Prestub).HasColumnName("prestub");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Unitidc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unitidc");

//                entity.Property(e => e.Voldispinjectwater).HasColumnName("voldispinjectwater");

//                entity.Property(e => e.Voldispsalehcliq).HasColumnName("voldispsalehcliq");

//                entity.Property(e => e.Volnewprodallochcliq).HasColumnName("volnewprodallochcliq");

//                entity.Property(e => e.Volnewprodallocwater).HasColumnName("volnewprodallocwater");

//                entity.Property(e => e.Volprodallochcliq).HasColumnName("volprodallochcliq");

//                entity.Property(e => e.Volprodgathgas).HasColumnName("volprodgathgas");

//                entity.Property(e => e.Volprodgathhcliq).HasColumnName("volprodgathhcliq");

//                entity.Property(e => e.Volprodgathwater).HasColumnName("volprodgathwater");

//                entity.Property(e => e.Volremainrecovhcliq).HasColumnName("volremainrecovhcliq");
//            });

//            modelBuilder.Entity<VProdviewAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_attributes", "stage");

//                entity.Property(e => e.EngineeringInlineTestDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineering_inline_test_date");

//                entity.Property(e => e.EngineeringOnProdDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineering_on_prod_date");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.GasShrinkageFactor).HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.NglYieldFactor).HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitCostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_cost_centre");

//                entity.Property(e => e.PvunitLicenseNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_license_num");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Routename)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("routename");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SchematicTypical)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("schematic_typical");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VProdviewBsw>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_bsw", "stage");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.CalcDttmEnd)
//                    .HasColumnType("datetime")
//                    .HasColumnName("calc_dttm_end");

//                entity.Property(e => e.CalcDttmStart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("calc_dttm_start");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<VProdviewDowntimeHoursVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_downtime_hours_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");
//            });

//            modelBuilder.Entity<VProdviewDowntimeHoursVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_downtime_hours_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Codedowntm1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("codedowntm1");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Durdown).HasColumnName("durdown");

//                entity.Property(e => e.Durop).HasColumnName("durop");

//                entity.Property(e => e.HoursDown).HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn).HasColumnName("hours_on");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.Nameshort)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("nameshort");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");

//                entity.Property(e => e.Vollostgas).HasColumnName("vollostgas");

//                entity.Property(e => e.Vollosthcliq).HasColumnName("vollosthcliq");

//                entity.Property(e => e.Vollostwater).HasColumnName("vollostwater");
//            });

//            modelBuilder.Entity<VProdviewInjectionVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_injection_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");
//            });

//            modelBuilder.Entity<VProdviewInjectionVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_injection_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.InjectedGasC02).HasColumnName("injected_gas_c02");

//                entity.Property(e => e.InjectedPressureKpag).HasColumnName("injected_pressure_kpag");

//                entity.Property(e => e.InjectedProdWater).HasColumnName("injected_prod_water");

//                entity.Property(e => e.InjectedSrcWater).HasColumnName("injected_src_water");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Typmigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("typmigrationsource");
//            });

//            modelBuilder.Entity<VProdviewJointsToFluid>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_joints_to_fluid", "stage");

//                entity.Property(e => e.CalcDttmEnd)
//                    .HasColumnType("datetime")
//                    .HasColumnName("calc_dttm_end");

//                entity.Property(e => e.CalcDttmStart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("calc_dttm_start");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Completionname)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completionname");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");
//            });

//            modelBuilder.Entity<VProdviewOnstreamDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_onstream_dates", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.OnstreamDate)
//                    .HasColumnType("date")
//                    .HasColumnName("onstream_date");

//                entity.Property(e => e.OnstreamYear).HasColumnName("onstream_year");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VProdviewProrationDataIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_proration_data_incr", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenter");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.ProratedGas).HasColumnName("prorated_gas");

//                entity.Property(e => e.ProratedOil).HasColumnName("prorated_oil");

//                entity.Property(e => e.ProratedWater).HasColumnName("prorated_water");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VProdviewProrationDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_proration_data", "stage");

//                entity.Property(e => e.Costcenter)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("costcenter");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("date")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Fdc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("FDC");

//                entity.Property(e => e.ProratedGas).HasColumnName("prorated_gas");

//                entity.Property(e => e.ProratedOil).HasColumnName("prorated_oil");

//                entity.Property(e => e.ProratedWater).HasColumnName("prorated_water");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VProdviewShrinkYieldRate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_shrink_yield_rates", "stage");

//                entity.Property(e => e.C2Yield).HasColumnName("c2_yield");

//                entity.Property(e => e.C3Yield).HasColumnName("c3_yield");

//                entity.Property(e => e.C4Yield).HasColumnName("c4_yield");

//                entity.Property(e => e.C5Yield).HasColumnName("c5_yield");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.CondyYield).HasColumnName("condy_yield");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.GasShrinkage).HasColumnName("gas_shrinkage");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.OilYield).HasColumnName("oil_yield");

//                entity.Property(e => e.TotalYieldFactor).HasColumnName("total_yield_factor");
//            });

//            modelBuilder.Entity<VProdviewTypfluidprod>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_prodview_typfluidprod", "stage");

//                entity.Property(e => e.Compida)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("compida");

//                entity.Property(e => e.Dttm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttm");

//                entity.Property(e => e.Ettm)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ettm");

//                entity.Property(e => e.Keymigrationsource)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keymigrationsource");

//                entity.Property(e => e.Typfluidprod)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typfluidprod");
//            });

//            modelBuilder.Entity<VQbyteAccountHierarchySource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_account_hierarchy_source", "stage");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.IsLeaseops)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valnav");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<VQbyteAccountHierarchySourceFinance>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_account_hierarchy_source_finance", "stage");

//                entity.Property(e => e.AccountGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("account_group");

//                entity.Property(e => e.BoeThermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("boe_thermal");

//                entity.Property(e => e.ChildAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("child_alias");

//                entity.Property(e => e.ChildId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("child_id");

//                entity.Property(e => e.ClassCodeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("class_code_description");

//                entity.Property(e => e.DisplaySequenceNumber)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("display_sequence_number");

//                entity.Property(e => e.GlAccount)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account");

//                entity.Property(e => e.GlAccountDescription)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_account_description");

//                entity.Property(e => e.GrossOrNetCode)
//                    .HasMaxLength(25)
//                    .IsUnicode(false)
//                    .HasColumnName("gross_or_net_code");

//                entity.Property(e => e.HierarchyPath)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path");

//                entity.Property(e => e.HierarchyPathDesc)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("Hierarchy_Path_desc");

//                entity.Property(e => e.IsCapital)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_capital");

//                entity.Property(e => e.IsFinance)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_finance");

//                entity.Property(e => e.IsLeaseops)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_leaseops");

//                entity.Property(e => e.IsValnav)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valnav");

//                entity.Property(e => e.Level).HasColumnName("level");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MajorAccountDescription)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("major_account_description");

//                entity.Property(e => e.MajorClassCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("major_class_code");

//                entity.Property(e => e.Mcfe6Thermal)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("mcfe6_thermal");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.ParentAlias)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_alias");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("product_description");

//                entity.Property(e => e.SiToImpConvFactor)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("si_to_imp_conv_factor");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(508)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");

//                entity.Property(e => e.ZeroLevel).HasColumnName("zero_level");
//            });

//            modelBuilder.Entity<VQbyteAfeCcList>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_afe_cc_list", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AFE_NUM");

//                entity.Property(e => e.CcList)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_list");

//                entity.Property(e => e.NumberOfCcs).HasColumnName("Number_of_CCs");
//            });

//            modelBuilder.Entity<VQbyteAfeCcUwi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_afe_cc_uwis", "stage");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("accrual_flag");

//                entity.Property(e => e.AfeClassCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_class_code");

//                entity.Property(e => e.AfeFinishDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_finish_date");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeReportingUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_reporting_udf_1_code");

//                entity.Property(e => e.AfeReportingUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_reporting_udf_2_code");

//                entity.Property(e => e.AfeReportingUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_reporting_udf_3_code");

//                entity.Property(e => e.AfeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_stat_code");

//                entity.Property(e => e.AfeTypeCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_code");

//                entity.Property(e => e.AfeUdf10Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_10_code");

//                entity.Property(e => e.AfeUdf11Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_11_code");

//                entity.Property(e => e.AfeUdf12Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_12_code");

//                entity.Property(e => e.AfeUdf13Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_13_code");

//                entity.Property(e => e.AfeUdf14Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_14_code");

//                entity.Property(e => e.AfeUdf15Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_15_code");

//                entity.Property(e => e.AfeUdf16Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_16_code");

//                entity.Property(e => e.AfeUdf17Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_17_code");

//                entity.Property(e => e.AfeUdf18Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_18_code");

//                entity.Property(e => e.AfeUdf19Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_19_code");

//                entity.Property(e => e.AfeUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_1_code");

//                entity.Property(e => e.AfeUdf20Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_20_code");

//                entity.Property(e => e.AfeUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_2_code");

//                entity.Property(e => e.AfeUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_3_code");

//                entity.Property(e => e.AfeUdf4Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_4_code");

//                entity.Property(e => e.AfeUdf5Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_5_code");

//                entity.Property(e => e.AfeUdf6Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_6_code");

//                entity.Property(e => e.AfeUdf7Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_7_code");

//                entity.Property(e => e.AfeUdf8Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_8_code");

//                entity.Property(e => e.AfeUdf9Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_9_code");

//                entity.Property(e => e.AllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("alloc_amt");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("allow_other_orgs_code");

//                entity.Property(e => e.ApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("approval_date");

//                entity.Property(e => e.BudgetActivityId)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_activity_id");

//                entity.Property(e => e.BudgetActivityYear)
//                    .HasColumnType("datetime")
//                    .HasColumnName("budget_activity_year");

//                entity.Property(e => e.CapitalAccrualCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_cc_num");

//                entity.Property(e => e.CapitalAccrualMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_method_code");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_exp_code");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CipTransferFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cip_transfer_flag");

//                entity.Property(e => e.CommitmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("commitment_date");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("country_code");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("curr_code");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("default_gl_sub_code");

//                entity.Property(e => e.DoiTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type_code");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("due_date");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EquipComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("equip_component_amt");

//                entity.Property(e => e.GeologistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geologist_assigned");

//                entity.Property(e => e.GeophysicistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geophysicist_assigned");

//                entity.Property(e => e.InternalApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("internal_approver");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_flag");

//                entity.Property(e => e.LastAccruedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_accrued_date");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_date");

//                entity.Property(e => e.LastUpdtStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_status_date");

//                entity.Property(e => e.LastUpdtStatusUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_status_user");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_user");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("location_element_8");

//                entity.Property(e => e.ManagerName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("manager_name");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("managing_org_id");

//                entity.Property(e => e.NetEstimatePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_estimate_pct");

//                entity.Property(e => e.OriginalAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("original_alloc_amt");

//                entity.Property(e => e.OverheadEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_end_date");

//                entity.Property(e => e.OverheadStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_start_date");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ownership_org_id");

//                entity.Property(e => e.ProposalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("proposal_date");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.ReportingAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("reporting_alloc_amt");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.SuccessEffortTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("success_effort_type_code");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("term_date");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("term_user");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("translation_rate");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("use_jibe_edits_flag");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDescription)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_description");

//                entity.Property(e => e.UwiSortElement1)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_1");

//                entity.Property(e => e.UwiSortElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_2");

//                entity.Property(e => e.UwiSortElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_3");

//                entity.Property(e => e.UwiSortElement4)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_4");

//                entity.Property(e => e.UwiSortElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_5");

//                entity.Property(e => e.UwiSortElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_6");

//                entity.Property(e => e.UwiSortElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_7");

//                entity.Property(e => e.UwiSortElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_8");

//                entity.Property(e => e.UwiSortElement9)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_9");

//                entity.Property(e => e.WrhseComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("wrhse_component_amt");
//            });

//            modelBuilder.Entity<VQbyteAfeProjectJustificationComment>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_afe_project_justification_comments", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.ProjectJustificationComments)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("project_justification_comments");
//            });

//            modelBuilder.Entity<VQbyteAuthorizationForExpenditureAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_authorization_for_expenditure_attributes", "stage");

//                entity.Property(e => e.AccrualFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("accrual_flag");

//                entity.Property(e => e.AcctYr).HasColumnName("acct_yr");

//                entity.Property(e => e.AfeApprovalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_approval_date");

//                entity.Property(e => e.AfeClassCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_class_code");

//                entity.Property(e => e.AfeDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_date");

//                entity.Property(e => e.AfeGcaFcc)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_gca_fcc");

//                entity.Property(e => e.AfeName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_name");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("afe_start_date");

//                entity.Property(e => e.AfeStatusCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_code");

//                entity.Property(e => e.AfeStatusDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_status_description");

//                entity.Property(e => e.AfeTypeCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_code");

//                entity.Property(e => e.AfeTypeDescription)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_description");

//                entity.Property(e => e.AfeTypeGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group");

//                entity.Property(e => e.AfeTypeGroupDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_type_group_desc");

//                entity.Property(e => e.AfeUdf1Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_1_code");

//                entity.Property(e => e.AfeUdf20Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_20_code");

//                entity.Property(e => e.AfeUdf5Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_5_code");

//                entity.Property(e => e.AfeUdf7Code)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_udf_7_code");

//                entity.Property(e => e.AllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("alloc_amt");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("allow_other_orgs_code");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetActivityYear)
//                    .HasMaxLength(4000)
//                    .HasColumnName("budget_activity_year");

//                entity.Property(e => e.BudgetActivityYearDesc)
//                    .HasMaxLength(4000)
//                    .HasColumnName("budget_activity_year_desc");

//                entity.Property(e => e.CapitalAccrualCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_cc_num");

//                entity.Property(e => e.CapitalAccrualMethodCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_accrual_method_code");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_or_dry_hole_exp_code");

//                entity.Property(e => e.CcList)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_list");

//                entity.Property(e => e.CipTransferFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("cip_transfer_flag");

//                entity.Property(e => e.ClientId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("client_id");

//                entity.Property(e => e.ClientName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("client_name");

//                entity.Property(e => e.CommitmentDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("commitment_date");

//                entity.Property(e => e.CorpCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_code");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("country_code");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("create_user");

//                entity.Property(e => e.CurrCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("curr_code");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("default_gl_sub_code");

//                entity.Property(e => e.District)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DoiTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type_code");

//                entity.Property(e => e.DueDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("due_date");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.EngineerAssigned)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("engineer_assigned");

//                entity.Property(e => e.EquipComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("equip_component_amt");

//                entity.Property(e => e.ExtrapolatedBudgetYear).HasColumnName("extrapolated_budget_year");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(4010)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.GeologistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geologist_assigned");

//                entity.Property(e => e.GeophysicistAssigned)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("geophysicist_assigned");

//                entity.Property(e => e.InternalApprover)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("internal_approver");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("jib_flag");

//                entity.Property(e => e.JobEndDate)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("job_end_date");

//                entity.Property(e => e.JobStartDate)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("job_start_date");

//                entity.Property(e => e.LastAccruedDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_accrued_date");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_date");

//                entity.Property(e => e.LastUpdtStatusDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_status_date");

//                entity.Property(e => e.LastUpdtStatusUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_status_user");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("last_updt_user");

//                entity.Property(e => e.ManagerName)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("manager_name");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("managing_org_id");

//                entity.Property(e => e.NetEstimatePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("net_estimate_pct");

//                entity.Property(e => e.NumberOfCcs).HasColumnName("Number_of_CCs");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.OriginalAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("original_alloc_amt");

//                entity.Property(e => e.OverheadEndDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_end_date");

//                entity.Property(e => e.OverheadStartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("overhead_start_date");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("ownership_org_id");

//                entity.Property(e => e.PrimaryLocation)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_location");

//                entity.Property(e => e.PrimaryUwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_uwi");

//                entity.Property(e => e.ProjectApprovalStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_approval_status");

//                entity.Property(e => e.ProjectExecutionStatus)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("project_execution_status");

//                entity.Property(e => e.ProjectJustificationComments)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("project_justification_comments");

//                entity.Property(e => e.ProposalDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("proposal_date");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.RefOrgId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ref_org_id");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(21)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportingAllocAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("reporting_alloc_amt");

//                entity.Property(e => e.RigName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_name");

//                entity.Property(e => e.RigNumber)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_number");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(34)
//                    .IsUnicode(false)
//                    .HasColumnName("sorted_uwi");

//                entity.Property(e => e.SuccessEffortTypeCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("success_effort_type_code");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_code");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("term_date");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("term_user");

//                entity.Property(e => e.TranslationRate)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("translation_rate");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("use_jibe_edits_flag");

//                entity.Property(e => e.UwiAlias)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_alias");

//                entity.Property(e => e.UwiSortElement1)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_1");

//                entity.Property(e => e.UwiSortElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_2");

//                entity.Property(e => e.UwiSortElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_3");

//                entity.Property(e => e.UwiSortElement4)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_4");

//                entity.Property(e => e.UwiSortElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_5");

//                entity.Property(e => e.UwiSortElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_6");

//                entity.Property(e => e.UwiSortElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_7");

//                entity.Property(e => e.UwiSortElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_8");

//                entity.Property(e => e.UwiSortElement9)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_sort_element_9");

//                entity.Property(e => e.WellviewHorizontalDepth).HasColumnName("wellview_horizontal_depth");

//                entity.Property(e => e.WellviewIntermediateCasingDepth).HasColumnName("wellview_intermediate_casing_depth");

//                entity.Property(e => e.WellviewRigReleaseDate)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_rig_release_date");

//                entity.Property(e => e.WellviewSpudDate)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("wellview_spud_date");

//                entity.Property(e => e.WellviewTotalDepth).HasColumnName("wellview_total_depth");

//                entity.Property(e => e.WrhseComponentAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("wrhse_component_amt");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VQbyteCcBnpDivestHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_cc_bnp_divest_hierarchy", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.DispArea)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_area");

//                entity.Property(e => e.DispFacility)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_facility");

//                entity.Property(e => e.DispPkg)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_pkg");

//                entity.Property(e => e.DispType)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("disp_type");

//                entity.Property(e => e.Disposed)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed");

//                entity.Property(e => e.HierarchyCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_code");
//            });

//            modelBuilder.Entity<VQbyteCcHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_cc_hierarchy", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.GcaFcc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("gca_fcc");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.MetrixControlGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("metrix_control_group");

//                entity.Property(e => e.OnProdDataSource)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_data_source");

//                entity.Property(e => e.OnProdDateAccumap)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_prod_date_accumap");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("plant");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.QbyteLicense)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("qbyte_license");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.Restarts)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("restarts");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.SaskResourceSurcharge)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("Sask_Resource_Surcharge");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("surface_location");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_quarter");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VQbyteCorpHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_corp_hierarchy", "stage");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaEntityId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("area_entity_id");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.AreaSelect)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("area_select");

//                entity.Property(e => e.CorpCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_code");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityEntityId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("facility_entity_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.HierarchyCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hierarchy_code");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReportingCodeLevel1)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level1");

//                entity.Property(e => e.ReportingCodeLevel2)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level2");

//                entity.Property(e => e.ReportingCodeLevel3)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level3");

//                entity.Property(e => e.ReportingCodeLevel4)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level4");

//                entity.Property(e => e.ReportingCodeLevel5)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level5");

//                entity.Property(e => e.ReportingCodeLevel6)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_code_level6");

//                entity.Property(e => e.ReportingEntityLocation1)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location1");

//                entity.Property(e => e.ReportingEntityLocation2)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location2");

//                entity.Property(e => e.ReportingEntityLocation3)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location3");

//                entity.Property(e => e.ReportingEntityLocation4)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location4");

//                entity.Property(e => e.ReportingEntityLocation5)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location5");

//                entity.Property(e => e.ReportingEntityLocation6)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("reporting_entity_location6");

//                entity.Property(e => e.SortKey)
//                    .HasMaxLength(1540)
//                    .IsUnicode(false)
//                    .HasColumnName("sort_key");
//            });

//            modelBuilder.Entity<VQbyteCostCentresAttribute>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_cost_centres_attributes", "stage");

//                entity.Property(e => e.ActiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("ACTIVE_DATE");

//                entity.Property(e => e.AllowOtherOrgsCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALLOW_OTHER_ORGS_CODE");

//                entity.Property(e => e.AltGlCodeReqdFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALT_GL_CODE_REQD_FLAG");

//                entity.Property(e => e.BatteryNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_NUM");

//                entity.Property(e => e.BillingCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BILLING_CODE");

//                entity.Property(e => e.CapitalOrDryHoleExpCode)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CAPITAL_OR_DRY_HOLE_EXP_CODE");

//                entity.Property(e => e.CcGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_GROUP_CODE");

//                entity.Property(e => e.CcName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NAME");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_NUM");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_TYPE_CODE");

//                entity.Property(e => e.CcTypeDesc)
//                    .HasMaxLength(4000)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_desc");

//                entity.Property(e => e.CcUdf10Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_10_CODE");

//                entity.Property(e => e.CcUdf11Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_11_CODE");

//                entity.Property(e => e.CcUdf12Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_12_CODE");

//                entity.Property(e => e.CcUdf13Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_13_CODE");

//                entity.Property(e => e.CcUdf14Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_14_CODE");

//                entity.Property(e => e.CcUdf15Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_15_CODE");

//                entity.Property(e => e.CcUdf16Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_16_CODE");

//                entity.Property(e => e.CcUdf17Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_17_CODE");

//                entity.Property(e => e.CcUdf18Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_18_CODE");

//                entity.Property(e => e.CcUdf19Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_19_CODE");

//                entity.Property(e => e.CcUdf1Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_1_CODE");

//                entity.Property(e => e.CcUdf20Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_20_CODE");

//                entity.Property(e => e.CcUdf2Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_2_CODE");

//                entity.Property(e => e.CcUdf3Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_3_CODE");

//                entity.Property(e => e.CcUdf4Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_4_CODE");

//                entity.Property(e => e.CcUdf5Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_5_CODE");

//                entity.Property(e => e.CcUdf6Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_6_CODE");

//                entity.Property(e => e.CcUdf7Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_7_CODE");

//                entity.Property(e => e.CcUdf8Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_8_CODE");

//                entity.Property(e => e.CcUdf9Code)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_UDF_9_CODE");

//                entity.Property(e => e.ContractOperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("CONTRACT_OPERATOR_CLIENT_ID");

//                entity.Property(e => e.CountryCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("COUNTRY_CODE");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("CREATE_DATE");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DefaultGlSubCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("DEFAULT_GL_SUB_CODE");

//                entity.Property(e => e.JibFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("JIB_FLAG");

//                entity.Property(e => e.JibeCheckAmt)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("JIBE_CHECK_AMT");

//                entity.Property(e => e.JibeCheckVariancePct)
//                    .HasColumnType("numeric(14, 10)")
//                    .HasColumnName("JIBE_CHECK_VARIANCE_PCT");

//                entity.Property(e => e.LandFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("LAND_FILE_NUMBER");

//                entity.Property(e => e.LastEmpBenefitAcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_EMP_BENEFIT_ACCT_PER_DATE");

//                entity.Property(e => e.LastEmpBenefitAdjDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_EMP_BENEFIT_ADJ_DATE");

//                entity.Property(e => e.LastOverheadAcctPerDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_OVERHEAD_ACCT_PER_DATE");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("LAST_UPDT_DATE");

//                entity.Property(e => e.LastUpdtUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDT_USER");

//                entity.Property(e => e.LeaseSplitNumber)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("LEASE_SPLIT_NUMBER");

//                entity.Property(e => e.LocationElement1)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_1");

//                entity.Property(e => e.LocationElement2)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_2");

//                entity.Property(e => e.LocationElement3)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_3");

//                entity.Property(e => e.LocationElement4)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_4");

//                entity.Property(e => e.LocationElement5)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_5");

//                entity.Property(e => e.LocationElement6)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_6");

//                entity.Property(e => e.LocationElement7)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_7");

//                entity.Property(e => e.LocationElement8)
//                    .HasMaxLength(7)
//                    .IsUnicode(false)
//                    .HasColumnName("LOCATION_ELEMENT_8");

//                entity.Property(e => e.ManagingOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("MANAGING_ORG_ID");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MunicipalityCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("MUNICIPALITY_CODE");

//                entity.Property(e => e.OcCostCentreFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OC_COST_CENTRE_FLAG");

//                entity.Property(e => e.OperatingCentreCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATING_CENTRE_CODE");

//                entity.Property(e => e.OperatorCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OPERATOR_CC_NUM");

//                entity.Property(e => e.OperatorClientId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("OPERATOR_CLIENT_ID");

//                entity.Property(e => e.OverheadMethodCode)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OVERHEAD_METHOD_CODE");

//                entity.Property(e => e.OverheadRecoveryCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("OVERHEAD_RECOVERY_CC_NUM");

//                entity.Property(e => e.OwnershipOrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("OWNERSHIP_ORG_ID");

//                entity.Property(e => e.PrimaryProdCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRIMARY_PROD_CODE");

//                entity.Property(e => e.ProducingZone)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCING_ZONE");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(17)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM_CODE");

//                entity.Property(e => e.TaxStreamCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("TAX_STREAM_CODE");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TermUser)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("TERM_USER");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(18)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_CC_NUM");

//                entity.Property(e => e.UnitCode)
//                    .HasColumnType("numeric(5, 0)")
//                    .HasColumnName("UNIT_CODE");

//                entity.Property(e => e.UseJibeEditsFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("USE_JIBE_EDITS_FLAG");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(56)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.WellRigReleaseDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_RIG_RELEASE_DATE");

//                entity.Property(e => e.WellShutInDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_SHUT_IN_DATE");

//                entity.Property(e => e.WellSpudDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_SPUD_DATE");

//                entity.Property(e => e.WellStatCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STAT_CODE");

//                entity.Property(e => e.WellStatLastUpdateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("WELL_STAT_LAST_UPDATE_DATE");

//                entity.Property(e => e.WellStatLastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STAT_LAST_UPDATE_USER");

//                entity.Property(e => e.WellTotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("WELL_TOTAL_DEPTH");
//            });

//            modelBuilder.Entity<VQbyteSourceCostEstimate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_source_cost_estimates", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.GrossEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("gross_est");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.NetEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("net_est");

//                entity.Property(e => e.OrigGrossEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("orig_gross_est");

//                entity.Property(e => e.OrigNetEst)
//                    .HasColumnType("numeric(14, 2)")
//                    .HasColumnName("orig_net_est");

//                entity.Property(e => e.SuppGrossEst)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("supp_gross_est");

//                entity.Property(e => e.SuppNetEst)
//                    .HasColumnType("numeric(16, 2)")
//                    .HasColumnName("supp_net_est");
//            });

//            modelBuilder.Entity<VQbyteVendor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_qbyte_vendors", "stage");

//                entity.Property(e => e.Aboriginal)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("aboriginal");

//                entity.Property(e => e.ApCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ap_credit_days");

//                entity.Property(e => e.ArCreditDays)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ar_credit_days");

//                entity.Property(e => e.BaCreditStatus)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_credit_status");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_type_code");

//                entity.Property(e => e.EncanaBaNumber)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("encana_ba_number");

//                entity.Property(e => e.GovtEntity)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_entity");

//                entity.Property(e => e.GovtParent)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("govt_parent");

//                entity.Property(e => e.HoldDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("hold_date");

//                entity.Property(e => e.InactiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("inactive_date");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.PaymentCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_code");

//                entity.Property(e => e.VendorAlphaGroup)
//                    .HasMaxLength(9)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_alpha_group");

//                entity.Property(e => e.VendorKey)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("vendor_key");

//                entity.Property(e => e.VendorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_name");
//            });

//            modelBuilder.Entity<VReservesResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_reserves_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<VReservesResultsBtaxProduct>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_reserves_results_btax_product", "stage_valnav");

//                entity.Property(e => e.FailureNetVolume).HasColumnName("FAILURE_NET_VOLUME");

//                entity.Property(e => e.FailureWiVolume).HasColumnName("FAILURE_WI_VOLUME");

//                entity.Property(e => e.FiRevenue).HasColumnName("FI_REVENUE");

//                entity.Property(e => e.FiVolume).HasColumnName("FI_VOLUME");

//                entity.Property(e => e.GrossRevenue).HasColumnName("GROSS_REVENUE");

//                entity.Property(e => e.GrossVolume).HasColumnName("GROSS_VOLUME");

//                entity.Property(e => e.NetRevenue).HasColumnName("NET_REVENUE");

//                entity.Property(e => e.NetVolume)
//                    .HasColumnType("decimal(30, 11)")
//                    .HasColumnName("NET_VOLUME");

//                entity.Property(e => e.Npv1).HasColumnName("NPV1");

//                entity.Property(e => e.Npv2).HasColumnName("NPV2");

//                entity.Property(e => e.Npv3).HasColumnName("NPV3");

//                entity.Property(e => e.Npv4).HasColumnName("NPV4");

//                entity.Property(e => e.Npv5).HasColumnName("NPV5");

//                entity.Property(e => e.ProductId)
//                    .HasMaxLength(50)
//                    .HasColumnName("PRODUCT_ID");

//                entity.Property(e => e.RawGrossVolume).HasColumnName("RAW_GROSS_VOLUME");

//                entity.Property(e => e.RawNetVolume).HasColumnName("RAW_NET_VOLUME");

//                entity.Property(e => e.RawRiVolume).HasColumnName("RAW_RI_VOLUME");

//                entity.Property(e => e.RawWiVolume).HasColumnName("RAW_WI_VOLUME");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("RESULT_ID");

//                entity.Property(e => e.RiRevenue).HasColumnName("RI_REVENUE");

//                entity.Property(e => e.RiVolume)
//                    .HasColumnType("decimal(30, 11)")
//                    .HasColumnName("RI_VOLUME");

//                entity.Property(e => e.RoyAdjCrown).HasColumnName("ROY_ADJ_CROWN");

//                entity.Property(e => e.RoyAdjFreehold).HasColumnName("ROY_ADJ_FREEHOLD");

//                entity.Property(e => e.RoyAdjIndian).HasColumnName("ROY_ADJ_INDIAN");

//                entity.Property(e => e.RoyBasisFiRevenue).HasColumnName("ROY_BASIS_FI_REVENUE");

//                entity.Property(e => e.RoyBasisGrossRevenue).HasColumnName("ROY_BASIS_GROSS_REVENUE");

//                entity.Property(e => e.RoyBasisWiRevenue).HasColumnName("ROY_BASIS_WI_REVENUE");

//                entity.Property(e => e.RoyGrCrown).HasColumnName("ROY_GR_CROWN");

//                entity.Property(e => e.RoyGrFreehold).HasColumnName("ROY_GR_FREEHOLD");

//                entity.Property(e => e.RoyGrIndian).HasColumnName("ROY_GR_INDIAN");

//                entity.Property(e => e.StepDate).HasColumnName("STEP_DATE");

//                entity.Property(e => e.SuccessNetVolume).HasColumnName("SUCCESS_NET_VOLUME");

//                entity.Property(e => e.SuccessWiVolume).HasColumnName("SUCCESS_WI_VOLUME");

//                entity.Property(e => e.WiRevenue).HasColumnName("WI_REVENUE");

//                entity.Property(e => e.WiVolume)
//                    .HasColumnType("decimal(30, 11)")
//                    .HasColumnName("WI_VOLUME");
//            });

//            modelBuilder.Entity<VRptApInvoiceAllocation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_ap_invoice_allocation", "openinvoice");

//                entity.Property(e => e.ApUser)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("ap_user");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.OiUrl)
//                    .HasMaxLength(212)
//                    .HasColumnName("oi_url");

//                entity.Property(e => e.VendorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_name");
//            });

//            modelBuilder.Entity<VRptCsxLatestWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_csx_latest_working_interest", "stage_csx");

//                entity.Property(e => e.CsxCostCentre)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("csx_cost_centre");

//                entity.Property(e => e.CsxOwnershipPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("csx_ownership_percent");

//                entity.Property(e => e.CsxTotalWellWrkngIntrst)
//                    .HasColumnType("numeric(38, 8)")
//                    .HasColumnName("csx_total_well_wrkng_intrst");

//                entity.Property(e => e.DoiType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("doi_type")
//                    .IsFixedLength();

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_number")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_status")
//                    .IsFixedLength();

//                entity.Property(e => e.FormattedPartnerId).HasColumnName("formatted_partner_id");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("licence_number");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("name");

//                entity.Property(e => e.NetOwner)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("net_owner");

//                entity.Property(e => e.OriginalTerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("original_termination_date");

//                entity.Property(e => e.PartnerId)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_id")
//                    .IsFixedLength();

//                entity.Property(e => e.PartnerType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_type")
//                    .IsFixedLength();

//                entity.Property(e => e.PctRnk).HasColumnName("pct_rnk");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status")
//                    .IsFixedLength();
//            });

//            modelBuilder.Entity<VRptCsxWellInsuranceElection>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_csx_well_insurance_election", "stage_csx");

//                entity.Property(e => e.ContractFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("Contract_File_Number")
//                    .IsFixedLength();

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.InsuranceElection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("Insurance_Election");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENCE_NUMBER");

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SORTED_UWI");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.WellUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_UWI");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(201)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging20220414>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_2022-04-14", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(202)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging20220414b>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_2022-04-14b", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(202)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging20220418>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_2022-04-18", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(202)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging20220505>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_2022-05-05", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(202)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAging20220511>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_2022_05_11", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(201)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAgingBak>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_bak", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(202)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptDepartmentUserAgingPlusQbyte>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_department_user_aging_plus_qbyte", "openinvoice");

//                entity.Property(e => e.DaysCountOfInvCurrent).HasColumnName("Days count of Inv Current");

//                entity.Property(e => e.DaysWith3060).HasColumnName("Days with 30-60");

//                entity.Property(e => e.DaysWith6090).HasColumnName("Days with 60-90");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.InvAmt3060Days).HasColumnName("Inv Amt 30-60 Days");

//                entity.Property(e => e.InvAmt6090Days).HasColumnName("Inv Amt 60-90 Days");

//                entity.Property(e => e.InvAmtCurrent).HasColumnName("Inv Amt Current");

//                entity.Property(e => e.InvAmtOver90Days).HasColumnName("Inv Amt over 90 Days");

//                entity.Property(e => e.InvoiceCountCurrent).HasColumnName("Invoice Count Current");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("Invoice Total");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TotalCountOfInvDays).HasColumnName("Total Count of Inv Days");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(201)
//                    .HasColumnName("user_name");
//            });

//            modelBuilder.Entity<VRptInsuranceElection>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_insurance_election", "stage");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.CostCentreId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_id");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.InsuranceElection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("insurance_election");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.OperatorId)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("Operator_ID");

//                entity.Property(e => e.OperatorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("Operator_Name");

//                entity.Property(e => e.WorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("working_interest_pct");
//            });

//            modelBuilder.Entity<VRptOpenticketsCurrentStatus>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_opentickets_current_status", "openinvoice");

//                entity.Property(e => e.NumberOfTickets).HasColumnName("number_of_tickets");

//                entity.Property(e => e.SupplierName)
//                    .HasMaxLength(1000)
//                    .HasColumnName("supplier_name");

//                entity.Property(e => e.TicketStatus)
//                    .HasMaxLength(500)
//                    .HasColumnName("ticket_status");

//                entity.Property(e => e.Username)
//                    .HasMaxLength(1000)
//                    .HasColumnName("username");
//            });

//            modelBuilder.Entity<VRptOwnershipSummary>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_ownership_summary", "STAGE_METRIX");

//                entity.Property(e => e.AccountingDate)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNTING_DATE");

//                entity.Property(e => e.FeesPath)
//                    .HasMaxLength(119)
//                    .IsUnicode(false);

//                entity.Property(e => e.FileName)
//                    .HasMaxLength(8000)
//                    .IsUnicode(false);

//                entity.Property(e => e.FilePath)
//                    .HasMaxLength(126)
//                    .IsUnicode(false);

//                entity.Property(e => e.OwnerId)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("OWNER_ID");
//            });

//            modelBuilder.Entity<VRptQbLatestWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_qb_latest_working_interest", "stage");

//                entity.Property(e => e.AcctGroupCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("acct_group_code");

//                entity.Property(e => e.AgreementId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("agreement_id");

//                entity.Property(e => e.BaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("BA_ID");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("BA_NAME");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("CC_TYPE_CODE");

//                entity.Property(e => e.CodeDesc)
//                    .HasMaxLength(80)
//                    .IsUnicode(false)
//                    .HasColumnName("CODE_DESC");

//                entity.Property(e => e.CreateDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("create_date");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("expiry_date");

//                entity.Property(e => e.LaPartnerPct)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("LA_PARTNER_PCT");

//                entity.Property(e => e.LastUpdtDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("last_updt_date");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.NextEffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("next_effective_date");

//                entity.Property(e => e.OrgId)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("org_id");

//                entity.Property(e => e.OwnershipLinkId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ownership_link_id");

//                entity.Property(e => e.PartnerBaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("PARTNER_BA_ID");

//                entity.Property(e => e.PctRnk).HasColumnName("pct_rnk");

//                entity.Property(e => e.QbDoi)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("QB_DOI");

//                entity.Property(e => e.Rank).HasColumnName("RANK");

//                entity.Property(e => e.TermDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("TERM_DATE");

//                entity.Property(e => e.TotalWi)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("TOTAL_WI");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VRptRoyaltyObligation>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_royalty_obligations", "STAGE_METRIX");

//                entity.Property(e => e.ControlGroupId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group_id");

//                entity.Property(e => e.Factor)
//                    .HasColumnType("numeric(18, 8)")
//                    .HasColumnName("factor");

//                entity.Property(e => e.FactorDescription)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("factor_description");

//                entity.Property(e => e.FormulaDescription)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("formula_description");

//                entity.Property(e => e.PaymentType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("payment_type");

//                entity.Property(e => e.ProductCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("product_code");

//                entity.Property(e => e.ProductionDate)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("production_date");

//                entity.Property(e => e.RequiredFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("required_flag");

//                entity.Property(e => e.RoyaltyFormulaId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_formula_id");

//                entity.Property(e => e.RoyaltyGlobalFactorId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_global_factor_id");

//                entity.Property(e => e.RoyaltyObligationId)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_obligation_id");

//                entity.Property(e => e.RoyaltyOwnerId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_id");

//                entity.Property(e => e.RoyaltyOwnerName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_owner_name");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.WellTractId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("well_tract_id");

//                entity.Property(e => e.WellTractName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Well_Tract_Name");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<VRptServiceAgreementFeeContract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_service_agreement_fee_contract", "stage_csx");

//                entity.Property(e => e.AdminCompany)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("admin_company");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.CapitalFee)
//                    .HasColumnType("numeric(11, 4)")
//                    .HasColumnName("capital_fee");

//                entity.Property(e => e.ContractDate)
//                    .HasColumnType("date")
//                    .HasColumnName("contract_date");

//                entity.Property(e => e.ContractName)
//                    .HasMaxLength(90)
//                    .IsUnicode(false)
//                    .HasColumnName("contract_name");

//                entity.Property(e => e.Division)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("division")
//                    .IsFixedLength();

//                entity.Property(e => e.FacilityFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_file_number")
//                    .IsFixedLength();

//                entity.Property(e => e.FacilityFileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_file_status")
//                    .IsFixedLength();

//                entity.Property(e => e.FacilityFileSub)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_file_sub")
//                    .IsFixedLength();

//                entity.Property(e => e.FeeBasis)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("fee_basis")
//                    .IsFixedLength();

//                entity.Property(e => e.FeeEffectiveDate)
//                    .HasColumnType("date")
//                    .HasColumnName("fee_effective_date");

//                entity.Property(e => e.Location)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("location");

//                entity.Property(e => e.OperatingFee)
//                    .HasColumnType("numeric(11, 4)")
//                    .HasColumnName("operating_fee");

//                entity.Property(e => e.ProcDescription)
//                    .HasMaxLength(1910)
//                    .IsUnicode(false)
//                    .HasColumnName("proc_description");

//                entity.Property(e => e.Processor)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("processor")
//                    .IsFixedLength();

//                entity.Property(e => e.ProcessorLocation)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("processor_location");

//                entity.Property(e => e.ProcessorProject)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("processor_project");

//                entity.Property(e => e.Producer)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("producer")
//                    .IsFixedLength();

//                entity.Property(e => e.ProjectDescription)
//                    .HasMaxLength(1910)
//                    .IsUnicode(false)
//                    .HasColumnName("project_description");

//                entity.Property(e => e.ProjectNumber)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("project_number");

//                entity.Property(e => e.ServiceFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("service_file_number")
//                    .IsFixedLength();

//                entity.Property(e => e.ServiceFileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("service_file_status")
//                    .IsFixedLength();

//                entity.Property(e => e.ServiceTermDate)
//                    .HasColumnType("date")
//                    .HasColumnName("service_term_date");

//                entity.Property(e => e.ServiceType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("service_type")
//                    .IsFixedLength();

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("date")
//                    .HasColumnName("termination_date");

//                entity.Property(e => e.TotalFees)
//                    .HasColumnType("numeric(12, 4)")
//                    .HasColumnName("total_fees");

//                entity.Property(e => e.VariableFee)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("variable_fee");
//            });

//            modelBuilder.Entity<VRptValnavCapitalActual>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_valnav_capital_actuals", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(100)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.ApprovedEstimate).HasColumnName("approved_estimate");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostDate)
//                    .HasColumnType("date")
//                    .HasColumnName("cost_date");

//                entity.Property(e => e.CostType)
//                    .HasMaxLength(50)
//                    .HasColumnName("cost_type");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.EndDate)
//                    .HasColumnType("date")
//                    .HasColumnName("end_date");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_id");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.IncurredTotal).HasColumnName("incurred_total");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.RevisedEstimate).HasColumnName("revised_estimate");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Value).HasColumnName("value");
//            });

//            modelBuilder.Entity<VRptWiExceptionQbC>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_rpt_wi_exception_qb_cs", "stage");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CsxTotalWi)
//                    .HasColumnType("numeric(38, 8)")
//                    .HasColumnName("csx__total_wi");

//                entity.Property(e => e.CsxWorkingInterest)
//                    .HasColumnType("numeric(38, 8)")
//                    .HasColumnName("csx_working_interest");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.ExceptionType)
//                    .HasMaxLength(24)
//                    .IsUnicode(false);

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_number");

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("file_status");

//                entity.Property(e => e.NumMismatches).HasColumnName("Num_Mismatches");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.PartnerId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("partner_id");

//                entity.Property(e => e.PartnerName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("partner_name");

//                entity.Property(e => e.QbyteTotalWi)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("qbyte_total_wi");

//                entity.Property(e => e.QbyteWorkingInterest)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("qbyte_working_interest");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("well_status");
//            });

//            modelBuilder.Entity<VSiteviewSourceCostEstimate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_siteview_source_cost_estimates", "stage");

//                entity.Property(e => e.AcctDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acct_desc");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.Costrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("costrec");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(50)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_flag");

//                entity.Property(e => e.IsValidAfe)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_afe");

//                entity.Property(e => e.IsValidQbyteMajor)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_qbyte_major");

//                entity.Property(e => e.Jobrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("jobrec");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(255)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("date")
//                    .HasColumnName("start_date");

//                entity.Property(e => e.SvAfeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("sv_afe_type");

//                entity.Property(e => e.TimePeriod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("time_period");

//                entity.Property(e => e.Vendor)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");
//            });

//            modelBuilder.Entity<VSourceInvoicesDatum>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_source_invoices_data", "openinvoice");

//                entity.Property(e => e.DepartmentName)
//                    .HasMaxLength(100)
//                    .HasColumnName("department_name");

//                entity.Property(e => e.ElapsedDays).HasColumnName("elapsed_days");

//                entity.Property(e => e.ExcludeQbyte)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("exclude_qbyte");

//                entity.Property(e => e.IncludeQbyte)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("include_qbyte");

//                entity.Property(e => e.InvoiceDate)
//                    .HasMaxLength(50)
//                    .HasColumnName("invoice_date");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_key");

//                entity.Property(e => e.InvoiceNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("invoice_number");

//                entity.Property(e => e.InvoiceTotal).HasColumnName("invoice_total");

//                entity.Property(e => e.LessThan30Days).HasColumnName("less than 30 Days");

//                entity.Property(e => e.Over90Days).HasColumnName("Over 90 Days");

//                entity.Property(e => e.SiteName)
//                    .HasMaxLength(250)
//                    .HasColumnName("site_name");

//                entity.Property(e => e.TodaysDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("todays_date");

//                entity.Property(e => e.UserName)
//                    .HasMaxLength(201)
//                    .HasColumnName("user_name");

//                entity.Property(e => e.VendorCode)
//                    .HasMaxLength(100)
//                    .HasColumnName("vendor_code");

//                entity.Property(e => e.VendorName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("vendor_name");

//                entity.Property(e => e._3060Days).HasColumnName("30-60 Days");

//                entity.Property(e => e._6090Days).HasColumnName("60-90 Days");
//            });

//            modelBuilder.Entity<VSourceMetrixControlGroup>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_source_metrix_control_groups", "STAGE_METRIX");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ControlGroup)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("control_group");
//            });

//            modelBuilder.Entity<VStgIhsVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_ihs_volumes", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("cond");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("gas");

//                entity.Property(e => e.Month)
//                    .HasMaxLength(128)
//                    .HasColumnName("month");

//                entity.Property(e => e.Oil)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("oil");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("water");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("year");
//            });

//            modelBuilder.Entity<VStgIhsVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_ihs_volumes_incr", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Cond)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("cond");

//                entity.Property(e => e.Gas)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("gas");

//                entity.Property(e => e.Month)
//                    .HasMaxLength(128)
//                    .HasColumnName("month");

//                entity.Property(e => e.Oil)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("oil");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.Water)
//                    .HasColumnType("numeric(38, 4)")
//                    .HasColumnName("water");

//                entity.Property(e => e.Year)
//                    .HasColumnType("numeric(4, 0)")
//                    .HasColumnName("year");
//            });

//            modelBuilder.Entity<VStgInvoiceEnergylink>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_invoice_energylink", "openinvoice");

//                entity.Property(e => e.AfeNumber)
//                    .HasMaxLength(100)
//                    .HasColumnName("afe_number");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(100)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.InvoiceKey)
//                    .HasMaxLength(100)
//                    .HasColumnName("Invoice_key");

//                entity.Property(e => e.MajorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("major_account");

//                entity.Property(e => e.MinorAccount)
//                    .HasMaxLength(100)
//                    .HasColumnName("minor_account");

//                entity.Property(e => e.OrgId)
//                    .HasMaxLength(100)
//                    .HasColumnName("org_id");

//                entity.Property(e => e.ServiceDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("service_date");
//            });

//            modelBuilder.Entity<VStgOnProdDate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_on_prod_dates", "stage");

//                entity.Property(e => e.DataSource)
//                    .HasMaxLength(15)
//                    .IsUnicode(false)
//                    .HasColumnName("Data_Source");

//                entity.Property(e => e.OnProdDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("on_prod_date");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VStgProdviewAllFlownetHierarchy>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_prodview_all_flownet_hierarchy", "datamart_marketing");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.ChildIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("child_idrec");

//                entity.Property(e => e.ChildName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("child_name");

//                entity.Property(e => e.CubeChild)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child");

//                entity.Property(e => e.CubeParent)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_parent");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.FlownetId)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_id");

//                entity.Property(e => e.FlownetName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("flownet_name");

//                entity.Property(e => e.Idrecmetereventtk)
//                    .HasMaxLength(26)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecmetereventtk");

//                entity.Property(e => e.MeterType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meter_type");

//                entity.Property(e => e.ParentIdrec)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_idrec");

//                entity.Property(e => e.ParentName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_name");

//                entity.Property(e => e.PvunitDttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("pvunit_dttmend");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.Typ2)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ2");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VStgProdviewGroupPointDoi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_prodview_group_point_doi", "datamart_marketing");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_name");

//                entity.Property(e => e.Dttmend)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmend");

//                entity.Property(e => e.Dttmstart)
//                    .HasColumnType("datetime")
//                    .HasColumnName("dttmstart");

//                entity.Property(e => e.Idflownet)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idflownet");

//                entity.Property(e => e.Idrecparent)
//                    .HasMaxLength(32)
//                    .IsUnicode(false)
//                    .HasColumnName("idrecparent");

//                entity.Property(e => e.Refidb)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("refidb");

//                entity.Property(e => e.Typ1)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("typ1");

//                entity.Property(e => e.WorkingInterest)
//                    .HasColumnType("numeric(13, 5)")
//                    .HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VStgProdviewVolume>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_prodview_volumes", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.ButaneSalesBoeVolume).HasColumnName("butane_sales_boe_volume");

//                entity.Property(e => e.ButaneSalesImperialVolume).HasColumnName("butane_sales_imperial_volume");

//                entity.Property(e => e.ButaneSalesMcfeVolume).HasColumnName("butane_sales_mcfe_volume");

//                entity.Property(e => e.ButaneSalesMetricVolume).HasColumnName("butane_sales_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.CondensateSalesBoeVolume).HasColumnName("condensate_sales_boe_volume");

//                entity.Property(e => e.CondensateSalesImperialVolume).HasColumnName("condensate_sales_imperial_volume");

//                entity.Property(e => e.CondensateSalesMcfeVolume).HasColumnName("condensate_sales_mcfe_volume");

//                entity.Property(e => e.CondensateSalesMetricVolume).HasColumnName("condensate_sales_metric_volume");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.EthaneSalesBoeVolume).HasColumnName("ethane_sales_boe_volume");

//                entity.Property(e => e.EthaneSalesImperialVolume).HasColumnName("ethane_sales_imperial_volume");

//                entity.Property(e => e.EthaneSalesMcfeVolume).HasColumnName("ethane_sales_mcfe_volume");

//                entity.Property(e => e.EthaneSalesMetricVolume).HasColumnName("ethane_sales_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GasSalesBoeVolume).HasColumnName("gas_sales_boe_volume");

//                entity.Property(e => e.GasSalesImperialVolume).HasColumnName("gas_sales_imperial_volume");

//                entity.Property(e => e.GasSalesMcfeVolume).HasColumnName("gas_sales_mcfe_volume");

//                entity.Property(e => e.GasSalesMetricVolume).HasColumnName("gas_sales_metric_volume");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.OilSalesBoeVolume).HasColumnName("oil_sales_boe_volume");

//                entity.Property(e => e.OilSalesImperialVolume).HasColumnName("oil_sales_imperial_volume");

//                entity.Property(e => e.OilSalesMcfeVolume).HasColumnName("oil_sales_mcfe_volume");

//                entity.Property(e => e.OilSalesMetricVolume).HasColumnName("oil_sales_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PentaneSalesBoeVolume).HasColumnName("pentane_sales_boe_volume");

//                entity.Property(e => e.PentaneSalesImperialVolume).HasColumnName("pentane_sales_imperial_volume");

//                entity.Property(e => e.PentaneSalesMcfeVolume).HasColumnName("pentane_sales_mcfe_volume");

//                entity.Property(e => e.PentaneSalesMetricVolume).HasColumnName("pentane_sales_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.PropaneSalesBoeVolume).HasColumnName("propane_sales_boe_volume");

//                entity.Property(e => e.PropaneSalesImperialVolume).HasColumnName("propane_sales_imperial_volume");

//                entity.Property(e => e.PropaneSalesMcfeVolume).HasColumnName("propane_sales_mcfe_volume");

//                entity.Property(e => e.PropaneSalesMetricVolume).HasColumnName("propane_sales_metric_volume");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TotalNglSalesBoeVolume).HasColumnName("total_ngl_sales_boe_volume");

//                entity.Property(e => e.TotalNglSalesImperialVolume).HasColumnName("total_ngl_sales_imperial_volume");

//                entity.Property(e => e.TotalNglSalesMcfeVolume).HasColumnName("total_ngl_sales_mcfe_volume");

//                entity.Property(e => e.TotalNglSalesMetricVolume).HasColumnName("total_ngl_sales_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VStgProdviewVolumesIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_prodview_volumes_incr", "stage");

//                entity.Property(e => e.ActivityDate)
//                    .HasColumnType("date")
//                    .HasColumnName("activity_date");

//                entity.Property(e => e.ActivityDateKey).HasColumnName("activity_date_key");

//                entity.Property(e => e.Bsw).HasColumnName("bsw");

//                entity.Property(e => e.ButaneBoeVolume).HasColumnName("butane_boe_volume");

//                entity.Property(e => e.ButaneImperialVolume).HasColumnName("butane_imperial_volume");

//                entity.Property(e => e.ButaneMcfeVolume).HasColumnName("butane_mcfe_volume");

//                entity.Property(e => e.ButaneMetricVolume).HasColumnName("butane_metric_volume");

//                entity.Property(e => e.ButaneSalesBoeVolume).HasColumnName("butane_sales_boe_volume");

//                entity.Property(e => e.ButaneSalesImperialVolume).HasColumnName("butane_sales_imperial_volume");

//                entity.Property(e => e.ButaneSalesMcfeVolume).HasColumnName("butane_sales_mcfe_volume");

//                entity.Property(e => e.ButaneSalesMetricVolume).HasColumnName("butane_sales_metric_volume");

//                entity.Property(e => e.CasingPressure).HasColumnName("casing_pressure");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.CondensateBoeVolume).HasColumnName("condensate_boe_volume");

//                entity.Property(e => e.CondensateImperialVolume).HasColumnName("condensate_imperial_volume");

//                entity.Property(e => e.CondensateMcfeVolume).HasColumnName("condensate_mcfe_volume");

//                entity.Property(e => e.CondensateMetricVolume).HasColumnName("condensate_metric_volume");

//                entity.Property(e => e.CondensateSalesBoeVolume).HasColumnName("condensate_sales_boe_volume");

//                entity.Property(e => e.CondensateSalesImperialVolume).HasColumnName("condensate_sales_imperial_volume");

//                entity.Property(e => e.CondensateSalesMcfeVolume).HasColumnName("condensate_sales_mcfe_volume");

//                entity.Property(e => e.CondensateSalesMetricVolume).HasColumnName("condensate_sales_metric_volume");

//                entity.Property(e => e.EthaneBoeVolume).HasColumnName("ethane_boe_volume");

//                entity.Property(e => e.EthaneImperialVolume).HasColumnName("ethane_imperial_volume");

//                entity.Property(e => e.EthaneMcfeVolume).HasColumnName("ethane_mcfe_volume");

//                entity.Property(e => e.EthaneMetricVolume).HasColumnName("ethane_metric_volume");

//                entity.Property(e => e.EthaneSalesBoeVolume).HasColumnName("ethane_sales_boe_volume");

//                entity.Property(e => e.EthaneSalesImperialVolume).HasColumnName("ethane_sales_imperial_volume");

//                entity.Property(e => e.EthaneSalesMcfeVolume).HasColumnName("ethane_sales_mcfe_volume");

//                entity.Property(e => e.EthaneSalesMetricVolume).HasColumnName("ethane_sales_metric_volume");

//                entity.Property(e => e.GasBoeVolume).HasColumnName("gas_boe_volume");

//                entity.Property(e => e.GasImperialVolume).HasColumnName("gas_imperial_volume");

//                entity.Property(e => e.GasMcfeVolume).HasColumnName("gas_mcfe_volume");

//                entity.Property(e => e.GasMetricVolume).HasColumnName("gas_metric_volume");

//                entity.Property(e => e.GasSalesBoeVolume).HasColumnName("gas_sales_boe_volume");

//                entity.Property(e => e.GasSalesImperialVolume).HasColumnName("gas_sales_imperial_volume");

//                entity.Property(e => e.GasSalesMcfeVolume).HasColumnName("gas_sales_mcfe_volume");

//                entity.Property(e => e.GasSalesMetricVolume).HasColumnName("gas_sales_metric_volume");

//                entity.Property(e => e.HoursDown)
//                    .HasColumnType("numeric(19, 4)")
//                    .HasColumnName("hours_down");

//                entity.Property(e => e.HoursOn)
//                    .HasColumnType("numeric(18, 4)")
//                    .HasColumnName("hours_on");

//                entity.Property(e => e.JointsToFluid).HasColumnName("joints_to_fluid");

//                entity.Property(e => e.OilBoeVolume).HasColumnName("oil_boe_volume");

//                entity.Property(e => e.OilImperialVolume).HasColumnName("oil_imperial_volume");

//                entity.Property(e => e.OilMcfeVolume).HasColumnName("oil_mcfe_volume");

//                entity.Property(e => e.OilMetricVolume).HasColumnName("oil_metric_volume");

//                entity.Property(e => e.OilSalesBoeVolume).HasColumnName("oil_sales_boe_volume");

//                entity.Property(e => e.OilSalesImperialVolume).HasColumnName("oil_sales_imperial_volume");

//                entity.Property(e => e.OilSalesMcfeVolume).HasColumnName("oil_sales_mcfe_volume");

//                entity.Property(e => e.OilSalesMetricVolume).HasColumnName("oil_sales_metric_volume");

//                entity.Property(e => e.PentaneBoeVolume).HasColumnName("pentane_boe_volume");

//                entity.Property(e => e.PentaneImperialVolume).HasColumnName("pentane_imperial_volume");

//                entity.Property(e => e.PentaneMcfeVolume).HasColumnName("pentane_mcfe_volume");

//                entity.Property(e => e.PentaneMetricVolume).HasColumnName("pentane_metric_volume");

//                entity.Property(e => e.PentaneSalesBoeVolume).HasColumnName("pentane_sales_boe_volume");

//                entity.Property(e => e.PentaneSalesImperialVolume).HasColumnName("pentane_sales_imperial_volume");

//                entity.Property(e => e.PentaneSalesMcfeVolume).HasColumnName("pentane_sales_mcfe_volume");

//                entity.Property(e => e.PentaneSalesMetricVolume).HasColumnName("pentane_sales_metric_volume");

//                entity.Property(e => e.PropaneBoeVolume).HasColumnName("propane_boe_volume");

//                entity.Property(e => e.PropaneImperialVolume).HasColumnName("propane_imperial_volume");

//                entity.Property(e => e.PropaneMcfeVolume).HasColumnName("propane_mcfe_volume");

//                entity.Property(e => e.PropaneMetricVolume).HasColumnName("propane_metric_volume");

//                entity.Property(e => e.PropaneSalesBoeVolume).HasColumnName("propane_sales_boe_volume");

//                entity.Property(e => e.PropaneSalesImperialVolume).HasColumnName("propane_sales_imperial_volume");

//                entity.Property(e => e.PropaneSalesMcfeVolume).HasColumnName("propane_sales_mcfe_volume");

//                entity.Property(e => e.PropaneSalesMetricVolume).HasColumnName("propane_sales_metric_volume");

//                entity.Property(e => e.SiteId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("site_id");

//                entity.Property(e => e.TotalBoeVolume).HasColumnName("total_boe_volume");

//                entity.Property(e => e.TotalLiquidBoeVolume).HasColumnName("total_liquid_boe_volume");

//                entity.Property(e => e.TotalLiquidImperialVolume).HasColumnName("total_liquid_imperial_volume");

//                entity.Property(e => e.TotalLiquidMcfeVolume).HasColumnName("total_liquid_mcfe_volume");

//                entity.Property(e => e.TotalLiquidMetricVolume).HasColumnName("total_liquid_metric_volume");

//                entity.Property(e => e.TotalNglBoeVolume).HasColumnName("total_ngl_boe_volume");

//                entity.Property(e => e.TotalNglImperialVolume).HasColumnName("total_ngl_imperial_volume");

//                entity.Property(e => e.TotalNglMcfeVolume).HasColumnName("total_ngl_mcfe_volume");

//                entity.Property(e => e.TotalNglMetricVolume).HasColumnName("total_ngl_metric_volume");

//                entity.Property(e => e.TotalNglSalesBoeVolume).HasColumnName("total_ngl_sales_boe_volume");

//                entity.Property(e => e.TotalNglSalesImperialVolume).HasColumnName("total_ngl_sales_imperial_volume");

//                entity.Property(e => e.TotalNglSalesMcfeVolume).HasColumnName("total_ngl_sales_mcfe_volume");

//                entity.Property(e => e.TotalNglSalesMetricVolume).HasColumnName("total_ngl_sales_metric_volume");

//                entity.Property(e => e.TubingPressure).HasColumnName("tubing_pressure");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WaterBoeVolume).HasColumnName("water_boe_volume");

//                entity.Property(e => e.WaterImperialVolume).HasColumnName("water_imperial_volume");

//                entity.Property(e => e.WaterMcfeVolume).HasColumnName("water_mcfe_volume");

//                entity.Property(e => e.WaterMetricVolume).HasColumnName("water_metric_volume");
//            });

//            modelBuilder.Entity<VStgQbyteCostCentreDoi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_qbyte_cost_centre_doi", "datamart_marketing");

//                entity.Property(e => e.AgreementId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("agreement_id");

//                entity.Property(e => e.BaId)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("ba_id");

//                entity.Property(e => e.BaName)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_name");

//                entity.Property(e => e.BaTypeCode)
//                    .HasMaxLength(8)
//                    .IsUnicode(false)
//                    .HasColumnName("ba_type_code");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.Doi)
//                    .HasColumnType("numeric(14, 11)")
//                    .HasColumnName("doi");

//                entity.Property(e => e.EffectiveDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("effective_date");

//                entity.Property(e => e.OriginalExpiryDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("original_expiry_date");

//                entity.Property(e => e.TerminationDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("termination_date");
//            });

//            modelBuilder.Entity<VStgQbyteVolumesFact>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_qbyte_volumes_facts", "stage");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.ButaneGrsBoeVolume).HasColumnName("butane_grs_boe_volume");

//                entity.Property(e => e.ButaneGrsImperialVolume).HasColumnName("butane_grs_imperial_volume");

//                entity.Property(e => e.ButaneGrsMcfeVolume).HasColumnName("butane_grs_mcfe_volume");

//                entity.Property(e => e.ButaneGrsMetricVolume).HasColumnName("butane_grs_metric_volume");

//                entity.Property(e => e.ButaneNetBoeVolume).HasColumnName("butane_net_boe_volume");

//                entity.Property(e => e.ButaneNetImperialVolume).HasColumnName("butane_net_imperial_volume");

//                entity.Property(e => e.ButaneNetMcfeVolume).HasColumnName("butane_net_mcfe_volume");

//                entity.Property(e => e.ButaneNetMetricVolume).HasColumnName("butane_net_metric_volume");

//                entity.Property(e => e.ButaneTgrsBoeVolume).HasColumnName("butane_tgrs_boe_volume");

//                entity.Property(e => e.ButaneTgrsImperialVolume).HasColumnName("butane_tgrs_imperial_volume");

//                entity.Property(e => e.ButaneTgrsMcfeVolume).HasColumnName("butane_tgrs_mcfe_volume");

//                entity.Property(e => e.ButaneTgrsMetricVolume).HasColumnName("butane_tgrs_metric_volume");

//                entity.Property(e => e.CondGrsBoeVolume).HasColumnName("cond_grs_boe_volume");

//                entity.Property(e => e.CondGrsImperialVolume).HasColumnName("cond_grs_imperial_volume");

//                entity.Property(e => e.CondGrsMcfeVolume).HasColumnName("cond_grs_mcfe_volume");

//                entity.Property(e => e.CondGrsMetricVolume).HasColumnName("cond_grs_metric_volume");

//                entity.Property(e => e.CondNetBoeVolume).HasColumnName("cond_net_boe_volume");

//                entity.Property(e => e.CondNetImperialVolume).HasColumnName("cond_net_imperial_volume");

//                entity.Property(e => e.CondNetMcfeVolume).HasColumnName("cond_net_mcfe_volume");

//                entity.Property(e => e.CondNetMetricVolume).HasColumnName("cond_net_metric_volume");

//                entity.Property(e => e.CondTgrsBoeVolume).HasColumnName("cond_tgrs_boe_volume");

//                entity.Property(e => e.CondTgrsImperialVolume).HasColumnName("cond_tgrs_imperial_volume");

//                entity.Property(e => e.CondTgrsMcfeVolume).HasColumnName("cond_tgrs_mcfe_volume");

//                entity.Property(e => e.CondTgrsMetricVolume).HasColumnName("cond_tgrs_metric_volume");

//                entity.Property(e => e.EhtaneTgrsMcfeVolume).HasColumnName("ehtane_tgrs_mcfe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneGrsBoeVolume).HasColumnName("ethane_grs_boe_volume");

//                entity.Property(e => e.EthaneGrsImperialVolume).HasColumnName("ethane_grs_imperial_volume");

//                entity.Property(e => e.EthaneGrsMcfeVolume).HasColumnName("ethane_grs_mcfe_volume");

//                entity.Property(e => e.EthaneGrsMetricVolume).HasColumnName("ethane_grs_metric_volume");

//                entity.Property(e => e.EthaneNetBoeVolume).HasColumnName("ethane_net_boe_volume");

//                entity.Property(e => e.EthaneNetImperialVolume).HasColumnName("ethane_net_imperial_volume");

//                entity.Property(e => e.EthaneNetMcfeVolume).HasColumnName("ethane_net_mcfe_volume");

//                entity.Property(e => e.EthaneNetMetricVolume).HasColumnName("ethane_net_metric_volume");

//                entity.Property(e => e.EthaneTgrsBoeVolume).HasColumnName("ethane_tgrs_boe_volume");

//                entity.Property(e => e.EthaneTgrsImperialVolume).HasColumnName("ethane_tgrs_imperial_volume");

//                entity.Property(e => e.EthaneTgrsMetricVolume).HasColumnName("ethane_tgrs_metric_volume");

//                entity.Property(e => e.GasGrsBoeVolume).HasColumnName("gas_grs_boe_volume");

//                entity.Property(e => e.GasGrsImperialVolume).HasColumnName("gas_grs_imperial_volume");

//                entity.Property(e => e.GasGrsMcfeVolume).HasColumnName("gas_grs_mcfe_volume");

//                entity.Property(e => e.GasGrsMetricVolume).HasColumnName("gas_grs_metric_volume");

//                entity.Property(e => e.GasNetBoeVolume).HasColumnName("gas_net_boe_volume");

//                entity.Property(e => e.GasNetImperialVolume).HasColumnName("gas_net_imperial_volume");

//                entity.Property(e => e.GasNetMcfeVolume).HasColumnName("gas_net_mcfe_volume");

//                entity.Property(e => e.GasNetMetricVolume).HasColumnName("gas_net_metric_volume");

//                entity.Property(e => e.GasTgrsBoeVolume).HasColumnName("gas_tgrs_boe_volume");

//                entity.Property(e => e.GasTgrsImperialVolume).HasColumnName("gas_tgrs_imperial_volume");

//                entity.Property(e => e.GasTgrsMcfeVolume).HasColumnName("gas_tgrs_mcfe_volume");

//                entity.Property(e => e.GasTgrsMetricVolume).HasColumnName("gas_tgrs_metric_volume");

//                entity.Property(e => e.OilGrsBoeVolume).HasColumnName("oil_grs_boe_volume");

//                entity.Property(e => e.OilGrsImperialVolume).HasColumnName("oil_grs_imperial_volume");

//                entity.Property(e => e.OilGrsMcfeVolume).HasColumnName("oil_grs_mcfe_volume");

//                entity.Property(e => e.OilGrsMetricVolume).HasColumnName("oil_grs_metric_volume");

//                entity.Property(e => e.OilNetBoeVolume).HasColumnName("oil_net_boe_volume");

//                entity.Property(e => e.OilNetImperialVolume).HasColumnName("oil_net_imperial_volume");

//                entity.Property(e => e.OilNetMcfeVolume).HasColumnName("oil_net_mcfe_volume");

//                entity.Property(e => e.OilNetMetricVolume).HasColumnName("oil_net_metric_volume");

//                entity.Property(e => e.OilTgrsBoeVolume).HasColumnName("oil_tgrs_boe_volume");

//                entity.Property(e => e.OilTgrsImperialVolume).HasColumnName("oil_tgrs_imperial_volume");

//                entity.Property(e => e.OilTgrsMcfeVolume).HasColumnName("oil_tgrs_mcfe_volume");

//                entity.Property(e => e.OilTgrsMetricVolume).HasColumnName("oil_tgrs_metric_volume");

//                entity.Property(e => e.PentaneGrsBoeVolume).HasColumnName("pentane_grs_boe_volume");

//                entity.Property(e => e.PentaneGrsImperialVolume).HasColumnName("pentane_grs_imperial_volume");

//                entity.Property(e => e.PentaneGrsMcfeVolume).HasColumnName("pentane_grs_mcfe_volume");

//                entity.Property(e => e.PentaneGrsMetricVolume).HasColumnName("pentane_grs_metric_volume");

//                entity.Property(e => e.PentaneNetBoeVolume).HasColumnName("pentane_net_boe_volume");

//                entity.Property(e => e.PentaneNetImperialVolume).HasColumnName("pentane_net_imperial_volume");

//                entity.Property(e => e.PentaneNetMcfeVolume).HasColumnName("pentane_net_mcfe_volume");

//                entity.Property(e => e.PentaneNetMetricVolume).HasColumnName("pentane_net_metric_volume");

//                entity.Property(e => e.PentaneTgrsBoeVolume).HasColumnName("pentane_tgrs_boe_volume");

//                entity.Property(e => e.PentaneTgrsImperialVolume).HasColumnName("pentane_tgrs_imperial_volume");

//                entity.Property(e => e.PentaneTgrsMcfeVolume).HasColumnName("pentane_tgrs_mcfe_volume");

//                entity.Property(e => e.PentaneTgrsMetricVolume).HasColumnName("pentane_tgrs_metric_volume");

//                entity.Property(e => e.PropaneGrsBoeVolume).HasColumnName("propane_grs_boe_volume");

//                entity.Property(e => e.PropaneGrsImperialVolume).HasColumnName("propane_grs_imperial_volume");

//                entity.Property(e => e.PropaneGrsMcfeVolume).HasColumnName("propane_grs_mcfe_volume");

//                entity.Property(e => e.PropaneGrsMetricVolume).HasColumnName("propane_grs_metric_volume");

//                entity.Property(e => e.PropaneNetBoeVolume).HasColumnName("propane_net_boe_volume");

//                entity.Property(e => e.PropaneNetImperialVolume).HasColumnName("propane_net_imperial_volume");

//                entity.Property(e => e.PropaneNetMcfeVolume).HasColumnName("propane_net_mcfe_volume");

//                entity.Property(e => e.PropaneNetMetricVolume).HasColumnName("propane_net_metric_volume");

//                entity.Property(e => e.PropaneTgrsBoeVolume).HasColumnName("propane_tgrs_boe_volume");

//                entity.Property(e => e.PropaneTgrsImperialVolume).HasColumnName("propane_tgrs_imperial_volume");

//                entity.Property(e => e.PropaneTgrsMcfeVolume).HasColumnName("propane_tgrs_mcfe_volume");

//                entity.Property(e => e.PropaneTgrsMetricVolume).HasColumnName("propane_tgrs_metric_volume");
//            });

//            modelBuilder.Entity<VStgQbyteVolumesFactsIncr>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_qbyte_volumes_facts_incr", "stage");

//                entity.Property(e => e.ActivityMonthKey).HasColumnName("activity_month_key");

//                entity.Property(e => e.ButaneGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_grs_boe_volume");

//                entity.Property(e => e.ButaneGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_grs_imperial_volume");

//                entity.Property(e => e.ButaneGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_grs_mcfe_volume");

//                entity.Property(e => e.ButaneGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_grs_metric_volume");

//                entity.Property(e => e.ButaneNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_net_boe_volume");

//                entity.Property(e => e.ButaneNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_net_imperial_volume");

//                entity.Property(e => e.ButaneNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_net_mcfe_volume");

//                entity.Property(e => e.ButaneNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_net_metric_volume");

//                entity.Property(e => e.ButaneTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_tgrs_boe_volume");

//                entity.Property(e => e.ButaneTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_tgrs_imperial_volume");

//                entity.Property(e => e.ButaneTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_tgrs_mcfe_volume");

//                entity.Property(e => e.ButaneTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("butane_tgrs_metric_volume");

//                entity.Property(e => e.CondGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_grs_boe_volume");

//                entity.Property(e => e.CondGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_grs_imperial_volume");

//                entity.Property(e => e.CondGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_grs_mcfe_volume");

//                entity.Property(e => e.CondGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_grs_metric_volume");

//                entity.Property(e => e.CondNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_net_boe_volume");

//                entity.Property(e => e.CondNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_net_imperial_volume");

//                entity.Property(e => e.CondNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_net_mcfe_volume");

//                entity.Property(e => e.CondNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_net_metric_volume");

//                entity.Property(e => e.CondTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_tgrs_boe_volume");

//                entity.Property(e => e.CondTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_tgrs_imperial_volume");

//                entity.Property(e => e.CondTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_tgrs_mcfe_volume");

//                entity.Property(e => e.CondTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("cond_tgrs_metric_volume");

//                entity.Property(e => e.EhtaneTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ehtane_tgrs_mcfe_volume");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EthaneGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_grs_boe_volume");

//                entity.Property(e => e.EthaneGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_grs_imperial_volume");

//                entity.Property(e => e.EthaneGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_grs_mcfe_volume");

//                entity.Property(e => e.EthaneGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_grs_metric_volume");

//                entity.Property(e => e.EthaneNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_net_boe_volume");

//                entity.Property(e => e.EthaneNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_net_imperial_volume");

//                entity.Property(e => e.EthaneNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_net_mcfe_volume");

//                entity.Property(e => e.EthaneNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_net_metric_volume");

//                entity.Property(e => e.EthaneTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_tgrs_boe_volume");

//                entity.Property(e => e.EthaneTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_tgrs_imperial_volume");

//                entity.Property(e => e.EthaneTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("ethane_tgrs_metric_volume");

//                entity.Property(e => e.GasGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_grs_boe_volume");

//                entity.Property(e => e.GasGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_grs_imperial_volume");

//                entity.Property(e => e.GasGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_grs_mcfe_volume");

//                entity.Property(e => e.GasGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_grs_metric_volume");

//                entity.Property(e => e.GasNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_net_boe_volume");

//                entity.Property(e => e.GasNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_net_imperial_volume");

//                entity.Property(e => e.GasNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_net_mcfe_volume");

//                entity.Property(e => e.GasNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_net_metric_volume");

//                entity.Property(e => e.GasTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_tgrs_boe_volume");

//                entity.Property(e => e.GasTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_tgrs_imperial_volume");

//                entity.Property(e => e.GasTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_tgrs_mcfe_volume");

//                entity.Property(e => e.GasTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("gas_tgrs_metric_volume");

//                entity.Property(e => e.OilGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_grs_boe_volume");

//                entity.Property(e => e.OilGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_grs_imperial_volume");

//                entity.Property(e => e.OilGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_grs_mcfe_volume");

//                entity.Property(e => e.OilGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_grs_metric_volume");

//                entity.Property(e => e.OilNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_net_boe_volume");

//                entity.Property(e => e.OilNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_net_imperial_volume");

//                entity.Property(e => e.OilNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_net_mcfe_volume");

//                entity.Property(e => e.OilNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_net_metric_volume");

//                entity.Property(e => e.OilTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_tgrs_boe_volume");

//                entity.Property(e => e.OilTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_tgrs_imperial_volume");

//                entity.Property(e => e.OilTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_tgrs_mcfe_volume");

//                entity.Property(e => e.OilTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("oil_tgrs_metric_volume");

//                entity.Property(e => e.PentaneGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_grs_boe_volume");

//                entity.Property(e => e.PentaneGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_grs_imperial_volume");

//                entity.Property(e => e.PentaneGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_grs_mcfe_volume");

//                entity.Property(e => e.PentaneGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_grs_metric_volume");

//                entity.Property(e => e.PentaneNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_net_boe_volume");

//                entity.Property(e => e.PentaneNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_net_imperial_volume");

//                entity.Property(e => e.PentaneNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_net_mcfe_volume");

//                entity.Property(e => e.PentaneNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_net_metric_volume");

//                entity.Property(e => e.PentaneTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_tgrs_boe_volume");

//                entity.Property(e => e.PentaneTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_tgrs_imperial_volume");

//                entity.Property(e => e.PentaneTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_tgrs_mcfe_volume");

//                entity.Property(e => e.PentaneTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("pentane_tgrs_metric_volume");

//                entity.Property(e => e.PropaneGrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_grs_boe_volume");

//                entity.Property(e => e.PropaneGrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_grs_imperial_volume");

//                entity.Property(e => e.PropaneGrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_grs_mcfe_volume");

//                entity.Property(e => e.PropaneGrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_grs_metric_volume");

//                entity.Property(e => e.PropaneNetBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_net_boe_volume");

//                entity.Property(e => e.PropaneNetImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_net_imperial_volume");

//                entity.Property(e => e.PropaneNetMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_net_mcfe_volume");

//                entity.Property(e => e.PropaneNetMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_net_metric_volume");

//                entity.Property(e => e.PropaneTgrsBoeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_tgrs_boe_volume");

//                entity.Property(e => e.PropaneTgrsImperialVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_tgrs_imperial_volume");

//                entity.Property(e => e.PropaneTgrsMcfeVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_tgrs_mcfe_volume");

//                entity.Property(e => e.PropaneTgrsMetricVolume)
//                    .HasColumnType("numeric(38, 6)")
//                    .HasColumnName("propane_tgrs_metric_volume");
//            });

//            modelBuilder.Entity<VStgValnavBaseDeclineEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_valnav_base_decline_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<VStgValnavBudgetEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_valnav_budget_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<VStgValnavReservesEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_valnav_reserves_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<VStgValnavTypecurvesEntCustomFieldDef>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_stg_valnav_typecurves_ent_custom_field_def", "stage");

//                entity.Property(e => e.DateValue).HasColumnName("date_value");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(50)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NumericValue).HasColumnName("numeric_value");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.StringValue)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("string_value");
//            });

//            modelBuilder.Entity<VTypecurvesResultId>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_typecurves_result_id", "stage_valnav");

//                entity.Property(e => e.ResultId)
//                    .HasMaxLength(50)
//                    .HasColumnName("result_id");
//            });

//            modelBuilder.Entity<VUwisBySalesDispositionPoint>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_uwis_by_sales_disposition_points", "datamart_marketing");

//                entity.Property(e => e.SalesDispositionPoint)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("sales_disposition_point");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");
//            });

//            modelBuilder.Entity<VValnavDimHierarchySource>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_dim_hierarchy_source", "stage");

//                entity.Property(e => e.AcquiredFrom)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("acquired_from");

//                entity.Property(e => e.Area)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("area");

//                entity.Property(e => e.AreaCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("area_code");

//                entity.Property(e => e.AreaName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("area_name");

//                entity.Property(e => e.BottomHoleLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_latitude");

//                entity.Property(e => e.BottomHoleLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("bottom_hole_longitude");

//                entity.Property(e => e.BudgetGroup)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_group");

//                entity.Property(e => e.BudgetQuarter)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_quarter");

//                entity.Property(e => e.BudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year");

//                entity.Property(e => e.BudgetYearGroup)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("budget_year_group");

//                entity.Property(e => e.CStar).HasColumnName("c_star");

//                entity.Property(e => e.CapitalGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_group");

//                entity.Property(e => e.CapitalType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("capital_type");

//                entity.Property(e => e.CcNumWorkingInterestPct)
//                    .HasColumnType("numeric(38, 11)")
//                    .HasColumnName("cc_num_working_interest_pct");

//                entity.Property(e => e.CcTermDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_term_date");

//                entity.Property(e => e.CcType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type");

//                entity.Property(e => e.CcTypeCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_type_code");

//                entity.Property(e => e.Cgu)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("cgu");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.CompletionMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_month");

//                entity.Property(e => e.CompletionType)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("completion_type");

//                entity.Property(e => e.Corp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("corp");

//                entity.Property(e => e.CorpName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("corp_name");

//                entity.Property(e => e.CostCentre)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre");

//                entity.Property(e => e.CostCentreName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("cost_centre_name");

//                entity.Property(e => e.CreateDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("create_date");

//                entity.Property(e => e.CrstatusDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("crstatus_desc");

//                entity.Property(e => e.CurrentReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("current_reserves_property");

//                entity.Property(e => e.DeRisk)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("de_risk");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.DeviationFlag)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("deviation_flag");

//                entity.Property(e => e.DisposedFlag)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("disposed_flag");

//                entity.Property(e => e.DispositionArea)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_area");

//                entity.Property(e => e.DispositionFacility)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_facility");

//                entity.Property(e => e.DispositionPackage)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_package");

//                entity.Property(e => e.DispositionType)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("disposition_type");

//                entity.Property(e => e.District)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("district");

//                entity.Property(e => e.DistrictCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("district_code");

//                entity.Property(e => e.DistrictName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("district_name");

//                entity.Property(e => e.DrillDays)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("drill_days");

//                entity.Property(e => e.EntityKey)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_key");

//                entity.Property(e => e.EntityName)
//                    .HasMaxLength(100)
//                    .HasColumnName("entity_name");

//                entity.Property(e => e.EntitySource)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_source");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("facility");

//                entity.Property(e => e.FacilityCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_code");

//                entity.Property(e => e.FacilityName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("facility_name");

//                entity.Property(e => e.FirstProdMonth)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("first_prod_month");

//                entity.Property(e => e.FocusAreaFlag)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("focus_area_flag");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.GasShrinkageFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("gas_shrinkage_factor");

//                entity.Property(e => e.Group1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group1");

//                entity.Property(e => e.Group10)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group10");

//                entity.Property(e => e.Group2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group2");

//                entity.Property(e => e.Group3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group3");

//                entity.Property(e => e.Group4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group4");

//                entity.Property(e => e.Group5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group5");

//                entity.Property(e => e.Group6)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group6");

//                entity.Property(e => e.Group7)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group7");

//                entity.Property(e => e.Group8)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group8");

//                entity.Property(e => e.Group9)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("group9");

//                entity.Property(e => e.IncentiveType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Incentive_Type");

//                entity.Property(e => e.IsCcDim).HasColumnName("is_cc_dim");

//                entity.Property(e => e.IsValnav).HasColumnName("is_valnav");

//                entity.Property(e => e.KeyeraInlet)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("keyera_inlet");

//                entity.Property(e => e.LastProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("last_production_date");

//                entity.Property(e => e.LateralLength).HasColumnName("lateral_length");

//                entity.Property(e => e.LicenseNo)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("license_no");

//                entity.Property(e => e.Meridian)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("meridian");

//                entity.Property(e => e.MeterStation)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Meter_Station");

//                entity.Property(e => e.NglYieldFactor)
//                    .HasColumnType("numeric(12, 2)")
//                    .HasColumnName("ngl_yield_factor");

//                entity.Property(e => e.Nra)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("nra");

//                entity.Property(e => e.OnProductionDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("on_production_date");

//                entity.Property(e => e.OpNonop)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("op_nonop");

//                entity.Property(e => e.Origin)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin");

//                entity.Property(e => e.OriginGroup)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("origin_group");

//                entity.Property(e => e.Plant)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ProductionCategory)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("Production_Category");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("province");

//                entity.Property(e => e.PvunitCompletionName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_completion_name");

//                entity.Property(e => e.PvunitName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_name");

//                entity.Property(e => e.PvunitShortName)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("pvunit_short_name");

//                entity.Property(e => e.Range)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("range");

//                entity.Property(e => e.Region)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("region");

//                entity.Property(e => e.RegionCode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("region_code");

//                entity.Property(e => e.RegionName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("region_name");

//                entity.Property(e => e.ReserveRealizedDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("reserve_realized_date");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("rig_release_date");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.RoyaltyType)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("royalty_type");

//                entity.Property(e => e.Section)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("section");

//                entity.Property(e => e.SegmentStartDate)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("segment_start_date");

//                entity.Property(e => e.SourceDb)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("source_db");

//                entity.Property(e => e.SourceDbSortKey).HasColumnName("source_db_sort_key");

//                entity.Property(e => e.SpudDate)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("spud_date");

//                entity.Property(e => e.StratUnitId)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("strat_unit_id");

//                entity.Property(e => e.SurfLocation)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("surf_location");

//                entity.Property(e => e.SurfaceLatitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_latitude");

//                entity.Property(e => e.SurfaceLongitude)
//                    .HasColumnType("numeric(12, 7)")
//                    .HasColumnName("surface_longitude");

//                entity.Property(e => e.SurveySystemCode)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("survey_system_code");

//                entity.Property(e => e.TaxPools)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("tax_pools");

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("total_depth");

//                entity.Property(e => e.TotalProppantPlaced).HasColumnName("total_proppant_placed");

//                entity.Property(e => e.Township)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("township");

//                entity.Property(e => e.TvdDepth)
//                    .HasColumnType("numeric(10, 2)")
//                    .HasColumnName("tvd_depth");

//                entity.Property(e => e.TypeCurveKpi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("type_curve_kpi");

//                entity.Property(e => e.UnitCcName)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_name");

//                entity.Property(e => e.UnitCcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("unit_cc_num");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.UwiDesc)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi_desc");

//                entity.Property(e => e.ValnavBudgetYear)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("valnav_budget_year");

//                entity.Property(e => e.WellDirection)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("well_direction");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");

//                entity.Property(e => e.ZoneDesc)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_desc");

//                entity.Property(e => e.ZonePlay)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("zone_play");
//            });

//            modelBuilder.Entity<VValnavForecastStartDateBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_forecast_start_date_budget", "stage");

//                entity.Property(e => e.ForecastStartDate).HasColumnName("forecast_start_date");

//                entity.Property(e => e.FormattedId)
//                    .HasMaxLength(100)
//                    .HasColumnName("formatted_id");

//                entity.Property(e => e.InputForecastDate).HasColumnName("input_forecast_date");

//                entity.Property(e => e.ManualDate).HasColumnName("manual_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.SegmentStartDate).HasColumnName("segment_start_date");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<VValnavNetbackAccount>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_netback_accounts", "stage");

//                entity.Property(e => e.AccountId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("account_id");

//                entity.Property(e => e.ParentId)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("parent_id");

//                entity.Property(e => e.Path1)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path2)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path3)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path4)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);

//                entity.Property(e => e.Path5)
//                    .HasMaxLength(100)
//                    .IsUnicode(false);
//            });

//            modelBuilder.Entity<VValnavOnstreamDateBudget>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_onstream_date_budget", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<VValnavOnstreamDateReserf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_onstream_date_reserves", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<VValnavOnstreamDateTypecurf>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_onstream_date_typecurves", "stage");

//                entity.Property(e => e.FirstStepDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("first_step_date");

//                entity.Property(e => e.ObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("object_id");

//                entity.Property(e => e.UniqueId)
//                    .HasMaxLength(100)
//                    .HasColumnName("unique_id");
//            });

//            modelBuilder.Entity<VValnavTypeCurvesUwiWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_TypeCurves_uwi_working_interest", "stage");

//                entity.Property(e => e.CapCostInterest).HasColumnName("cap_cost_interest");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.EffectiveDate).HasColumnName("effective_date");

//                entity.Property(e => e.EntityObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_object_id");

//                entity.Property(e => e.FacilityInterest).HasColumnName("facility_interest");

//                entity.Property(e => e.FreeholdInterestReceivable).HasColumnName("freehold_interest_receivable");

//                entity.Property(e => e.GorReceivable).HasColumnName("gor_receivable");

//                entity.Property(e => e.IsReservesRealizedWi)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_reserves_realized_wi");

//                entity.Property(e => e.NextEffectiveDate).HasColumnName("next_effective_date");

//                entity.Property(e => e.NorReceivable).HasColumnName("nor_receivable");

//                entity.Property(e => e.OpCostInterest).HasColumnName("op_cost_interest");

//                entity.Property(e => e.PoolingFactor).HasColumnName("pooling_factor");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ReservesRealizedDate).HasColumnName("reserves_realized_date");

//                entity.Property(e => e.ReversionInterestObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("reversion_interest_object_id");

//                entity.Property(e => e.ReversionInterestParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("reversion_interest_parent_id");

//                entity.Property(e => e.RoyaltyFactor).HasColumnName("royalty_factor");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.SortIndex).HasColumnName("sort_index");

//                entity.Property(e => e.TractFactor).HasColumnName("tract_factor");

//                entity.Property(e => e.TractWorkingInterest).HasColumnName("tract_working_interest");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VValnavTypecurvesPriceDeck>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_typecurves_price_deck", "stage");

//                entity.Property(e => e.CubeChildMember)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("cube_child_member");

//                entity.Property(e => e.PriceDeck)
//                    .HasMaxLength(50)
//                    .HasColumnName("price_deck");
//            });

//            modelBuilder.Entity<VValnavUwiWorkingInterest>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_uwi_working_interest", "stage");

//                entity.Property(e => e.CapCostInterest).HasColumnName("cap_cost_interest");

//                entity.Property(e => e.ChanceOfSuccess).HasColumnName("chance_of_success");

//                entity.Property(e => e.DepthGci).HasColumnName("depth_gci");

//                entity.Property(e => e.EffectiveDate).HasColumnName("effective_date");

//                entity.Property(e => e.EntityObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("entity_object_id");

//                entity.Property(e => e.FacilityInterest).HasColumnName("facility_interest");

//                entity.Property(e => e.FreeholdInterestReceivable).HasColumnName("freehold_interest_receivable");

//                entity.Property(e => e.GorReceivable).HasColumnName("gor_receivable");

//                entity.Property(e => e.IsReservesRealizedWi)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_reserves_realized_wi");

//                entity.Property(e => e.NextEffectiveDate).HasColumnName("next_effective_date");

//                entity.Property(e => e.NorReceivable).HasColumnName("nor_receivable");

//                entity.Property(e => e.OpCostInterest).HasColumnName("op_cost_interest");

//                entity.Property(e => e.PoolingFactor).HasColumnName("pooling_factor");

//                entity.Property(e => e.PrimaryProduct)
//                    .HasMaxLength(50)
//                    .HasColumnName("primary_product");

//                entity.Property(e => e.ReservesRealizedDate).HasColumnName("reserves_realized_date");

//                entity.Property(e => e.ReversionInterestObjectId)
//                    .HasMaxLength(50)
//                    .HasColumnName("reversion_interest_object_id");

//                entity.Property(e => e.ReversionInterestParentId)
//                    .HasMaxLength(50)
//                    .HasColumnName("reversion_interest_parent_id");

//                entity.Property(e => e.RoyaltyFactor).HasColumnName("royalty_factor");

//                entity.Property(e => e.RoyaltyIncomeInterest).HasColumnName("royalty_income_interest");

//                entity.Property(e => e.SortIndex).HasColumnName("sort_index");

//                entity.Property(e => e.TractFactor).HasColumnName("tract_factor");

//                entity.Property(e => e.TractWorkingInterest).HasColumnName("tract_working_interest");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(100)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.WorkingInterest).HasColumnName("working_interest");
//            });

//            modelBuilder.Entity<VValnavXlsReservesUwi>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_valnav_xls_reserves_uwis", "stage");

//                entity.Property(e => e.CcNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("cc_num");

//                entity.Property(e => e.EntityGuid)
//                    .HasMaxLength(500)
//                    .IsUnicode(false)
//                    .HasColumnName("entity_guid");

//                entity.Property(e => e.FormattedUwi)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("formatted_uwi");

//                entity.Property(e => e.Uwi)
//                    .HasMaxLength(200)
//                    .IsUnicode(false)
//                    .HasColumnName("uwi");

//                entity.Property(e => e.YearEndReservesProperty)
//                    .HasMaxLength(1000)
//                    .IsUnicode(false)
//                    .HasColumnName("year_end_reserves_property");
//            });

//            modelBuilder.Entity<VVerifyVolumesQbyteVsVolumeCube>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_verify_volumes_qbyte_vs_volume_cube", "QA");

//                entity.Property(e => e.ActivityMonth)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("activity_month");

//                entity.Property(e => e.ActivityYear)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("activity_year");

//                entity.Property(e => e.BoeVolumeDiff).HasColumnName("BOE_VOLUME_DIFF");

//                entity.Property(e => e.GrossNetKey).HasColumnName("gross_net_key");

//                entity.Property(e => e.ImperialVolumeDiff).HasColumnName("IMPERIAL_VOLUME_DIFF");

//                entity.Property(e => e.McfeVolumeDiff).HasColumnName("MCFE_VOLUME_DIFF");

//                entity.Property(e => e.MetricVolumeDiff).HasColumnName("METRIC_VOLUME_DIFF");

//                entity.Property(e => e.QbyteBoeVolume).HasColumnName("qbyte_boe_volume");

//                entity.Property(e => e.QbyteImperialVolume).HasColumnName("qbyte_imperial_volume");

//                entity.Property(e => e.QbyteMcfeVolume).HasColumnName("qbyte_mcfe_volume");

//                entity.Property(e => e.QbyteMetricVolume).HasColumnName("qbyte_metric_volume");

//                entity.Property(e => e.TargetAccount)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("target_account");

//                entity.Property(e => e.VolumesCubeBoeVolume).HasColumnName("volumes_cube_boe_volume");

//                entity.Property(e => e.VolumesCubeImperialVolume).HasColumnName("volumes_cube_imperial_volume");

//                entity.Property(e => e.VolumesCubeMcfeVolume).HasColumnName("volumes_cube_mcfe_volume");

//                entity.Property(e => e.VolumesCubeMetricVolume).HasColumnName("volumes_cube_metric_volume");
//            });

//            modelBuilder.Entity<VWellviewSourceCostEstimate>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToView("v_wellview_source_cost_estimates", "stage");

//                entity.Property(e => e.AfeNum)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_num");

//                entity.Property(e => e.AfeSupp)
//                    .HasMaxLength(50)
//                    .IsUnicode(false)
//                    .HasColumnName("afe_supp");

//                entity.Property(e => e.Amount).HasColumnName("amount");

//                entity.Property(e => e.GlNetAccount)
//                    .HasMaxLength(201)
//                    .IsUnicode(false)
//                    .HasColumnName("gl_net_account");

//                entity.Property(e => e.GrsNetFlag)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("grs_net_flag");

//                entity.Property(e => e.IsValidAfe)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_afe");

//                entity.Property(e => e.IsValidQbyteMajor)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("is_valid_qbyte_major");

//                entity.Property(e => e.MajClassCode)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("maj_class_code");

//                entity.Property(e => e.MajorAcct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("major_acct");

//                entity.Property(e => e.MinorAcct)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("minor_acct");

//                entity.Property(e => e.Scenario)
//                    .HasMaxLength(14)
//                    .IsUnicode(false)
//                    .HasColumnName("scenario");

//                entity.Property(e => e.StartDate)
//                    .HasColumnType("datetime")
//                    .HasColumnName("start_date");

//                entity.Property(e => e.TimePeriod)
//                    .HasColumnType("datetime")
//                    .HasColumnName("time_period");

//                entity.Property(e => e.Vendorcode)
//                    .HasMaxLength(100)
//                    .IsUnicode(false)
//                    .HasColumnName("vendorcode");

//                entity.Property(e => e.WvAfeType)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("wv_afe_type");
//            });

//            modelBuilder.Entity<WDetail1>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("W_DETAIL1", "stage_csx_csland");

//                entity.Property(e => e.AbandonedDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ABANDONED_DATE");

//                entity.Property(e => e.AdminCompany)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("ADMIN_COMPANY")
//                    .IsFixedLength();

//                entity.Property(e => e.Area)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("AREA")
//                    .IsFixedLength();

//                entity.Property(e => e.CompletionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("COMPLETION_DATE");

//                entity.Property(e => e.ConfidentFlag)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("CONFIDENT_FLAG");

//                entity.Property(e => e.DirectionDrilled)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DIRECTION_DRILLED")
//                    .IsFixedLength();

//                entity.Property(e => e.District)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DISTRICT")
//                    .IsFixedLength();

//                entity.Property(e => e.Division)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("DIVISION")
//                    .IsFixedLength();

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.GovernAgmtOper)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERN_AGMT_OPER")
//                    .IsFixedLength();

//                entity.Property(e => e.GoverningContract)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNING_CONTRACT")
//                    .IsFixedLength();

//                entity.Property(e => e.GovernmentStatus)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVERNMENT_STATUS");

//                entity.Property(e => e.InjectionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("INJECTION_DATE");

//                entity.Property(e => e.LastProdDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LAST_PROD_DATE");

//                entity.Property(e => e.Latitude)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("LATITUDE");

//                entity.Property(e => e.LessorType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("LESSOR_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.Longitude)
//                    .HasColumnType("numeric(8, 0)")
//                    .HasColumnName("LONGITUDE");

//                entity.Property(e => e.MapLat)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MAP_LAT");

//                entity.Property(e => e.MapLong)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("MAP_LONG");

//                entity.Property(e => e.OnProductionDate)
//                    .HasColumnType("date")
//                    .HasColumnName("ON_PRODUCTION_DATE");

//                entity.Property(e => e.PayoutDate)
//                    .HasColumnType("date")
//                    .HasColumnName("PAYOUT_DATE");

//                entity.Property(e => e.Penalty)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PENALTY");

//                entity.Property(e => e.RigReleaseDate)
//                    .HasColumnType("date")
//                    .HasColumnName("RIG_RELEASE_DATE");

//                entity.Property(e => e.ShutinDate)
//                    .HasColumnType("date")
//                    .HasColumnName("SHUTIN_DATE");

//                entity.Property(e => e.ShutinReason)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("SHUTIN_REASON")
//                    .IsFixedLength();

//                entity.Property(e => e.SortedUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("SORTED_UWI");

//                entity.Property(e => e.SpudDate)
//                    .HasColumnType("date")
//                    .HasColumnName("SPUD_DATE");

//                entity.Property(e => e.StatusDate)
//                    .HasColumnType("date")
//                    .HasColumnName("STATUS_DATE");

//                entity.Property(e => e.WellLicensee)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_LICENSEE")
//                    .IsFixedLength();

//                entity.Property(e => e.WellName)
//                    .HasMaxLength(60)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_NAME");

//                entity.Property(e => e.WellStatus)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_STATUS")
//                    .IsFixedLength();

//                entity.Property(e => e.WellStatusDate)
//                    .HasColumnType("date")
//                    .HasColumnName("WELL_STATUS_DATE");

//                entity.Property(e => e.WellType)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_TYPE")
//                    .IsFixedLength();

//                entity.Property(e => e.WellUwi)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_UWI");
//            });

//            modelBuilder.Entity<WDetail2>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("W_DETAIL2", "stage_csx_csland");

//                entity.Property(e => e.AccountingProject)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ACCOUNTING_PROJECT");

//                entity.Property(e => e.Bounds)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("BOUNDS");

//                entity.Property(e => e.BoundsDirection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BOUNDS_DIRECTION");

//                entity.Property(e => e.ContractOperator)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CONTRACT_OPERATOR")
//                    .IsFixedLength();

//                entity.Property(e => e.Dsu)
//                    .HasColumnType("numeric(5, 1)")
//                    .HasColumnName("DSU");

//                entity.Property(e => e.DsuUom)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("DSU_UOM");

//                entity.Property(e => e.ExpiryDate)
//                    .HasColumnType("date")
//                    .HasColumnName("EXPIRY_DATE");

//                entity.Property(e => e.Facility)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FACILITY")
//                    .IsFixedLength();

//                entity.Property(e => e.Field)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD")
//                    .IsFixedLength();

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.GovtUnitCode)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("GOVT_UNIT_CODE")
//                    .IsFixedLength();

//                entity.Property(e => e.GroundElevation)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("GROUND_ELEVATION");

//                entity.Property(e => e.KellyBushingElev)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("KELLY_BUSHING_ELEV");

//                entity.Property(e => e.LaheeClass)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("LAHEE_CLASS");

//                entity.Property(e => e.LicenceDate)
//                    .HasColumnType("date")
//                    .HasColumnName("LICENCE_DATE");

//                entity.Property(e => e.LicenceNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("LICENCE_NUMBER");

//                entity.Property(e => e.Metes)
//                    .HasColumnType("numeric(6, 1)")
//                    .HasColumnName("METES");

//                entity.Property(e => e.MetesDirection)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("METES_DIRECTION");

//                entity.Property(e => e.PlugBackDepth)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("PLUG_BACK_DEPTH");

//                entity.Property(e => e.Pool)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL")
//                    .IsFixedLength();

//                entity.Property(e => e.ProducingZone)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCING_ZONE")
//                    .IsFixedLength();

//                entity.Property(e => e.ProjectedDepth)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("PROJECTED_DEPTH");

//                entity.Property(e => e.Reserve)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("RESERVE")
//                    .IsFixedLength();

//                entity.Property(e => e.SurfaceLocation)
//                    .HasMaxLength(20)
//                    .IsUnicode(false)
//                    .HasColumnName("SURFACE_LOCATION");

//                entity.Property(e => e.TargetZone)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("TARGET_ZONE")
//                    .IsFixedLength();

//                entity.Property(e => e.TotalDepth)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("TOTAL_DEPTH");

//                entity.Property(e => e.TotalDepthZone)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("TOTAL_DEPTH_ZONE")
//                    .IsFixedLength();

//                entity.Property(e => e.TrueVertDepth)
//                    .HasColumnType("numeric(7, 1)")
//                    .HasColumnName("TRUE_VERT_DEPTH");

//                entity.Property(e => e.UnitOfMeasure)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIT_OF_MEASURE");
//            });

//            modelBuilder.Entity<WatermarkTable>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("WatermarkTable", "dbo");

//                entity.Property(e => e.WatermarkColumn).HasMaxLength(255);

//                entity.Property(e => e.WatermarkDatetime).HasColumnType("datetime");

//                entity.Property(e => e.WatermarkTableName).HasMaxLength(255);

//                entity.Property(e => e.WatermarkValue).HasMaxLength(255);
//            });

//            modelBuilder.Entity<Well>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("WELLS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.Id)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ID");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.Province)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PROVINCE");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WellTractSysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("WELL_TRACT_SYS_ID");
//            });

//            modelBuilder.Entity<WellFactor>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("WELL_FACTORS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.AllOilToBeRecovered)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALL_OIL_TO_BE_RECOVERED");

//                entity.Property(e => e.AllWaterToBeRecovered)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ALL_WATER_TO_BE_RECOVERED");

//                entity.Property(e => e.BatteryGorExempt)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_GOR_EXEMPT");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.CrownAcquiredPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("CROWN_ACQUIRED_PERCENT");

//                entity.Property(e => e.CrownRoyaltyCalcTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("CROWN_ROYALTY_CALC_TYPE_CODE");

//                entity.Property(e => e.CrownRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("CROWN_ROYALTY_PERCENT");

//                entity.Property(e => e.EorHorRate)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("EOR_HOR_RATE");

//                entity.Property(e => e.EquivalentUseSubTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("EQUIVALENT_USE_SUB_TYPE_CODE");

//                entity.Property(e => e.FederalPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FEDERAL_PERCENT");

//                entity.Property(e => e.FourthTierGor)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("FOURTH_TIER_GOR");

//                entity.Property(e => e.FreeholdRoyaltyPercent)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("FREEHOLD_ROYALTY_PERCENT");

//                entity.Property(e => e.GasMeterFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("GAS_METER_FACTOR");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MarginalWell)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MARGINAL_WELL");

//                entity.Property(e => e.OilDensity)
//                    .HasColumnType("numeric(6, 2)")
//                    .HasColumnName("OIL_DENSITY");

//                entity.Property(e => e.OilGasRatioCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("OIL_GAS_RATIO_CODE");

//                entity.Property(e => e.OilGasRatioFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("OIL_GAS_RATIO_FACTOR");

//                entity.Property(e => e.OilGasRatioTestDate)
//                    .HasColumnType("date")
//                    .HasColumnName("OIL_GAS_RATIO_TEST_DATE");

//                entity.Property(e => e.OilMeterFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("OIL_METER_FACTOR");

//                entity.Property(e => e.PartMonthCrownRoyaltyCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("PART_MONTH_CROWN_ROYALTY_CODE");

//                entity.Property(e => e.ProcessForCrownInvoice)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("PROCESS_FOR_CROWN_INVOICE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.RemainingGasUsage)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("REMAINING_GAS_USAGE");

//                entity.Property(e => e.RoyaltyOilHolidaySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_OIL_HOLIDAY_SYS_ID");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WaterGasRatioCode)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_GAS_RATIO_CODE");

//                entity.Property(e => e.WaterGasRatioFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WATER_GAS_RATIO_FACTOR");

//                entity.Property(e => e.WaterGasRatioTestDate)
//                    .HasColumnType("date")
//                    .HasColumnName("WATER_GAS_RATIO_TEST_DATE");

//                entity.Property(e => e.WaterMeterFactor)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("WATER_METER_FACTOR");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");
//            });

//            modelBuilder.Entity<WellMaster>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("WELL_MASTERS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.BatteryFacilityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("BATTERY_FACILITY_ID");

//                entity.Property(e => e.CapSolutionWellType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("CAP_SOLUTION_WELL_TYPE");

//                entity.Property(e => e.CommingledWellType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMINGLED_WELL_TYPE");

//                entity.Property(e => e.CostCentreCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("COST_CENTRE_CODE");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.DlsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_EVENT_SEQUENCE");

//                entity.Property(e => e.DlsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("DLS_LOCATION_EXCEPTION");

//                entity.Property(e => e.DlsMeridian)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("DLS_MERIDIAN");

//                entity.Property(e => e.DlsRange)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_RANGE");

//                entity.Property(e => e.DlsSection)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SECTION");

//                entity.Property(e => e.DlsSubDivision)
//                    .HasColumnType("numeric(2, 0)")
//                    .HasColumnName("DLS_SUB_DIVISION");

//                entity.Property(e => e.DlsTownship)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("DLS_TOWNSHIP");

//                entity.Property(e => e.FieldCode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_CODE");

//                entity.Property(e => e.FieldPoolCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("FIELD_POOL_CODE");

//                entity.Property(e => e.FluidType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("FLUID_TYPE");

//                entity.Property(e => e.GovernmentLicenseNumber)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("GOVERNMENT_LICENSE_NUMBER");

//                entity.Property(e => e.HeavyOil)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("HEAVY_OIL");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.MbWellType)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("MB_WELL_TYPE");

//                entity.Property(e => e.MeasurementType)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("MEASUREMENT_TYPE");

//                entity.Property(e => e.Name)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("NAME");

//                entity.Property(e => e.NtsBlock)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_BLOCK");

//                entity.Property(e => e.NtsEventSequence)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("NTS_EVENT_SEQUENCE");

//                entity.Property(e => e.NtsLocationException)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_LOCATION_EXCEPTION");

//                entity.Property(e => e.NtsMapNumber1)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER1");

//                entity.Property(e => e.NtsMapNumber2)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER2");

//                entity.Property(e => e.NtsMapNumber3)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_MAP_NUMBER3");

//                entity.Property(e => e.NtsQuarterUnit)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_QUARTER_UNIT");

//                entity.Property(e => e.NtsUnit)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("NTS_UNIT");

//                entity.Property(e => e.OffShoreBlock)
//                    .HasColumnType("numeric(3, 0)")
//                    .HasColumnName("OFF_SHORE_BLOCK");

//                entity.Property(e => e.OffShoreQuadrant)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_QUADRANT");

//                entity.Property(e => e.OffShoreSubTract)
//                    .HasColumnType("numeric(1, 0)")
//                    .HasColumnName("OFF_SHORE_SUB_TRACT");

//                entity.Property(e => e.OffShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("OFF_SHORE_TRACT");

//                entity.Property(e => e.OilRoyaltyEntitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("OIL_ROYALTY_ENTITY_SYS_ID");

//                entity.Property(e => e.OnShoreConcession)
//                    .HasMaxLength(4)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_CONCESSION");

//                entity.Property(e => e.OnShoreLot)
//                    .HasMaxLength(3)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_LOT");

//                entity.Property(e => e.OnShoreTownship)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TOWNSHIP");

//                entity.Property(e => e.OnShoreTract)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_TRACT");

//                entity.Property(e => e.OnShoreZone)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("ON_SHORE_ZONE");

//                entity.Property(e => e.PaResponsibleUserId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PA_RESPONSIBLE_USER_ID");

//                entity.Property(e => e.PartnerOperatedRegistryId)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("PARTNER_OPERATED_REGISTRY_ID");

//                entity.Property(e => e.PoolCode)
//                    .HasMaxLength(12)
//                    .IsUnicode(false)
//                    .HasColumnName("POOL_CODE");

//                entity.Property(e => e.ProductionDate)
//                    .HasColumnType("numeric(6, 0)")
//                    .HasColumnName("PRODUCTION_DATE");

//                entity.Property(e => e.ProductionStatus)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("PRODUCTION_STATUS");

//                entity.Property(e => e.RecombinedLiquidAndGas)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("RECOMBINED_LIQUID_AND_GAS");

//                entity.Property(e => e.ReportLiquidAsCondensate)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_LIQUID_AS_CONDENSATE");

//                entity.Property(e => e.ReportZeroProduction)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORT_ZERO_PRODUCTION");

//                entity.Property(e => e.ReportingWellIdentifier)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("REPORTING_WELL_IDENTIFIER");

//                entity.Property(e => e.RoyaltyEntitySysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("ROYALTY_ENTITY_SYS_ID");

//                entity.Property(e => e.SurveySystem)
//                    .HasMaxLength(6)
//                    .IsUnicode(false)
//                    .HasColumnName("SURVEY_SYSTEM");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.UniqueWellIdentifier)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("UNIQUE_WELL_IDENTIFIER");

//                entity.Property(e => e.UserDefined1)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED1");

//                entity.Property(e => e.UserDefined2)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("USER_DEFINED2");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");

//                entity.Property(e => e.WaterTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WATER_TYPE_CODE");

//                entity.Property(e => e.WellDepth)
//                    .HasColumnType("numeric(5, 1)")
//                    .HasColumnName("WELL_DEPTH");

//                entity.Property(e => e.WellId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("WELL_ID");
//            });

//            modelBuilder.Entity<WellTract>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("WELL_TRACTS", "STAGE_METRIX_METRIX");

//                entity.Property(e => e.CreateDateTime).HasColumnName("CREATE_DATE_TIME");

//                entity.Property(e => e.CreateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_PROGRAM");

//                entity.Property(e => e.CreateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("CREATE_USER");

//                entity.Property(e => e.EntityId)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_ID");

//                entity.Property(e => e.EntityTypeCode)
//                    .HasMaxLength(16)
//                    .IsUnicode(false)
//                    .HasColumnName("ENTITY_TYPE_CODE");

//                entity.Property(e => e.LastUpdateAuditId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("LAST_UPDATE_AUDIT_ID");

//                entity.Property(e => e.LastUpdateDateTime).HasColumnName("LAST_UPDATE_DATE_TIME");

//                entity.Property(e => e.LastUpdateProgram)
//                    .HasMaxLength(120)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_PROGRAM");

//                entity.Property(e => e.LastUpdateUser)
//                    .HasMaxLength(30)
//                    .IsUnicode(false)
//                    .HasColumnName("LAST_UPDATE_USER");

//                entity.Property(e => e.SysId)
//                    .HasColumnType("numeric(16, 0)")
//                    .HasColumnName("SYS_ID");

//                entity.Property(e => e.Version)
//                    .HasColumnType("numeric(10, 0)")
//                    .HasColumnName("VERSION");
//            });

//            modelBuilder.Entity<XReference>(entity =>
//            {
//                entity.HasNoKey();

//                entity.ToTable("X_REFERENCE", "stage_csx_csland");

//                entity.Property(e => e.Comments)
//                    .HasMaxLength(40)
//                    .IsUnicode(false)
//                    .HasColumnName("COMMENTS");

//                entity.Property(e => e.FileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.FileSub)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("FILE_SUB")
//                    .IsFixedLength();

//                entity.Property(e => e.RelFileNumber)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("REL_FILE_NUMBER")
//                    .IsFixedLength();

//                entity.Property(e => e.RelFileSub)
//                    .HasMaxLength(2)
//                    .IsUnicode(false)
//                    .HasColumnName("REL_FILE_SUB")
//                    .IsFixedLength();

//                entity.Property(e => e.RelSubsystem)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("REL_SUBSYSTEM");

//                entity.Property(e => e.Relationship)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("RELATIONSHIP")
//                    .IsFixedLength();

//                entity.Property(e => e.SubAlloc1)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("SUB_ALLOC_1");

//                entity.Property(e => e.SubAlloc2)
//                    .HasColumnType("numeric(11, 8)")
//                    .HasColumnName("SUB_ALLOC_2");

//                entity.Property(e => e.SubType1)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("SUB_TYPE_1")
//                    .IsFixedLength();

//                entity.Property(e => e.SubType2)
//                    .HasMaxLength(10)
//                    .IsUnicode(false)
//                    .HasColumnName("SUB_TYPE_2")
//                    .IsFixedLength();

//                entity.Property(e => e.Subsystem)
//                    .HasMaxLength(1)
//                    .IsUnicode(false)
//                    .HasColumnName("SUBSYSTEM");
//            });

//            OnModelCreatingPartial(modelBuilder);
//        }

//        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
//    }
//}
